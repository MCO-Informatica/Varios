#include "totvs.ch"
#include "rwmake.ch"
#Include "Protheus.Ch"
#include "topconn.ch"
#include "tbiconn.ch"
#include "tbicode.ch"

// IMPRESSORA TLP2844
#define cPorta  "LPT1"
#define cModelo "ELTRON"

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³DHFATR37  ºAutor  ³                    º Data ³  22/10/15   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Emissão de Etiqueta show-room                              º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

User Function DHFATR37() 
                                                  
Private aProd := {}
Private cMarca  := GetMark()
Private cTrab   := ""

Processa({|| MontaArr()}, "Filtrando Dados...") 
Processa({|| GeraTmp()}, "Criando Interface...") 

Return

User Function DHFTR37IMP()

LOCAL _nCont := 0   // Qtde de Registros Marcados
Local cTAM   := 25  // Tamanho maximo da Etiqueta em colunas

LOCAL c1_campo01:=c1_campo02:=c1_campo03:=c1_campo04:=c1_campo05:=c1_campo06:=c1_campo07:=c1_campo08:=c1_campo09:=c1_campo10:=""
LOCAL c2_campo01:=c2_campo02:=c2_campo03:=c2_campo04:=c2_campo05:=c2_campo06:=c2_campo07:=c2_campo08:=c2_campo09:=c2_campo10:=""
LOCAL c3_campo01:=c3_campo02:=c3_campo03:=c3_campo04:=c3_campo05:=c3_campo06:=c3_campo07:=c3_campo08:=c3_campo09:=c3_campo10:=""

// Alteracao 16/10/2015 - Para informar ao usuario a quantidade de etiquetas a serem impressas
dbselectarea("TMP")
TMP->(dbgotop())
Do While !eof()
	If Trim(TMP->OK)==cMarca
		_nCont++
	EndIf
	dbSkip()
EndDo	

If Aviso( "QTDE DE ETIQUETAS" , "Foram Selecionados " + AllTrim(Str(_nCont,10)) + " Itens para Imprimir. Continuar ?" , {"Sim","Nao"} )==2
	dbGotop()
	Return(.T.)
EndIf

MSCBPRINTER(cModelo, cPorta)
MSCBCHKStatus(.f.)

dbselectarea("TMP")
TMP->(dbgotop())
ProcRegua(TMP->(RecCount()))           

While !TMP->(EOF())
	
	IncProc("Selecionando Produto " + TMP->CODIGO)

	c1_campo01:=c1_campo02:=c1_campo03:=c1_campo04:=c1_campo05:=c1_campo06:=c1_campo07:=c1_campo08:=c1_campo09:=c1_campo10:=""
	c2_campo01:=c2_campo02:=c2_campo03:=c2_campo04:=c2_campo05:=c2_campo06:=c2_campo07:=c2_campo08:=c2_campo09:=c2_campo10:=""
	c3_campo01:=c3_campo02:=c3_campo03:=c3_campo04:=c3_campo05:=c3_campo06:=c3_campo07:=c3_campo08:=c3_campo09:=c3_campo10:=""
	            
	Do While TMP->OK <> cMarca .AND. !Eof()
		dbSkip()
	EndDo

 	If TMP->(!EOF())

		c1_campo01 := SUBSTR(TMP->CODIGO,1,cTAM)
		c1_campo02 := TMP->DESC  ///TMP1->B1_DESC
		c1_campo03 := Trim(TMP->UM) + " - " + Trim(TMP->CX)
		//c1_campo04 := TMP->CX

	   	If MV_PAR08 == 1
			IF TMP->VIPI > 0
				c1_campo05 := "IPI " + Alltrim( Transform(TMP->VIPI,"@E 999.99") ) + "%"
			Endif
		Endif	

	   	If MV_PAR08 == 1  // Alteracao 16/10/2015 - Se o parametro imprimir IPI = Nao, deve ser somado o IPI no Valor
			c1_campo06 := "Valor: R$ " + Alltrim( Transform(TMP->VL,PesqPict("SF1", "F1_VALBRUT")))
		Else
			c1_campo06 := "Valor: R$ " + Alltrim( Transform( Iif( TMP->VIPI>0, TMP->VL*(1+(TMP->VIPI/100)), TMP->VL ), PesqPict("SF1", "F1_VALBRUT") ) )
	    EndIf

		IF TMP->DES > 0
			//c1_campo07 := "Promoção R$ " + Alltrim(Transform(TMP->DES,PesqPict("SF1", "F1_VALBRUT")))
			c1_campo07 := "Promoção R$ " + Alltrim(Transform(Iif( TMP->VIPI>0 .and. MV_PAR08 == 2, TMP->DES*(1+(TMP->VIPI/100)), TMP->DES ), PesqPict("SF1", "F1_VALBRUT") ))
			
		Endif

		If mv_par09 == 1	
			c1_campo08 := Iif( Empty(TMP->CODBAR), " ", Trim(TMP->CODBAR) )
	    EndIf

   	Endif
    	
	TMP->(dbSkip())
	Do While TMP->OK <> cMarca  .AND. !Eof()
		dbSkip()
	EndDo
	
 	If TMP->(!EOF())

		c2_campo01 := SUBSTR(TMP->CODIGO,1,cTAM)
		c2_campo02 := TMP->DESC  ///TMP1->B1_DESC
		c2_campo03 := Trim(TMP->UM) + " - " + Trim(TMP->CX)
		//c2_campo04 := TMP->CX

	   	If MV_PAR08 == 1
			IF TMP->VIPI > 0
				c2_campo05 := "IPI " + Alltrim( Transform(TMP->VIPI,"@E 999.99") ) + "%"
			Endif
		Endif	

	   	If MV_PAR08 == 1  // Alteracao 16/10/2015 - Se o parametro imprimir IPI = Nao, deve ser somado o IPI no Valor
			c2_campo06 := "Valor: R$ " + Alltrim( Transform(TMP->VL,PesqPict("SF1", "F1_VALBRUT")))
		Else
			c2_campo06 := "Valor: R$ " + Alltrim( Transform( Iif( TMP->VIPI>0, TMP->VL*(1+(TMP->VIPI/100)), TMP->VL ), PesqPict("SF1", "F1_VALBRUT") ) )
		EndIf

		IF TMP->DES > 0
			//c2_campo07 := "Promoção R$ " + Alltrim(Transform(Iif( TMP->VIPI>0, TMP->VL*(1+(TMP->VIPI/100)), TMP->VL ), PesqPict("SF1", "F1_VALBRUT") ))
			c2_campo07 := "Promoção R$ " + Alltrim(Transform(Iif( TMP->VIPI>0 .and. MV_PAR08 == 2, TMP->DES*(1+(TMP->VIPI/100)), TMP->DES ), PesqPict("SF1", "F1_VALBRUT") ))
		Endif

		If mv_par09 == 1	
			c2_campo08 := Iif( Empty(TMP->CODBAR), " ", Trim(TMP->CODBAR) )
	    EndIf

   	Endif

	TMP->(dbSkip())
	Do While TMP->OK <> cMarca  .AND. !Eof()
		dbSkip()
	EndDo

 	If TMP->(!EOF())

		c3_campo01 := SUBSTR(TMP->CODIGO,1,cTAM)
		c3_campo02 := TMP->DESC  ///TMP1->B1_DESC
		c3_campo03 := Trim(TMP->UM) + " - " + Trim(TMP->CX)
		//c3_campo04 := TMP->CX

	   	If MV_PAR08 == 1
			IF TMP->VIPI > 0
				c3_campo05 := "IPI " + Alltrim( Transform(TMP->VIPI,"@E 999.99") ) + "%"
			Endif
		Endif	

	   	If MV_PAR08 == 1  // Alteracao 16/10/2015 - Se o parametro imprimir IPI = Nao, deve ser somado o IPI no Valor
			c3_campo06 := "Valor: R$ " + Alltrim( Transform(TMP->VL,PesqPict("SF1", "F1_VALBRUT")))
		Else
			c3_campo06 := "Valor: R$ " + Alltrim( Transform( Iif( TMP->VIPI>0, TMP->VL*(1+(TMP->VIPI/100)), TMP->VL ), PesqPict("SF1", "F1_VALBRUT") ) )
	    EndIf

		IF TMP->DES > 0
			//c3_campo07 := "Promoção R$ " + Alltrim(Transform(Iif( TMP->VIPI>0, TMP->VL*(1+(TMP->VIPI/100)), TMP->VL ), PesqPict("SF1", "F1_VALBRUT") ))
			c3_campo07 := "Promoção R$ " + Alltrim(Transform(Iif( TMP->VIPI>0 .and. MV_PAR08 == 2, TMP->DES*(1+(TMP->VIPI/100)), TMP->DES ), PesqPict("SF1", "F1_VALBRUT") ))
			
		Endif

		If mv_par09 == 1	
			c3_campo08 := Iif( Empty(TMP->CODBAR), " ", Trim(TMP->CODBAR) )
	    EndIf

   	Endif
  
	 MSCBBEGIN(1,6)	                
		 
 	 MSCBSAY(01,01,SUBSTR(c1_campo01,1,cTAM), "N", "1", "2,2")	 	//"1,1" 
 	 MSCBSAY(01,05,SUBSTR(c1_campo02,1,cTAM), "N", "1", "1,1")       
 	 MSCBSAY(01,07,SUBSTR(c1_campo03,1,cTAM), "N", "1", "1,1")       
 	 //MSCBSAY(01,09,SUBSTR(c1_campo04,1,cTAM), "N", "1", "1,1")       
 	 MSCBSAY(01,09,SUBSTR(c1_campo05,1,cTAM), "N", "1", "1,2")       
 	 MSCBSAY(01,12.5,SUBSTR(c1_campo06,1,cTAM), "N", "1", "1,2")       
 	 MSCBSAY(01,16,SUBSTR(c1_campo07,1,cTAM), "N", "1", "1,2")       
    // MSCBSAYBAR(01,13.5,c1_campo08,'N','MB04',07,.F.,.F.,,,2,1)
 	 MSCBSAYBAR(01,20,c1_campo08,'N','MB04',07,.F.,.F.,,,2,1)
 	 //MSCBSAY(01,24,SUBSTR(c1_campo09,1,cTAM), "N", "1", "1,1")       
 	 //MSCBSAY(01,26,SUBSTR(c1_campo10,1,cTAM), "N", "1", "1,1")       


 	 MSCBSAY(36,01,SUBSTR(c2_campo01,1,cTAM), "N", "1", "2,2")	 	 
 	 MSCBSAY(36,05,SUBSTR(c2_campo02,1,cTAM), "N", "1", "1,1")       
 	 MSCBSAY(36,07,SUBSTR(c2_campo03,1,cTAM), "N", "1", "1,1")       
 	 //MSCBSAY(36,09,SUBSTR(c2_campo04,1,cTAM), "N", "1", "1,1")       
 	 MSCBSAY(36,09,SUBSTR(c2_campo05,1,cTAM), "N", "1", "1,2")       
 	 MSCBSAY(36,12.5,SUBSTR(c2_campo06,1,cTAM), "N", "1", "1,2")
  	 MSCBSAY(36,16,SUBSTR(c2_campo07,1,cTAM), "N", "1", "1,2")       
     //MSCBSAYBAR(36,13.5,c2_campo07,'N','MB04',07,.F.,.F.,,,2,1)
 	 MSCBSAYBAR(36,20,c2_campo08,'N','MB04',07,.F.,.F.,,,2,1)
 	 //MSCBSAY(36,24,SUBSTR(c2_campo09,1,cTAM), "N", "1", "1,1")       
 	 //MSCBSAY(36,26,SUBSTR(c2_campo10,1,cTAM), "N", "1", "1,1")       


 	 MSCBSAY(71,01,SUBSTR(c3_campo01,1,cTAM), "N", "1", "2,2")	 	 
 	 MSCBSAY(71,05,SUBSTR(c3_campo02,1,cTAM), "N", "1", "1,1")       
 	 MSCBSAY(71,07,SUBSTR(c3_campo03,1,cTAM), "N", "1", "1,1")       
 	 //MSCBSAY(71,09,SUBSTR(c3_campo04,1,cTAM), "N", "1", "1,1")       
	 MSCBSAY(71,09,SUBSTR(c3_campo05,1,cTAM), "N", "1", "1,2")       
 	 MSCBSAY(71,12.5,SUBSTR(c3_campo06,1,cTAM), "N", "1", "1,2")       
 	 MSCBSAY(71,16,SUBSTR(c3_campo07,1,cTAM), "N", "1", "1,2")       
     //MSCBSAYBAR(71,13.5,c3_campo07,'N','MB04',07,.F.,.F.,,,2,1)
 	 MSCBSAYBAR(71,20,c3_campo08,'N','MB04',07,.F.,.F.,,,2,1)
 	 //MSCBSAY(71,24,SUBSTR(c3_campo09,1,cTAM), "N", "1", "1,1")       
 	 //MSCBSAY(71,26,SUBSTR(c3_campo10,1,cTAM), "N", "1", "1,1")       
		
	 MSCBEND()
		 
	 SLEEP(600)
    
	TMP->(DbSkip())
Enddo	

TMP->( dbGoTop() )

MSCBCLOSEPRINTER()

Return .T. 
          





//-- Gera o arquivo temporário com base no array de produtos
Static Function GeraTmp()

Local aCampos 	:= { {'OK',,''},{'CODIGO',,'Codigo'},{'DESC',,'Descrição'},{'UM',,'Uni. Med.'},{'VL',,'Valor'},{'DES',,'Promoção'},{'VIPI',,'IPI'} }//'Desconto'} }
Local cFiltro   := ""

Private cCadastro:= 'Cadastro Temp'
Private aRotina := {{"Gerar Etiq.",'U_DHFTR37IMP()',0,3}}
Private lRefresh:= .F.
Private aClientes := {}

aStru := {}
aadd(aStru,{"OK", "C",2,0})
aadd(aStru,{"CODIGO", "C",40,0})
aadd(aStru,{"UM", "C",10,0})
aadd(aStru,{"VL", "N",12,2})
aadd(aStru,{"DES", "N",12,2}) 
aadd(aStru,{"DESC", "C",30,0})  
aadd(aStru,{"VIPI", "N",12,2}) 
aadd(aStru,{"CX", "C",10,0})
aadd(aStru,{"CODBAR", "C",40,0})
    
If select("TMP") > 0
	dbselectarea("TMP")
	dbCloseArea() // Alteracao 16/10/2015 - Fechar o arquivo anterior - Correcao travamento da rotina a partir da segunda execucao.
Endif

cTrab := CriaTrab(aStru,.t.)
Use &cTrab New alias TMP
dbCreateIndex(cTrab+".cdx", "CODIGO")

For nX := 1 to Len(aProd)
	
	//SB1->( dbsetorder(1) )
	//SB1->( dbseek(XFilial("SB1")+aProd[nX][1]) )
	
	RecLock( 'TMP', .T. )
	TMP->CODIGO	:= aProd[nX][1]
    TMP->CX		:= aProd[nX][2]	
    TMP->UM		:= aProd[nX][3]
    TMP->VL		:= Round( aProd[nX][4] , 2 )
   	TMP->DES 	:= Round( aProd[nX][5] , 2 )
   	TMP->CODBAR := StrTran( aProd[nX][6] , " " , "" )
   	TMP->DESC	:= aProd[nX][7]  
  	TMP->VIPI	:= aProd[nX][8]
	MsUnLock('TMP')	   

Next nX
              
dbSelectArea("TMP")
TMP->(DBGoTop())
MarkBrow( 'TMP', 'OK','!CODIGO',aCampos,, cMarca,'U_DHFTR372M()',,,,'U_DHFTR371M()' )

dbselectarea("TMP")
dbCloseArea() // Alteracao 16/10/2015 - Fechar o arquivo anterior - Correcao travamento da rotina a partir da segunda execucao.

// Apaga arquivo temporario
Ferase(cTrab+".dbf")
Ferase(cTrab+".cdx")  

Return 



 

User Function DHFTR371M() // BMRKF001()

If IsMark( 'OK', cMarca )
	RecLock( 'TMP', .F. )
	Replace OK With Space(2)
	TMP->(MsUnLock())
Else
	RecLock( 'TMP', .F. )
	Replace OK With cMarca
	TMP->(MsUnLock())
EndIf

// Atualiza a markbrowse
MarkBRefresh( )

Return Nil




User Function DHFTR372M()  //BMRKAF001()

dbSelectArea("TMP")
TMP->(dbGoTop())

While TMP->(!Eof())
	If IsMark( 'OK', cMarca )
		RecLock( 'TMP', .F. )
		TMP->OK := Space(2)
		TMP->(MsUnLock())
	Else
		RecLock( 'TMP', .F. )
		TMP->OK := cMarca
		TMP->(MsUnLock())
	EndIf
	TMP->(dbSkip())
EndDo
            
// Atualiza a markbrowse
MarkBRefresh( )
Return Nil



User Function DHFTR37TMP()   //BTmpEtiq()

dbSelectArea("TMP")
TMP->(dbGoTop())

While !TMP->(Eof())
	If Empty(TMP->OK)
		Reclock("TMP", .F.)  
  		dbdelete()
    	TMP->(MsUnlock())	
  	EndIf
  	TMP->(dbSkip())
EndDo          

// Atualiza a markbrowse
MarkBRefresh()           
Return               




Static Function MontaArr()

Local cQuery := ""
Private cPerg:= "DHFATR37"

AjustaSX1(cPerg) 

Pergunte(cPerg,.T.)

cQuery := "SELECT "
cQuery += "	DA1_CODPRO, "
cQuery += " DA1_CODTAB, "
cQuery += " DA1_PRCVEN, "
cQuery += " DA1_VLRDES, "
cQuery += " DA1_DESC, "
cQuery += " DA0_FILIAL, "
cQuery += " DA0_CODTAB, "+CRLF
cQuery += " B1_GRUPO, " 
cQuery += " B1_COD, "
cQuery += " B1_DESC, "
cQuery += " B1_IPI, "    
cQuery += " B1_DHQE, "   
cQuery += " B1_UMRES, 
//cQuery += " B1_DHCODBA "+CRLF
cQuery += " B1_EAN13 "+CRLF
cQuery += "FROM  "+RetSqlName("DA1")+" DA1,"+RetSQLName("DA0")+" DA0,"+Retsqlname("SB1")+" SB1 "+CRLF
cQuery += "WHERE DA1.D_E_L_E_T_ = ' '"+CRLF
cQuery += "AND  DA0.D_E_L_E_T_ = ' '"+CRLF  
cQuery += "AND  SB1.D_E_L_E_T_ = ' '"+CRLF  
cQuery += "AND DA1_CODTAB = DA0_CODTAB "+CRLF
cQuery += "AND DA1_CODPRO = B1_COD "+CRLF
cQuery += "AND DA1_CODPRO BETWEEN '"+MV_PAR01+"' AND '"+MV_PAR02+"'  "+CRLF
cQuery += "AND B1_GRUPO BETWEEN '"+MV_PAR03+"' AND '"+MV_PAR04+"' "+CRLF 
cQuery += "AND DA0_CODTAB BETWEEN '"+MV_PAR06+"' AND '"+MV_PAR07+"' "+CRLF

If MV_PAR05 == 1 .Or. MV_PAR05 == 2
	cQuery += "AND SB1.B1_DHABSM = '"+IIF( MV_PAR05 == 1 , "T" , "F" ) + "' "+CRLF
Endif

cQuery += " ORDER BY DA1_CODPRO"

If Select("TMPDA1") > 0
   	TMPDA1->( dbCloseArea() )
EndIf

cQuery := ChangeQuery(cQuery)
TCQUERY cQuery NEW ALIAS "TMPDA1"

dbSelectArea("TMPDA1")
TMPDA1->(dbGoTop())

While TMPDA1->(!Eof())
	If TMPDA1->DA1_DESC > 0
		//AAdd(aProd, {TMPDA1->B1_COD,TMPDA1->B1_DHQE,TMPDA1->B1_UMRES,TMPDA1->DA1_PRCVEN,(TMPDA1->DA1_PRCVEN - TMPDA1->DA1_VLRDES), TMPDA1->B1_DHCODBA, TMPDA1->B1_DESC, TMPDA1->B1_IPI })
		AAdd(aProd, {TMPDA1->B1_COD,TMPDA1->B1_DHQE,TMPDA1->B1_UMRES,TMPDA1->DA1_PRCVEN,(TMPDA1->DA1_PRCVEN - TMPDA1->DA1_VLRDES), TMPDA1->B1_EAN13, TMPDA1->B1_DESC, TMPDA1->B1_IPI })
	Else
		//AAdd(aProd, {TMPDA1->B1_COD,TMPDA1->B1_DHQE,TMPDA1->B1_UMRES,TMPDA1->DA1_PRCVEN, 0 , TMPDA1->B1_DHCODBA, TMPDA1->B1_DESC, TMPDA1->B1_IPI})
		AAdd(aProd, {TMPDA1->B1_COD,TMPDA1->B1_DHQE,TMPDA1->B1_UMRES,TMPDA1->DA1_PRCVEN, 0 , TMPDA1->B1_EAN13, TMPDA1->B1_DESC, TMPDA1->B1_IPI})
	EndIf
    TMPDA1->(dbSkip())
EndDo
                                           
TMPDA1->( dbCloseArea() ) 

Return aProd







Static Function AjustaSX1(cPerg)

PutSx1( cPerg, "01", "Produto de ?" 		,""	,"","mv_ch1", "C", 15, 0, 0, "G", "","SB1", "", "", "mv_par01",,,,,,,,,,,,,,,,,{"Codigo Produto Inicial", "para considerar na", "geração do relatório."},{},{} )
PutSx1( cPerg, "02", "Produto Até ?"		,""	,"","mv_ch2", "C", 15, 0, 0, "G", "","SB1", "", "", "mv_par02",,,,,,,,,,,,,,,,,{"Codigo Produto Final",   "para considerar na", "geração do relatório."},{},{} )
PutSx1( cPerg, "03", "Grupo de ?"			,""	,"","mv_ch3", "C", 04, 0, 0, "G", "","SBM", "", "", "mv_par03",,,,,,,,,,,,,,,,,{"Grupo De",               	"para considerar na", "geração do relatório."},{},{} )
PutSx1( cPerg, "04", "Grupo Até ?"			,""	,"","mv_ch4", "C", 04, 0, 0, "G", "","SBM", "", "", "mv_par04",,,,,,,,,,,,,,,,,{"Grupo Ate",              	"para considerar na", "geração do relatório."},{},{} )
PutSx1( cPerg, "05", "Imprime Abismo ?"		,""	,"","mv_ch5", "N", 01, 0, 1, "C", "","","", "","mv_par05","Sim","Sim","Sim",'',"Não","Não","Não","Ambos","Ambos","Ambos",,,,'','','',{"Com ou Sem Abismo",      "para considerar na", "geração do relatório."},{},{} )
PutSx1( cPerg, "06", "Tabela\preço De ?"	,""	,"","mv_ch6", "C", 04, 0, 0, "G", "","DA0", "", "", "mv_par06",,,,,,,,,,,,,,,,,{"Tabela\preço De",         "para considerar na", "geração do relatório."},{},{} )
PutSx1( cPerg, "07", "Tabela\preço Até"		,""	,"","mv_ch7", "C", 04, 0, 0, "G", "","DA0", "", "", "mv_par07",,,,,,,,,,,,,,,,,{"Tabela\preço Até",        "para considerar na", "geração do relatório."},{},{} )
PutSx1( cPerg, "08", "Imprime IPI ?"		,""	,"","mv_ch8", "N", 01, 0, 1, "C", "","","", "","mv_par08","Sim","Sim","Sim",'',"Não","Não","Não","","","",,,,'','','',{"Imprime o % de IPI.","", ""},{},{} )
PutSx1( cPerg, "09", "Imprime CODBAR ?"		,""	,"","mv_ch9", "N", 01, 0, 1, "C", "","","", "","mv_par09","Sim","Sim","Sim",'',"Não","Não","Não","","","",,,,'','','',{"Imprime o Cod. Barras","", ""},{},{} )

Return (.T. )
