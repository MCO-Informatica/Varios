#INCLUDE "TBICONN.CH"
#INCLUDE "MATA461.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "FWMVCDEF.CH"

//aTitulo
#DEFINE _VLRTIT_		01
#DEFINE _VLRIRRF_		02
#DEFINE _VLRINSS_		03
#DEFINE _VLRISS_		04
#DEFINE _VLRPIS_		05
#DEFINE _VLRCSLL_		06          
#DEFINE _VLRCOFI_		07
#DEFINE _VLRIPI_   		08                           
#DEFINE _VLRSOL_   		09
#DEFINE _VLRMOE_   		10
#DEFINE _VLRREA_   		11
#DEFINE _VLRACR_   		12
#DEFINE _VLRDSPMOE_		13 //Valor despesas acessorias na moeda
#DEFINE _VLRDSPREA_    14 //Valor despesas acessorias em real
#DEFINE _VLRTITDIF_    15 //Diferenca no valor do titulo na moeda do titulo
#DEFINE _TAXANDF_      16 //Taxa da NDF
#DEFINE _MOEDANDF_     17 //Moeda da NDF
#DEFINE _VLRFET_       18 //Valor do FETHAB
#DEFINE _VLRDESPAC2_   19 //DiferenГa no rateio das despesas acessorias em dolar
#DEFINE _VLRFAB_       20 //Valor do FABOV
#DEFINE _VLRFAC_       21 //Valor do FACS
#DEFINE _VLRTPDP_      22 //Valor do FACS  

//aImposto
#DEFINE _IMPFET_		08 //Valor do FETHAB
#DEFINE _IMPFAB_		09 //Valor do FABOV
#DEFINE _IMPFAC_		10 //Valor do FACS

//GetMv
#DEFINE  __ULMES    	01
#DEFINE  __LIBGRUPO 	02	
#DEFINE  __FRETMOE  	03
#DEFINE  __CONTSOC	 	04
#DEFINE  __MCUSTO	 	05
#DEFINE  __MOEDTIT	 	06
#DEFINE  __TXPER	 	07
#DEFINE  __TPCOMIS	 	08
#DEFINE  __1DUP	 		09
#DEFINE  __1DUPREF	 	10
#DEFINE  __1DUPNAT	 	11
#DEFINE  __RATDESP  	12
#DEFINE  __SERCUP   	13
#DEFINE  __TPNRNFS  	14
#DEFINE  __EECFAT   	15
#DEFINE  __RTIPFIN  	16

//Entry Point - Pontos de Entrada
#DEFINE EP_M460MKB	 	01
#DEFINE EP_M461IMPF 	02
#DEFINE EP_SF2460I	 	03
#DEFINE EP_M460IPI	 	04
#DEFINE EP_M460ICM	 	05
#DEFINE EP_M460SOLI 	06
#DEFINE EP_MSD2UM2	 	07
#DEFINE EP_MSD2460	 	08
#DEFINE EP_MTASF2	 	09
#DEFINE EP_F440COM	 	10
#DEFINE EP_M460IREN 	11
#DEFINE EP_M460ISS 		12
#DEFINE EP_M460VISS 	13
#DEFINE EP_M460ATEC 	14
#DEFINE EP_M460NITE 	15
#DEFINE EP_M460PROC 	16
#DEFINE EP_M460QRY  	17
#DEFINE EP_M460FIL  	18
#DEFINE EP_M460RTPD 	19
#DEFINE EP_M460FIM  	20
#DEFINE EP_M460COND 	21
#DEFINE EP_M460INSS 	22
#DEFINE EP_M460ITPD 	23
#DEFINE EP_M460ORD  	24
#DEFINE EP_M460MOED 	25
#DEFINE EP_M460FIT  	26
#DEFINE EP_M460IPT	 	27
#DEFINE EP_M460QRT  	28
#DEFINE EP_M460SOT  	29
#DEFINE EP_MSD246T	 	30
#DEFINE EP_MSD2UMT	 	31
#DEFINE EP_SF2460T	 	32
#DEFINE EP_M460RAT  	33
#DEFINE EP_M461ACRE 	34
#DEFINE EP_M460NOTA 	35
#DEFINE EP_M460ICMT		36
#DEFINE EP_M460QUEB		37

//aSavRat
#DEFINE SV_PEDIDO   	01
#DEFINE SV_FRETE    	02
#DEFINE SV_FRETAUT  	03
#DEFINE SV_SEGURO   	04
#DEFINE SV_DESPESA  	05
#DEFINE SV_DESCONT  	06
#DEFINE SV_DESPAC2  	07
#DEFINE SV_VLR_FRT  	08

//aRateio
#DEFINE RT_PEDIDO   	01
#DEFINE RT_ITEM     	02
#DEFINE RT_SEQUEN   	03
#DEFINE RT_FRETE    	04
#DEFINE RT_SEGURO   	05
#DEFINE RT_DESPESA  	06
#DEFINE RT_FRETAUT  	07
#DEFINE RT_DESCONT  	08
#DEFINE RT_PRECOIT  	09
#DEFINE RT_PDESCON  	10
#DEFINE RT_DESPAC2  	11
#DEFINE RT_DESPMOE  	12
#DEFINE RT_VLR_FRT  	13

#DEFINE __UFORI  		01
#DEFINE __ALQORI 		02
#DEFINE __PROPOR 		03

Static lRelease	:= GetRpoRelease() >= "R7"	//Identifica se o release И igual ou superior ao 11.7

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVariaveis Staticas do Programa                                          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Static aEntry     := {}
Static aFisGet    := Nil
Static aFisGetSC5 := Nil
Static aRelImp    := Nil
Static aSavRat    := {}
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVariaveis Staticas para utilizacao do arquivo SD9 na numeracao de DOC   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Static cMin460D 
Static dDatabOri := Ctod("")
Static aSerieSD9 := {}                    // Series utilizadas no controle pelo SD9 
Static cFilOri   := ""                    //filial  para controle de numeracao SD9

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддддд©╠╠
╠╠ЁProgram   ЁMATA460   Ё Autor ЁEduardo Riera          Ё Data Ё27.08.1999	Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁRotina de Geracao das Notas Fiscais de Saida.              	Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpL1: Processamento Ok.                                    	Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁNenhum                                                      	Ё╠╠
╠╠цддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                     	Ё╠╠
╠╠цддддддддддддддбддддддддбддддддбдддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё PROGRAMADOR  Ё DATA   Ё BOPS Ё  MOTIVO DA ALTERACAO                     Ё╠╠
╠╠цддддддддддддддеддддддддеддддддедддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё              Ё        Ё      Ё                                          Ё╠╠
╠╠юддддддддддддддаддддддддаддддддадддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function Mata460a()

Local lContinua	:= .T.
Local lIntACD	  	:= SuperGetMV("MV_INTACD",.F.,"0") == "1"
Local cFilSC9		:= ""
Local cQrySC9		:= ""
Local aIndexSC9	:= {}
Local aCores	  	:= {}
Local aRotAdic	:= {}				// Array utilizado no ponto de entrada
Local lFatPrev	:= SuperGetMV( 'MV_FATFTPR', .F., .T. )	//Indica se permite faturar itens previstos (C9_TPOP = P)
Local cMarca    := ""

//здддддддддддддддддддддддддддддддд©
//ЁTratamento para e-Commerce      Ё
//юдддддддддддддддддддддддддддддддды
Local lECommerce := SuperGetMV("MV_LJECOMM",,.F.) .AND. GetRpoRelease("R5")
PRIVATE bFiltraBrw         // Expressao de Filtro
PRIVATE nOrdNFS   := 1     // Ordem de Geracao da Nota Fiscal
PRIVATE aRotina   := {  { STR0001,"Ma460Pesq", 0 , 1},;  //"Pesquisar"
								{ STR0002 ,"Ma460Ordem" , 0 , 0},; //"Ordem"
								{ STR0003 ,"Ma460Nota"  , 0 , 4},; //"Prep. Doc's"
								{ STR0004 ,"Ma461Estor" , 0 , 0},; //"Estor.Doc's"	
								{ STR0033 ,"Ma461View"  , 0 , 2},; //"Visualiza Doc."
								{ STR0042 ,"A461Legend" , 0 , 6},; //"Legenda"	
							   	{ STR0041 ,"Ma461Conh"  , 0 , 4} } //"Conhecimento"

//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de entrada - Adiciona rotinas ao aRotina       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock("MA461ROT")
	aRotAdic := ExecBlock("MA461ROT", .F., .F.)
	If ValType(aRotAdic) == "A"
		AEval(aRotAdic,{|x| AAdd(aRotina,x)})
	EndIf
EndIf  
	
PRIVATE cCadastro := OemToAnsi(STR0005)                  //"Prepara┤└o dos Documentos de Sa║da"
Private c460Cond  := ""
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁCarga das Variaveis Staticas do Programa                                Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
DbSelectArea('SC9')	//LiberaГЦo de Pedidos
SC9->(DbSetOrder(1))	//C9_FILIAL + C9_PEDIDO + C9_ITEM + C9_SEQUEN + C9_PRODUTO
dbSelectArea("SFC")
dbSelectArea("AF8")
dbSelectArea("AFS")
dbSelectArea("SES")
MaNfsInit()       
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁAjusta o SX1                                                            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
AjustaSX1()
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁAvalia Ponto de Entrada                                                 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If nModulo == 72
	c460Cond := KEXF730()
EndIf

If ( aEntry[EP_M460MKB] )
	c460Cond := ExecBlock("M460MKB", .F., .F.)
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVerifica o direito de acesso por parte do usuario                       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( Substr(cAcesso,51,1) <> "S" )
	dbSelectArea("SF2")
	dbSetOrder(3)
	MsSeek(xFilial("SF2")+Space(Len(SF2->F2_ECF))+"z",.T.)
	dbSkip(-1)
	If ( dDataBase < SF2->F2_EMISSAO )
		Help(" ",1,"DATNF")
		lContinua := .F.
	EndIf
	If lContinua
		MsSeek(xFilial("SF2")+"S"+"z",.T.)
		dbSkip(-1)
		If ( dDataBase < SF2->F2_EMISSAO )
			Help(" ",1,"DATNF")
			lContinua := .F.
		EndIf
	EndIf
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVerifica o Ambiente de Processamento.                                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( AMIIn(5,12,39,45,69,72) .And. lContinua )			// SigaFat - SigaLoja - SigaCda
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁVerifica o Fechamento do Estoque                                        Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If ( If(FindFunction("MVUlmes"),MVUlmes(),SuperGetMV("MV_ULMES")) >= dDataBase )
		Help ( " ", 1, "FECHTO" )
		lContinua := .F.
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁVerifica o Fechamento do Fiscal                                         Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If ( !FisChkDt(dDataBase) )
		lContinua := .F.
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica as perguntas MT461A                                 Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Variaveis utilizadas para parametros                         Ё
	//Ё mv_par01     // Filtra j═ emitidas     - Sim/Nao             Ё
	//Ё mv_par02     // Estorno da Liberacao   - Posic./Marcados     Ё
	//Ё mv_par03     // Cons. Param. Abaixo    - Sim/Nao             Ё
	//Ё mv_par04     // Trazer Ped. Marc       - Sim/Nao             Ё
	//Ё mv_par05     // De  Pedido                                   Ё
	//Ё mv_par06     // Ate Pedido                                   Ё
	//Ё mv_par07     // De  Cliente                                  Ё
	//Ё mv_par08     // Ate Cliente                                  Ё
	//Ё mv_par09     // De  Loja                                     Ё
	//Ё mv_par10     // Ate Loja                                     Ё
	//Ё mv_par11     // De  Liberacao                                Ё
	//Ё mv_par12     // Ate Liberacao                                Ё
	//Ё mv_par13     // Mostra Itens Previstos - Sim/NЦo             Ё	
	//Ё mv_par14     // De  Entrega                                  Ё
	//Ё mv_par15     // Ate Entrega                                  Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	AjustSX1_A()
	If ( Pergunte("MT461A",.T.) .And. lContinua )
		cFilSC9 := "C9_FILIAL='"+xFilial("SC9")+"'"
		cQrySC9 := "SC9.C9_FILIAL='"+xFilial("SC9")+"'"
		If ( MV_PAR01 == 1 )
			cFilSC9 += ".And.C9_BLEST<>'10'"
			cFilSC9 += ".And.C9_BLEST<>'ZZ'"
		EndIf
		
		If ( !lFatPrev )	//Indica se permite faturar itens Previstos (Campo C6_TPOP)
			If ( SC9->(FieldPos('C9_TPOP')) > 0 )
				//Filtra apenas itens com Tipo de Ordem de ProduГЦo Firmes (C6_TPOP = 'F' | C9_TPOP = '1')
				cFilSC9 += ".And. C9_TPOP != '2'"
				cQrySC9 += "AND  SC9.C9_TPOP <> '2'"
			EndIf
		EndIf
		
		If ( MV_PAR03 == 1 )

			cFilSC9 += ".And.C9_PEDIDO>='"+MV_PAR05+"'"
			cFilSC9 += ".And.C9_PEDIDO<='"+MV_PAR06+"'"
			cFilSC9 += ".And.C9_CLIENTE>='"+MV_PAR07+"'"
			cFilSC9 += ".And.C9_CLIENTE<='"+MV_PAR08+"'"
			cFilSC9 += ".And.C9_LOJA>='"+MV_PAR09+"'"
			cFilSC9 += ".And.C9_LOJA<='"+MV_PAR10+"'"
			cFilSC9 += ".And.Dtos(C9_DATALIB)>='"+Dtos(MV_PAR11)+"'"
			cFilSC9 += ".And.Dtos(C9_DATALIB)<='"+Dtos(MV_PAR12)+"'"
						
			If ( SC9->(FieldPos('C9_TPOP')) > 0 )
				//Mostra itens previstos?
				If ( !Empty( MV_PAR13 ) ) .And. ( ValType(MV_PAR13) == 'N' )
					If ( MV_PAR13 == 2 ) .And. ( lFatPrev )
						cFilSC9 += ".And. C9_TPOP != '2'"
					EndIf
				EndIf
			EndIf
			
			//Se a versЦo for 11.7 ou superior
			If ( lRelease )
				//Filtra por data de entrega
				If ( !Empty( MV_PAR14 ) ) .And. ( ValType(MV_PAR14) == 'D' )
					cFilSC9 += ".And. DToS(C9_DATENT) >= '" + DToS(MV_PAR14) + "'"
				EndIf				
				If ( !Empty( MV_PAR15 ) ) .And. ( ValType(MV_PAR15) == 'D' )
					cFilSC9 += ".And. DToS(C9_DATENT) <= '" + DToS(MV_PAR15) + "'"
				EndIf
			EndIf
				
			cQrySC9 += " AND SC9.C9_PEDIDO>='"+MV_PAR05+"'"
			cQrySC9 += " AND SC9.C9_PEDIDO<='"+MV_PAR06+"'"
			cQrySC9 += " AND SC9.C9_CLIENTE>='"+MV_PAR07+"'"
			cQrySC9 += " AND SC9.C9_CLIENTE<='"+MV_PAR08+"'"
			cQrySC9 += " AND SC9.C9_LOJA>='"+MV_PAR09+"'"
			cQrySC9 += " AND SC9.C9_LOJA<='"+MV_PAR10+"'"
			cQrySC9 += " AND SC9.C9_DATALIB>='"+Dtos(MV_PAR11)+"'"
			cQrySC9 += " AND SC9.C9_DATALIB<='"+Dtos(MV_PAR12)+"'"	
			
			If ( SC9->(FieldPos('C9_TPOP')) > 0 )
				//Mostra itens previstos?
				If ( !Empty( MV_PAR13 ) ) .And. ( ValType(MV_PAR13) == 'N' )
					If ( MV_PAR13 == 2 ) .And. ( lFatPrev )
						cQrySC9 += "AND SC9.C9_TPOP <> '2'"
					EndIf
				EndIf
			EndIf
			
			//Se a versЦo for 11.7 ou superior
			If ( lRelease )
				If ( !Empty( MV_PAR14 ) ) .And. ( ValType(MV_PAR14) == 'D' )
					cQrySC9 += " AND SC9.C9_DATENT >= '" + DToS(MV_PAR14) + "'"
				EndIf
				
				If ( !Empty( MV_PAR15 ) ) .And. ( ValType(MV_PAR15) == 'D' )
					cQrySC9 += " AND SC9.C9_DATENT <= '" + DToS(MV_PAR15) + "'"		
				EndIf
			EndIf

		EndIf

		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Pontos de Entrada					                                   Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If ( aEntry[EP_M460QRT] )
			cQrySC9 := ExecTemplate("M460QRY",.F.,.F.,{ cQrySC9 , 1 })
		EndIf 
		
		If nModulo == 72
			cQrySC9 := KEXF750(cQrySC9 , 1 )
		EndIf
		
		If ( aEntry[EP_M460QRY] )
			cQrySC9 := ExecBlock("M460QRY",.F.,.F.,{ cQrySC9 , 1 })
		EndIf

		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Chamada para integracao com o modulo ACD - Faz filtro do PV na geracao da nota. Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If lIntACD .And. FindFunction("CBM460FIL")
			cFilSC9 += ".And."+CBM460FIL()
		EndIf
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Pontos de Entrada					                                   Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If ( aEntry[EP_M460FIT] )
			cFilSC9 += ".And."+ExecTemplate("M460FIL",.F.,.F.)
		EndIf
		   
		If ( aEntry[EP_M460FIL] )
			cFilSC9 += ".And."+ExecBlock("M460FIL",.F.,.F.)
		EndIf
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁArray com as cores que definem cada status no markbrowserЁ
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		aCores := {	{'Empty(SC9->C9_BLEST)   .And. Empty(SC9->C9_BLCRED) .And. SC9->C9_BLWMS$"05,06,07,  "','ENABLE' },;	//Pedido de Venda liberado 
					{'SC9->C9_BLEST=="10"    .And. SC9->C9_BLCRED=="10"  .And. SC9->C9_BLWMS$"05,06,07,  "','DISABLE'},;	//Pedido de Venda Faturado
					{'!(Empty(SC9->C9_BLEST) .And. Empty(SC9->C9_BLCRED) .And. SC9->C9_BLWMS$"05,06,07,  ")','BR_AZUL'}}	//Pedido de Venda com bloqueio
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Ponto de Entrada para alterar cores do Browse do Cadastro    Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If Existblock("M461COR")
			aCores := ExecBlock("M461COR",.F.,.F.,aCores)
		EndIf
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁRealiza a Filtragem                                                     Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		bFiltraBrw := {|x| If(x==Nil,FilBrowse("SC9",@aIndexSC9,@cFilSC9),{cFilSC9,cQrySC9,"","",aIndexSC9}) }
		Eval(bFiltraBrw)
		SC9->(MsSeek(xFilial()))

        If lECommerce
			cMarca	:= GetMark(,"SC9","C9_OK")
        	MarkBrow("SC9","C9_OK","A460Avalia()",,MV_PAR04==1.And.MV_PAR03==1,cMarca,,,,,"A460VERPRS('1','"+cMarca+"')",,,,aCores,,,,)
        Else
	        MarkBrow("SC9","C9_OK","A460Avalia()",,MV_PAR04==1.And.MV_PAR03==1,GetMark(,"SC9","C9_OK"),,,,,,,,,aCores)
        EndIf

		dbSelectArea("SC9")
		RetIndex("SC9")
		dbClearFilter()
		aEval(aIndexSC9,{|x| Ferase(x[1]+OrdBagExt())})
	Else
		lContinua := .F.
	EndIf

	SetKey(VK_F12,Nil)
Else
	lContinua := .F.
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁAnula as variaveis staticas criadas pela funcao manfsinit               Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
MaNfsEnd()

Return( lContinua )

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMa460Pesq Ё Autor ЁEduardo Riera          Ё Data Ё27.08.1999Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁTratamento do Filtro na Pesquisa da MarkBrowse              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁNenhum                                                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁNenhum                                                      Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function Ma460Pesq()

AxPesqui()

Eval(bFiltraBrw)

Return( .T. )

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMa460OrdemЁ Autor ЁEduardo Riera          Ё Data Ё27.08.1999Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁPermite alterar a Ordem de Geracao da Nota Fiscal de Saida  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ                                                            Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/

Function Ma460Ordem()

Local aArea      := GetArea()
Local aAreaSC9   := SC9->(GetArea())
Local aAreaSIX   := SIX->(GetArea())
Local aOrdem     := {}
Local nOrdem     := 1
Local cResultado := ""

Local oDlg
Local oListBox
Local oBut1
Local oBut2
Local oBold

dbSelectArea("SIX")
dbSetOrder(1)
MsSeek("SC9")

dbEval({||aadd(aOrdem,Capital( SixDescricao() ) ) },;
	{|| !Empty(SixDescricao()) },;
	{|| SIX->INDICE=="SC9" },,,.T.)

DEFINE MSDIALOG oDlg TITLE CCADASTRO FROM 0,0 TO 264,478 OF oMainWnd	PIXEL

DEFINE FONT oBold NAME "Arial" SIZE 0, -13 BOLD

@  0, -25 BITMAP oBmp RESNAME "PROJETOAP" oF oDlg SIZE 55, 1000 NOBORDER WHEN .F. PIXEL

@ 03, 40 SAY STR0002 FONT oBold PIXEL  //"Ordem"

@ 14, 30 TO 16 ,400 LABEL '' OF oDlg PIXEL

@ 25, 40 LISTBOX oListBox VAR cResultado ITEMS aOrdem PIXEL SIZE 190, 80 OF oDlg MULTI	

DEFINE SBUTTON oBut1 FROM 113, 169 TYPE 1 ACTION ( nOrdem := oListBox:nAt, oDlg:End() )  ENABLE of oDlg
DEFINE SBUTTON oBut2 FROM 113, 202 TYPE 2 ACTION ( oDlg:End() )  ENABLE of oDlg

ACTIVATE MSDIALOG oDlg CENTERED

If ( nOrdem <> 0 )
	nOrdNFs := nOrdem
EndIf

RestArea(aAreaSC9)
RestArea(aAreaSIX)
RestArea(aArea)

Return

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMa460Nota Ё Autor ЁEduardo Riera          Ё Data Ё27.08.1999Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁRotina de Montagem das Notas Fiscais de Saida               Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ                                                            Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/

Function Ma460Nota(cAlias)

Local aArea    := GetArea()
Local lContinua := .T.
Local nOpcA    := 0
Local cSerie   := ""
Local nX		:= 0
Local aMsgHlp	:= {}
Local cHlp		:= ""
Local lP21      := .F. // Existe pergunta 21 do grupo MT460A   
Local dDataMoe  := dDataBase

// Verifica se usuario alterou numero da nota fiscal quando MV_TPNRNFS == "3" (apenas para MV_ESTADO = "SC").
Private lMudouNum := .F.
Private cNumero   := ""
Private aPedDecret:= {}		//Decreto N╨ 54.869, de 2 de outubro de 2009 do Estado de SЦo Paulo
//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Define variaveis de parametrizacao de lancamentos             Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё mv_par01 Mostra Lan┤.Contab     ?  Sim/Nao                         Ё
//Ё mv_par02 Aglut. Lan┤amentos     ?  Sim/Nao                         Ё
//Ё mv_par03 Lan┤.Contab.On-Line    ?  Sim/Nao                         Ё
//Ё mv_par04 Contb.Custo On-Line    ?  Sim/Nao                         Ё
//Ё mv_par05 Reaj. na mesma N.F.    ?  Sim/Nao                         Ё
//Ё mv_par06 Taxa deflacao ICMS     ?  Numerico                        Ё
//Ё mv_par07 Metodo calc.acr.fin    ?  Taxa defl/Dif.lista/% Acrs.ped  Ё
//Ё mv_par08 Arred.prc unit vist    ?  Sempre/Nunca/Consumid.final     Ё
//Ё mv_par09 Agreg. liberac. de     ?  Caracter                        Ё
//Ё mv_par10 Agreg. liberac. ate    ?  Caracter                        Ё
//Ё mv_par11 Aglut.Ped. Iguais      ?  Sim/Nao                         Ё
//Ё mv_par12 Valor Minimo p/fatu    ?                                  Ё
//Ё mv_par13 Transportadora de      ?                                  Ё
//Ё mv_par14 Transportadora ate     ?                                  Ё
//Ё mv_par15 Atualiza Cli.X Prod    ?                                  Ё
//Ё mv_par16 Emitir                 ?  Nota / Cupom Fiscal / DAV       Ё
//Ё mv_par17 Gera Titulo            ?  Sim/Nao                         Ё
//Ё mv_par18 Gera guia recolhimento ?  Sim/Nao                         Ё
//Ё mv_par19 Gera Titulo ICMS PrСprio ?  Sim/Nao                       Ё
//Ё mv_par20 Gera Guia ICMS PrСprio ?  Sim/Nao                         Ё
//Ё mv_par22 Gera Titulo por Pruduto?  Sim/Nao                        			 Ё  
//Ё mv_par23 Gera Guia por Produto?  Sim/Nao                        			 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
AjustaSx1(@lP21)    
If ( Pergunte("MT460A",.T.) )
	If mv_par16 == 2 .and. LjNfPafEcf(SM0->M0_CGC) .and. SC9->(FieldPos('C9_DAV')) > 0
		Aviso(STR0068,STR0069,{STR0070})	 //'Este И um ambiente do tipo PAF-ECF. A emissЦo de Cupons Fiscais nЦo И possivel atravИs deste ambiente. Por favor, utilize a opГЦo DAV'
	ElseIf mv_par16 == 3 .and. LjNfPafEcf(SM0->M0_CGC)
		//Para ambientes do tipo PAF-ECF, nao emite nota - apenas gera orcamento no loja (DAV)
		lContinua := MA461OrcLj()
	Else 
		lContinua := Sx5NumNota(@cSerie,SuperGetMV("MV_TPNRNFS"))
		If ( lContinua )
			FormBatch(OemToAnsi(STR0005),;
				{OemToAnsi(STR0006),OemToAnsi(STR0007),OemToAnsi(STR0008)},;
				{  {5,.F.,{|o| o:oWnd:End()}           },;
				{1,.T.,{|o| nOpcA:=2,o:oWnd:End()}  },;
				{2,.T.,{|o| o:oWnd:End() }}         })
			If ( nOpcA == 2 )
				If nModulo == 72 
					KEXF740(SC9->(IndexOrd()))
				EndIf
					
				If ( AENTRY[EP_M460PROC] )
					ExecBlock("M460PROC",.F.,.F.,{ SC9->(IndexOrd())})
				EndIf  
		      	If lP21
					dDataMoe := MV_PAR21
				Endif				 
				Processa({|lEnd| Ma460Proc(	cAlias,;
					cSerie,;
					MV_PAR01==1,;
					MV_PAR02==1,;
					MV_PAR03==1,;
					MV_PAR04==1,;
					MV_PAR05==1,;
					MV_PAR07,;
					MV_PAR08,;
					MV_PAR09,;
					MV_PAR10,;
					MV_PAR11==1,;
					MV_PAR12,;
					MV_PAR13,;
					MV_PAR14,;
					MV_PAR15==1,;
					MV_PAR16==2,;
					c460Cond,@lEnd,dDataMoe)},,OemToAnsi(STR0009),.T.)     //"Prepara┤└o dos Doc's de Sa║da/Expedi┤└o "
				If ( AENTRY[EP_M460NOTA] )
					ExecBlock("M460NOTA",.F.,.F.,{cAlias})
				EndIf
					//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Exibe a uma mensagem para o usuАrio, informando os pedidos que nЦo	Ё
					//Ё foram faturados.													Ё
					//Ё Decreto N╨ 54.869, de 2 de outubro de 2009 do Estado de SЦo Paulo	Ё
					//Ё Atingido o valor mАximo do cupom fiscal: 10.000,00.					Ё
					//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If MV_PAR16==2 .And. Len(aPedDecret) > 0
						aMsgHlp := LjAnalisaLeg(51)
						cHlp := aMsgHlp[5] + CHR(10)
						cHlp += STR0082		//"Pedido(s): "
						For nX := 1 To Len(aPedDecret)				        
							If nX == 1
								cHlp += aPedDecret[nX]
							Else
								cHlp += ", " + aPedDecret[nX]
							EndIf
						Next nX
						aMsgHlp[5] := cHlp
						LjMsgLeg(aMsgHlp)
					EndIf
			EndIf   
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁDestrava o controle de numeracao                                        Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			SX5->(MsRUnLock())
		EndIf           
	EndIf           
Else
	lContinua := .F.
EndIf
RestArea(aArea)

Return( lContinua )

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMa460Proc Ё Autor ЁEduardo Riera          Ё Data Ё28.08.1999Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁGauge de Processamento da Geracao da Nota Fiscal            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁNenhum                                                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpC1: Alias da MarkBrowse                                  Ё╠╠
╠╠Ё          ЁExpC2: Serie da Nota Fiscal a ser considerada               Ё╠╠
╠╠Ё          ЁExpL3: Mostra Lanc.Ctb.                                     Ё╠╠
╠╠Ё          ЁExpL4: Aglut.Lancamentos                                    Ё╠╠
╠╠Ё          ЁExpL5: Lct.Ctb.On-Line                                      Ё╠╠
╠╠Ё          ЁExpL6: Lct.Ctb.Custo On-Line                                Ё╠╠
╠╠Ё          ЁExpL7: Reajusta na mesma nota                               Ё╠╠
╠╠Ё          ЁExpN8: Calc.Acr.Fin                                         Ё╠╠
╠╠Ё          ЁExpN9: Arred.Prc.Unit                                       Ё╠╠
╠╠Ё          ЁExpCA: Agregador de Liberacao Inicial                       Ё╠╠
╠╠Ё          ЁExpCB: Agregador de Liberacao Final                         Ё╠╠
╠╠Ё          ЁExpLC: Aglutina Pedido Iguais                               Ё╠╠
╠╠Ё          ЁExpND: Valor Minimo para faturamento                        Ё╠╠
╠╠Ё          ЁExpNE: Transportadora Inicial                               Ё╠╠
╠╠Ё          ЁExpNF: Transportadora Final                                 Ё╠╠
╠╠Ё          ЁExpNG: Atualiza Amarracao Cliente x Produto                 Ё╠╠
╠╠Ё          ЁExpNH: Cupom Fiscal                                         Ё╠╠
╠╠Ё          ЁExpNI: Condicao a Ser Avaliada                              Ё╠╠
╠╠Ё          ЁExpLJ: Flag de cancelamento do usuario                      Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function Ma460Proc(cTabela,cSerie,lMostraCtb,lAglutCtb,lCtbOnLine,lCtbCusto,lReajusta,nCalAcrs,nArredPrcLis,cAgregI,cAgregF,lJunta,nFatMin,cTranspI,cTranspF,lAtuSA7,lECF,cCondicao,lEnd,dDataMoe)

Local aArea     := GetArea()
Local aAreaSC9  := SC9->(GetArea())
Local aFiltro   := Eval(bFiltraBrw,1)
Local nItemNf   := a460NumIt(cSerie)
Local nIndSC9   := 0
Local nIndBrw   := 0
Local nPosKey   := 0
Local nCntFor   := 0
Local nTotal    := 0
Local nNrVend   := Fa440CntVen()
Local nPrcVen   := 0
Local nRecDAK   := 0
Local cArqSC9   := ""
Local cArqBrw   := ""
Local cFilSC9   := aFiltro[1]
Local cQrySC9   := aFiltro[2]
Local cFilBrw   := aFiltro[3]
Local cQryBrw   := aFiltro[4]
Local cKeySC9   := "C9_FILIAL+"
Local cAuxKey   := ""
Local cMarca    := ThisMark()
Local cCursor1  := cTabela
Local cCursor2  := "SC9"
Local cCursor3  := "SC9"
Local cVendedor := ""
Local cFldQry   := ""
Local cNota	    := ""
Local cTipo9    := ""
Local cPedido   := ""
Local cString   := ""
Local cSavFil   := cFilAnt
Local lInverte  := ThisInv()
Local lLibGrupo := SuperGetMv("MV_LIBGRUPO")=="S"
Local lAtuEst   := .F.
Local lQuery    := .F.
Local lQuebra   := .F.
Local lConfirma := .T.
Local lExecuta  := .T.
Local lTxMoeda  := .F.
Local lAcima    := .F.
Local lTotZero  := .F.
Local lSemSaldo := .F.
Local lFilDAK   := OsVlEntCom()<>1 .And. cTabela == "DAK"
Local lM461VTot := ExistBlock("M461VTOT")
Local lGeraVTot := .T.
Local aSemSaldo := {}
Local aTravas   := {}
Local aPvlNfs   := {}
Local aQuebra   := {}
Local aQuebra2  := {}
Local aQuebra3  := {}
Local aNfCodISS := {}
Local bWhile1   := {|| !Eof() }
Local bWhile2   := {|| !Eof() }
Local bWhile3   := {|| !Eof() }
Local lCond9    := GetNewPar("MV_DATAINF",.F.)
Local cCarga    := ""
Local lPedSemAd := .F.
Local aPedSemAd := {}
Local aPedAdt := {}
Local lValidouAdt := .T.
Local nCnt := 0
Local nAcresTot := 0
Local nPosAcres := 0
Local aAcresTot := {}
Local aAreaSC9Adt
Local aAreaSC5Adt
Local aAreaSC6Adt
Local nPosAdt := 0
Local lLeiSP  := .F.
Local lDataFin	:= .F.

#IFDEF TOP
	Local cDbMs    := ""
#ENDIF	

Default dDataMoe := dDataBase

Private cFilOpl := cFilAnt //-- Uso SIGAOMS - Tratamento para Filial Operador Logistico

If Empty(dDataMoe)
	dDataMoe := dDatabase
Endif

lCond9   := IIf(ValType(lCond9)<>"L",.F.,lCond9)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Pontos de Entrada                                                      Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( ExistTemplate("M460MARK") )
	lExecuta := ExecTemplate("M460MARK",.F.,.F.,{ThisMark(),ThisInv()})
EndIf 

IF nModulo == 72
	lExecuta := KEXF720(ThisMark(),ThisInv())
Endif

If ( ExistBlock("M460MARK") )
	lExecuta := ExecBlock("M460MARK",.F.,.F.,{ThisMark(),ThisInv(),cSerie})
EndIf

If ( lExecuta )
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁVerifica a data de execucao                                             Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If GetNewPar("MV_NFCHGDT",.F.)
		If MsDate()==dDataBase+1
			If Aviso( STR0034, STR0038, {STR0039,STR0040}, 2 )==1 //"O sistema identificou a troca da data do sistema operacional, deseja atualizar a data base do sistema?"###"Sim","Nao"
				dDataBase := MsDate()
			EndIf
		EndIf
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁInicializa a filtragem da MarkBrowse                                    Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	Do Case
	Case cTabela == "SC9"
		If ( lInverte )
			cFilSC9 += ".And.C9_OK<>'"+cMarca+"'"
			cQrySC9    += " AND SC9.C9_OK<>'"+cMarca+"'"
		Else
			cFilSC9 += ".And.C9_OK=='"+cMarca+"'"
			cQrySC9    += " AND SC9.C9_OK='"+cMarca+"'"
		EndIf
		bWhile1 := {|| !Eof() .And. xFilial("SC9") == (cCursor1)->C9_FILIAL }
		bWhile2 := {|| !Eof() .And. xFilial("SC9") == (cCursor2)->C9_FILIAL }
		bWhile3 := {|| !Eof() .And. xFilial("SC9") == (cCursor3)->C9_FILIAL }
	Case cTabela == "DAK"
		If ( lInverte )
			cFilBrw += ".And.DAK_OK<>'"+cMarca+"'"
			cQryBrw += " AND DAK_OK<>'"+cMarca+"'"
		Else
			cFilBrw += ".And.DAK_OK=='"+cMarca+"'"
			cQryBrw    += " AND DAK_OK='"+cMarca+"'"
		EndIf
		cFilBrw += ".AND.DAK_FEZNF<>'1' "
		cQryBrw += " AND DAK_FEZNF<>'1' "
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁVerifica a necessidade do DAI                                           Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If ( lFilDAK )
			cCursor2:= "DAI"
			cQryBrw += "AND DAI.DAI_FILIAL='"+xFilial("DAI")+"' "
			cQryBrw += "AND DAI.DAI_COD=DAK.DAK_COD "
			cQryBrw += "AND DAI.DAI_SEQCAR=DAK.DAK_SEQCAR "
			cQryBrw += "AND DAI.D_E_L_E_T_ = ' ' "
			cQryBrw += "AND DAI.DAI_PEDIDO = SC9.C9_PEDIDO "
			bWhile1 := {|| !Eof()}
			bWhile2 := {|| !Eof() .And. (cCursor2)->DAI_FILIAL == xFilial("DAI") .AND. (cCursor2)->DAI_COD==(cCursor1)->DAK_COD .And. (cCursor2)->DAI_SEQCAR==(cCursor1)->DAK_SEQCAR}
			bWhile3 := {|| !Eof() .And. xFilial("SC9") == (cCursor3)->C9_FILIAL .AND. (cCursor3)->C9_CARGA==(cCursor1)->DAK_COD .And. (cCursor3)->C9_SEQCAR==(cCursor1)->DAK_SEQCAR}
			If lFilDAK
				cFldQry := ",DAI.DAI_FILIAL,DAI.DAI_COD,DAI.DAI_SEQCAR,DAI.DAI_FILPV,DAK.DAK_COD,DAK.DAK_SEQCAR,DAK.DAK_PTOENT,DAK.R_E_C_N_O_ DAKRECNO "
			Else
				cFldQry := ",DAI.DAI_FILIAL,DAI.DAI_COD,DAI.DAI_SEQCAR,DAK.DAK_COD,DAK.DAK_SEQCAR,DAK.DAK_PTOENT,DAK.R_E_C_N_O_ DAKRECNO "
			EndIf
		Else
			bWhile1 := {|| !Eof() }
			bWhile2 := {|| !Eof() .And. xFilial("SC9") == (cCursor3)->C9_FILIAL .AND. (cCursor3)->C9_CARGA==(cCursor1)->DAK_COD .AND. (cCursor3)->C9_SEQCAR==(cCursor1)->DAK_SEQCAR }
			bWhile3 := {|| !Eof() .And. xFilial("SC9") == (cCursor3)->C9_FILIAL .AND. (cCursor3)->C9_CARGA==(cCursor1)->DAK_COD .AND. (cCursor3)->C9_SEQCAR==(cCursor1)->DAK_SEQCAR}
			cFldQry := ",DAK.DAK_COD,DAK.DAK_SEQCAR,DAK.DAK_PTOENT,DAK.R_E_C_N_O_ DAKRECNO "
		EndIf
	EndCase
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁVerifica qual a Ordem em que a NFS deve ser gerada                      Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If !lFilDAK
		cKeySC9 += "C9_CARGA+C9_SEQCAR+"
		cKeySC9 += "C9_FILIAL+C9_SEQENT+C9_AGREG+"
	Else
		cKeySC9 += "C9_CARGA+C9_SEQCAR+C9_SEQENT+"
		cKeySC9 += "C9_AGREG+"
	EndIf
	If lJunta
		cKeySC9 += "C9_CLIENTE+C9_LOJA+"
	EndIf
	cKeySC9 += "C9_PEDIDO+"
	If ( lLibGrupo )
		cKeySC9 += "C9_GRUPO+"
	EndIf  
	If SC9->(FieldPos("C9_RETOPER")) > 0 .And. SB1->(FieldPos("B1_RETOPER")) > 0
		cKeySC9 += "C9_RETOPER+"
	Endif
	If SC9->(FieldPos("C9_CODISS")) > 0 .And. GetNewPar("MV_NFEQUEB",.F.)
		cKeySC9 += "C9_CODISS+"
	Endif
	dbSelectArea("SC9")
	dbSetOrder(nOrdNFS)
	cKeySC9 += IndexKey()
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁRetira os itens duplicados da ordem de Geracao da NFS                   Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	cAuxKey := cKeySC9
	cKeySC9 := ""
	While ( (nPosKey:=At("+",cAuxKey))<>0 )
		If ( !SubStr(cAuxKey,1,nPosKey-1)$cKeySC9 )
			cKeySC9 += "+"+SubStr(cAuxKey,1,nPosKey-1)
		EndIf
		cAuxKey := SubStr(cAuxKey,nPosKey+1)
	EndDo
	If ( !cAuxKey$cKeySC9 )
		cKeySC9 += "+"+cAuxKey
	EndIf
	cKeySC9 := SubStr(cKeySC9,2)
	If aEntry[EP_M460ORD]
		cKeySC9 := ExecBlock("M460ORD",.F.,.F.,cKeySC9)
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁRealiza a Selecao do SC9 e da Tabela da Markbrowse se esta existir      Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	#IFDEF TOP

		cDbMs := UPPER(TcGetDb())

		If ( TcSrvType()<>"AS/400" .And. cDbMs<>"POSTGRES" )
			cAuxKey := cQrySC9
			cQrySC9 := ""
			cCursor1:= "MA460PROC"
			cCursor2:= cCursor1
			cCursor3:= cCursor2
			lQuery  := .T.
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁMontagem dos campos do SC9                                              Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			dbSelectArea("SC9")
			For nCntFor := 1 To FCount()
				cQrySC9 += ","+FieldName(nCntFor)
			Next nCntFor
			Do Case
			Case "ORACLE"==Upper(TcGetDb())
				cQrySC9 := "SELECT DISTINCT /*+FIRST_ROWS*/ "+SubStr(cQrySC9,2)
			Case "CACHE"==Upper(TcGetDb())
				cQrySC9 := "SELECT "+SubStr(cQrySC9,2)
			OtherWise
				cQrySC9 := "SELECT DISTINCT "+SubStr(cQrySC9,2)
			EndCase
			cQrySC9 += ",SC9.R_E_C_N_O_ C9RECNO "
			cQrySC9 += ",SC5.R_E_C_N_O_ C5RECNO "
			cQrySC9 += ",SC6.R_E_C_N_O_ C6RECNO, SC6.C6_QTDENT, SC6.C6_QTDVEN "
			cQrySC9 += ",SE4.R_E_C_N_O_ E4RECNO "
			cQrySC9 += ",SB1.R_E_C_N_O_ B1RECNO "
			cQrySC9 += ",SB2.R_E_C_N_O_ B2RECNO "
			cQrySC9 += ",SF4.R_E_C_N_O_ F4RECNO "
			cQrySC9 += ",SF4.F4_ISS F4ISS, SF4.F4_QTDZERO, SF4.F4_ESTOQUE, SF4.F4_DUPLIC "
			cQrySC9 += ",SC5.C5_MOEDA "
			cQrySC9 += ",SC5.C5_DATA1 "
			cQrySC9 += cFldQry
			If ( lJunta )
				cVendedor := "1"
				For nCntfor := 1 To nNrVend
					cQrySC9 += ",SC5.C5_VEND"+cVendedor
					If SC5->(FieldPos("C5_CODRL"+cVendedor)) > 0
						cQrySC9 += ",SC5.C5_CODRL"+cVendedor
					EndIf
					cVendedor := Soma1(cVendedor,1)
				Next nCntFor
				cQrySC9 += ",SC5.C5_TIPO,SC5.C5_CLIENTE,SC5.C5_LOJACLI,SC5.C5_TIPOCLI,SC5.C5_LOJAENT,SC5.C5_REAJUST,SC5.C5_CONDPAG,SC5.C5_INCISS,SC5.C5_TRANSP,SC5.C5_TPFRETE,"
				If SC5->(FieldPos("C5_CLIENT"))>0
					cQrySC9 += "SC5.C5_CLIENT,"
				EndIf
				If SC5->(FieldPos("C5_FORNISS"))>0
					cQrySC9 += "SC5.C5_FORNISS,"
				EndIf
				If SC5->(FieldPos("C5_RECISS"))>0
					cQrySC9 += "SC5.C5_RECISS,"
				EndIf
				cQrySC9 += "SE4.E4_TIPO,SB2.B2_LOCAL "
			Else
				cQrySC9 += ",SC5.C5_TIPO,SB2.B2_LOCAL "
			EndIf
			cQrySC9 += "FROM "+RetSqlName("SC9")+" SC9 ,"
			If ( cTabela <> "SC9" )
				cQrySC9 += RetSqlName(cTabela)+" "+cTabela+","
				If ( lFilDAK )
					cQrySC9 += RetSqlName("DAI")+" DAI,"
				Endif
			EndIf
			cQrySC9 += RetSqlName("SC5")+" SC5 ,"
			cQrySC9 += RetSqlName("SC6")+" SC6 ,"
			cQrySC9 += RetSqlName("SE4")+" SE4 ,"
			cQrySC9 += RetSqlName("SB1")+" SB1 ,"
			cQrySC9 += RetSqlName("SB2")+" SB2 ,"
			cQrySC9 += RetSqlName("SF4")+" SF4  "
			cQrySC9 += "WHERE "
			If cTabela <> "SC9"
				cQrySC9 += cQryBrw+" AND "+cAuxKey
			Else
				cQrySC9 += cAuxKey
			EndIf
			cQrySC9 += " AND SC9.C9_BLCRED='"+Space(Len(SC9->C9_BLCRED))+"'"
			cQrySC9 += " AND SC9.C9_BLEST='"+Space(Len(SC9->C9_BLEST))+"'"
			cQrySC9 += " AND SC9.C9_BLWMS IN('  ','05','06','07') "

			cQrySC9 += " AND SC9.C9_AGREG>='"+cAgregI+"'"
			cQrySC9 += " AND SC9.C9_AGREG<='"+cAgregF+"'"
			cQrySC9 += " AND SC9.D_E_L_E_T_=' ' "
			cQrySC9 += " AND SC5.C5_FILIAL="+IIF(lFilDAK,OsFilQry("SC5","DAI.DAI_FILPV"),"'"+xFilial("SC5")+"'")
			cQrySC9 += " AND SC5.C5_NUM=SC9.C9_PEDIDO"
			cQrySC9 += " AND SC5.C5_TRANSP>='"+cTranspI+"'"
			cQrySC9 += " AND SC5.C5_TRANSP<='"+cTranspF+"'"
			cQrySC9 += " AND SC5.D_E_L_E_T_=' '"
			cQrySC9 += " AND SC6.C6_FILIAL="+IIf(lFilDAK,OsFilQry("SC6","DAI.DAI_FILPV"),"'"+xFilial("SC6")+"'")
			cQrySC9 += " AND SC6.C6_NUM=SC9.C9_PEDIDO"
			cQrySC9 += " AND SC6.C6_ITEM=SC9.C9_ITEM"
			cQrySC9 += " AND SC6.C6_PRODUTO=SC9.C9_PRODUTO"
			cQrySC9 += " AND SC6.D_E_L_E_T_=' '"
			cQrySC9 += " AND SE4.E4_FILIAL="+IIf(lFilDAK,OsFilQry("SE4","DAI.DAI_FILPV"),"'"+xFilial("SE4")+"'")
			cQrySC9 += " AND SE4.E4_CODIGO=SC5.C5_CONDPAG "
			cQrySC9 += " AND SE4.D_E_L_E_T_=' '"
			cQrySC9 += " AND SB1.B1_FILIAL="+IIf(lFilDAK,OsFilQry("SB1","DAI.DAI_FILPV"),"'"+xFilial("SB1")+"'")
			cQrySC9 += " AND SB1.B1_COD=SC9.C9_PRODUTO"
			cQrySC9 += " AND SB1.D_E_L_E_T_=' '"
			cQrySC9 += " AND SB2.B2_FILIAL="+IIf(lFilDAK,OsFilQry("SB2","DAI.DAI_FILPV"),"'"+xFilial("SB2")+"'")
			cQrySC9 += " AND SB2.B2_COD=SC9.C9_PRODUTO"
			cQrySC9 += " AND SB2.B2_LOCAL=SC9.C9_LOCAL"
			cQrySC9 += " AND SB2.D_E_L_E_T_=' '"
			cQrySC9 += " AND SF4.F4_FILIAL="+IIf(lFilDAK,OsFilQry("SF4","DAI.DAI_FILPV"),"'"+xFilial("SF4")+"'")
			cQrySC9 += " AND SF4.F4_CODIGO=SC6.C6_TES"
			cQrySC9 += " AND SF4.D_E_L_E_T_=' '"
			If lFilDAK
				cKeySC9 := StrTran(cKeySC9,"C9_PEDIDO","DAI_FILPV,C9_PEDIDO")
			EndIf
			cQrySC9 += " ORDER BY "+SqlOrder(cKeySC9)

			cQrySC9 := ChangeQuery(cQrySC9)
			//MEMOWRIT("\MATA461A.SQL",cQrySC9)
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQrySC9),cCursor3,.F.,.T.)
			aEval(SC9->(dbStruct()), {|x| If(x[2] <> "C", TcSetField(cCursor3,x[1],x[2],x[3],x[4]),Nil)})
		Else
	#ENDIF
		If ( cTabela <> "SC9" )
			cArqBrw := CriaTrab(,.F.)
			IndRegua(cTabela,cArqBrw,(cTabela)->(IndexKey()),,cFilBrw)
			nIndBrw := RetIndex(cTabela)
			#IFNDEF TOP
				dbSetOrder(1)
				Eval(bFiltraBrw)
				nIndBrw += Len(aFiltro[5])
				dbSetIndex(cArqBrw+OrdBagExt())
			#ENDIF
			dbSetOrder(nIndBrw+1)
			dbGotop()
		EndIf
		cArqSC9 := CriaTrab(,.F.)
		IndRegua("SC9",cArqSC9,cKeySC9,,cFilSC9)
		nIndSC9 := RetIndex("SC9")
		#IFNDEF TOP
			If cTabela == "SC9"
				dbSetOrder(1)
				Eval(bFiltraBrw)
				nIndSC9 += Len(aFiltro[5])
			Endif
			dbSetIndex(cArqSC9+OrdBagExt())
		#ENDIF
		dbSetOrder(nIndSC9+1)
		dbGotop()
		#IFDEF TOP
		EndIf
		#ENDIF
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁSeta a regua de processamento das notas fiscais                         Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	ProcRegua((cTabela)->(LastRec()))
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁVerifica as condicoes de quebra de nota fiscal                          Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If lFilDAK
		aadd(aQuebra2,{"DAI->DAI_FILPV",})
	EndIf
	If ( lJunta )
		aadd(aQuebra,{"SC9->C9_AGREG",})
		aadd(aQuebra,{"SC9->C9_CARGA",})
		aadd(aQuebra,{"SC9->C9_SEQCAR",})
		aadd(aQuebra,{"SC5->C5_TIPO",})
		aadd(aQuebra,{"SC5->C5_CLIENTE",})
		aadd(aQuebra,{"SC5->C5_LOJACLI",})
		aadd(aQuebra,{"SC5->C5_TIPOCLI",})
		If SC5->(FieldPos("C5_CLIENT"))>0
			aadd(aQuebra,{"SC5->C5_CLIENT",})
		EndIf
		aadd(aQuebra,{"SC5->C5_LOJAENT",})
		aadd(aQuebra,{"SC5->C5_REAJUST",})
		aadd(aQuebra,{"SC5->C5_CONDPAG",})
		aadd(aQuebra,{"SC5->C5_INCISS",})
		aadd(aQuebra,{"SC5->C5_TRANSP",})
		aadd(aQuebra,{"SC5->C5_TPFRETE",})
		If SC5->(FieldPos("C5_FORNISS"))<>0
			aadd(aQuebra,{"SC5->C5_FORNISS",})
		EndIf
		cVendedor := "1"
		For nCntfor := 1 To nNrVend
			aadd(aQuebra,{"SC5->C5_VEND"+cVendedor,})
			If SC5->(FieldPos("C5_CODRL"+cVendedor))>0
				aadd(aQuebra,{"SC5->C5_CODRL"+cVendedor,})
			EndIf
			cVendedor := Soma1(cVendedor,1)
		Next nCntFor
		If SC5->(FieldPos("C5_RECISS"))>0
			aadd(aQuebra,{"SC5->C5_RECISS",})
		EndIf
	Else
		aadd(aQuebra,{"SC9->C9_CARGA",})
		aadd(aQuebra,{"SC9->C9_SEQCAR",})
		aadd(aQuebra,{"SC9->C9_AGREG",})
		aadd(aQuebra,{"SC9->C9_PEDIDO",})
	EndIf
	If SC9->(FieldPos("C9_CODISS")) > 0 .And. GetNewPar("MV_NFEQUEB",.F.)
		aadd(aQuebra3,{"SC9->C9_CODISS",})
	Endif
	dbSelectArea("SA1")
	dbSetOrder(1)
	MsSeek(xFilial("SA1")+(cCursor3)->(C9_CLIENTE+C9_LOJA))
	If SC9->(FieldPos("C9_RETOPER")) > 0 .And. SB1->(FieldPos("B1_RETOPER")) > 0 .And. (SA1->A1_RECCOFI=="S" .Or. SA1->A1_RECPIS=="S")
		If lQuery
			aadd(aQuebra,{"     Iif("+cCursor3+"->C9_RETOPER=='1' .And. (SB1->B1_PIS=='1' .Or. SB1->B1_COFINS=='1'),'1','2')",})
		Else
			aadd(aQuebra,{"Iif(SC9->C9_RETOPER=='1' .And. (SB1->B1_PIS=='1' .Or. SB1->B1_COFINS=='1' ),'1','2')",})
		EndIf
	Endif
	If ( lQuery )
		aEval(aQuebra ,{|x| x[1]:= SubStr(x[1],6)})
		aEval(aQuebra2,{|x| x[1]:= SubStr(x[1],6)})
		aEval(aQuebra3,{|x| x[1]:= SubStr(x[1],6)})
	EndIf	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁProcessa o Arquivo do Browse                                            Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dbSelectArea(cCursor1)
	While Eval(bWhile1)
		Do Case
		Case cCursor2 == "DAI" .And. cTabela == "DAK"
			DAK->(dbSkip())
			nRecDAK := DAK->(Recno())
			DAK->(dbSkip(-1))
		
			dbSelectArea(cCursor2)
			dbSetOrder(1)
			MsSeek(xFilial("DAI")+(cCursor1)->DAK_COD+(cCursor1)->DAK_SEQCAR)

		Case cCursor2 == "SC9" .And. cTabela == "DAK"
			DAK->(dbSkip())
			nRecDAK := DAK->(Recno())
			DAK->(dbSkip(-1))

			If !lQuery
				dbSelectArea(cCursor3)
				dbSetOrder(nIndSC9+1)
				MsSeek(xFilial("SC9")+(cCursor1)->DAK_COD+(cCursor1)->DAK_SEQCAR)
			EndIf
		EndCase
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁProcessa a tabela vinculada ao browse                                   Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		dbSelectArea(cCursor2)
		While Eval(bWhile2)
			If cTabela == "DAK"
				//-- Uso SIGAOMS - Tratamento para Filial Operador Logistico
				If lFilDAK
					//-- Verifica a Filial na qual deve ser gerada a Nota Fiscal de Saida
					If	cFilAnt <> (cCursor2)->DAI_FILPV
						cFilAnt := (cCursor2)->DAI_FILPV
						MaNFSEnd()
						MaNFSInit()
					EndIf
				EndIf
				If !lQuery
					dbSelectArea(cCursor3)
					dbSetOrder(nIndSC9+1)
					MsSeek(xFilial("SC9")+(cCursor1)->DAK_COD+(cCursor1)->DAK_SEQCAR)
					If cCursor2 <> cCursor3
						(cCursor2)->(dbSkip())
					EndIf
				EndIf
			EndIf
			dbSelectArea(cCursor3)
			While Eval(bWhile3)
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁPosiciona Registros                                                     Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If ( !lQuery )
					dbSelectArea("SB1")
					dbSetOrder(1)
					MsSeek(xFilial("SB1")+SC9->C9_PRODUTO)

					dbSelectArea("SC5")
					dbSetOrder(1)
					MsSeek(xFilial("SC5")+SC9->C9_PEDIDO)

					dbSelectArea("SC6")
					dbSetOrder(1)
					MsSeek(xFilial("SC6")+SC9->C9_PEDIDO+SC9->C9_ITEM+SC9->C9_PRODUTO)

					dbSelectArea("SB2")
					dbSetOrder(1)
					MsSeek(xFilial("SB2")+SC6->C6_PRODUTO+SC9->C9_LOCAL)

					dbSelectArea("SF4")
					dbSetOrder(1)
					MsSeek(xFilial("SF4")+SC6->C6_TES)

					dbSelectArea("SE4")
					dbSetOrder(1)
					MsSeek(xFilial("SE4")+SC5->C5_CONDPAG)                                                                                
				EndIf
				dbSelectArea(cCursor3)
				lConfirma := .T.
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁAtualiza os itens de Quebra                                             Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				aEval(aQuebra, {|x| x[2] := &(x[1])})
				aEval(aQuebra2,{|x| x[2] := &(x[1])})
				aEval(aQuebra3,{|x| x[2] := &(x[1])})
				If !Empty(aQuebra3)
					If lQuery
						If !Empty((cCursor3)->C9_CODISS)
							aAdd(aNfCodISS,(cCursor3)->C9_CODISS)
						EndIf
					Else
						If !Empty(SC9->C9_CODISS)
							aAdd(aNfCodISS,SC9->C9_CODISS)
						EndIf
					EndIf
				EndIf
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁInicializa as variaveis de quebra do SC9                                Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If lQuery
					cPedido := (cCursor3)->C9_PEDIDO
					If lJunta
						cTipo9  := (cCursor3)->E4_TIPO
					EndIf
				Else
					cPedido := SC9->C9_PEDIDO
					If lJunta
						cTipo9  := SE4->E4_TIPO
					EndIf
				EndIf

				// Verifica se bloqueia faturamento quando o 1o vencto < emissao da NF
				// na cond.pgto tipo 9. MV_DATAINF(T = Bloqueia , F = Fatura)
				// Bloqueia faturamento se a moeda nao estiver cadastrada
				If lQuery
					If ( lCond9 .And. (cCursor3)->C5_DATA1 < (dtos(dDataBase)) .And. !Empty((cCursor3)->C5_DATA1) );
						.Or. (xMoeda( 1, (cCursor3)->C5_MOEDA, 1, dDataMoe, TamSX3("M2_MOEDA2")[2] ) = 0)
						lConfirma:= .F.
						If ( xMoeda( 1, (cCursor3)->C5_MOEDA, 1, dDataMoe, TamSX3("M2_MOEDA2")[2] ) = 0 )
							lTxMoeda := .T.
						EndIf							
					EndIf
				Else
					If ( lCond9 .And. SC5->C5_DATA1 < dDataBase .And. !Empty(SC5->C5_DATA1) );
						.Or. ( xMoeda( 1, SC5->C5_MOEDA, 1, dDataMoe, TamSX3("M2_MOEDA2")[2] ) = 0)
						lConfirma:= .F.
						If ( xMoeda( 1, (cCursor3)->C5_MOEDA, 1, dDataMoe, TamSX3("M2_MOEDA2")[2] ) = 0 )
							lTxMoeda := .T.
						EndIf							
					EndIf
				EndIf 
				
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд--©
			    //Ё Verifica se data do movimento n└o ┌ menor que data limite de   Ё
				//Ё movimentacao no financeiro configurada no parametro MV_DATAFIN Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд--ы
				If lQuery
					If (cCursor3)->F4_DUPLIC == "S" .And. !DtMovFin(,.F.)
						lDataFin := .T.
						lConfirma:= .F.
					EndIf
				Else
					If SF4->F4_DUPLIC=="S" .And. !DtMovFin(,.F.)
						lDataFin := .T.
						lConfirma:= .F.
					EndIf
				EndIf	
					
				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁP.E . para exibir mensagem com motivo de nЦo faturar de acordo com parametro MV_DATAINFЁ
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If !(lConfirma) .And. lCond9 .And. ExistBlock( "M461DINF" ) 
					ExecBlock( "M461DINF", .f., .f. ) 
				EndIf
				
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁEfetua a selecao dos registros                                          Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If ( !lQuery )
					If !( SC9->C9_AGREG >= cAgregI .And. SC9->C9_AGREG <= cAgregF .And.;
							SC5->C5_TRANSP >= cTranspI .And. SC5->C5_TRANSP <= cTranspF .And.;
							IIf(cTabela=="SC9",IsMark("C9_OK",cMarca,lInverte),.T.) .And.;
							SC9->C9_BLCRED==Space(Len(SC9->C9_BLCRED)) .And.;
							SC9->C9_BLWMS$"05/06/07/  " .And.;
							SC9->C9_BLEST==Space(Len(SC9->C9_BLEST)) )
						lConfirma:= .F.
					EndIf
				EndIf
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁAvalia a Expressao cCondicao                                            Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If ( !Empty(cCondicao) )
					If ( !(&cCondicao) )
						lConfirma := .F.
					EndIf
				EndIf
				If ( lConfirma )
					nPrcVen   := C9_PRCVEN
					aTravas   := {}
					lSemSaldo := .F.
					lAtuEst   := IIf(lQuery,(cCursor3)->F4_ESTOQUE=="S",SF4->F4_ESTOQUE=="S")
					//здддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Verifica se o produto est═ sendo inventariado  Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддды
					If lAtuEst .And. BlqInvent(C9_PRODUTO,C9_LOCAL,,,SC9->(Recno()))
						Help(" ",1,"BLQINVENT",,C9_PRODUTO+" Almox: "+C9_LOCAL,1,11)
						lConfirma := .F.
					EndIf
					If ( lConfirma )
						If ( !lQuery )
							dbSelectArea("SC5")
						EndIf
						If ( C5_MOEDA <> 1 )
							nPrcVen := a410Arred(xMoeda(nPrcVen,C5_MOEDA,1,dDataMoe,8),"D2_PRCVEN")
						EndIf
						If ( !lQuery )
							dbSelectArea("SC9")
						EndIf
						If nPrcVen <> 0
							If Ma461QIsOk(aPvlNfs,IIf(!lQuery,"SC6",cCursor3),IIf(!lQuery,"SC9",cCursor3)) .And. A461Saldo(C9_PEDIDO,C9_ITEM,C9_PRODUTO,C9_LOCAL,C9_QTDLIB,C9_QTDLIB2,C9_LOTECTL,C9_NUMLOTE,@aTravas,@lSemSaldo,lAtuEst)
	
								// Nao permite D2_TOTAL zerado (quando utilziado D2_PRCVEN muito baixo, sistema estava
								// gravando D2_TOTAL zerado.
								lTotZero := .F.
								If lQuery
									If !((cCursor3)->C5_TIPO $ "CIP") .And. (cCursor3)->F4_QTDZERO <> "1" .And. a410Arred((cCursor3)->C9_QTDLIB*nPrcVen, "D2_TOTAL") == 0
										lTotZero := .T.
									EndIf
								Else
									If !(SC5->C5_TIPO $ "CIP") .And. SF4->F4_QTDZERO <> "1" .And. a410Arred(SC9->C9_QTDLIB*nPrcVen, "D2_TOTAL") == 0
										lTotZero := .T.
									EndIf
								EndIf
								If	!lTotZero
									aadd(aPvlNfs,{ C9_PEDIDO,;
										C9_ITEM,;
										C9_SEQUEN,;
										C9_QTDLIB,;
										nPrcVen,;
										C9_PRODUTO,;
										If(lQuery,F4ISS=="S",SF4->F4_ISS=="S"),;
										If(lQuery,C9RECNO,SC9->(RecNo())),;
										If(lQuery,C5RECNO,SC5->(RecNo())),;
										If(lQuery,C6RECNO,SC6->(RecNo())),;
										If(lQuery,E4RECNO,SE4->(RecNo())),;
										If(lQuery,B1RECNO,SB1->(RecNo())),;
										If(lQuery,B2RECNO,SB2->(RecNo())),;
										If(lQuery,F4RECNO,SF4->(RecNo())),;
										If(lQuery,B2_LOCAL,SB2->B2_LOCAL),;
										If(cTabela<>"DAK",0,If(lQuery,DAKRECNO,DAK->(RecNo()))),;
										C9_QTDLIB2})
								Endif
							Else
								If lSemSaldo
									aAdd(aSemSaldo,{C9_PEDIDO,C9_ITEM,C9_SEQUEN})
								Else
									lAcima := .T.
								EndIf	
							EndIf
						Else
							lTxMoeda := .T.
						EndIf
					EndIf
				EndIf
				If	cTabela == "DAK" .And. (cCursor1)->DAK_COD <> cCarga
					cCarga := (cCursor1)->DAK_COD
					ProcRegua((cCursor1)->DAK_PTOENT)
				EndIf
				dbSelectArea(cCursor3)
				dbSkip()
				If	cTabela == "SC9"
					IncProc(OemToAnsi(STR0010)+": "+cSerie+"/"+cNota) //"Preparados os Doc's: "
				EndIf
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁPosiciona Registros                                                     Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If ( !lQuery )
					dbSelectArea("SB1")
					dbSetOrder(1)
					MsSeek(xFilial("SB1")+SC9->C9_PRODUTO)

					dbSelectArea("SC5")
					dbSetOrder(1)
					MsSeek(xFilial("SC5")+SC9->C9_PEDIDO)

					dbSelectArea("SC6")
					dbSetOrder(1)
					MsSeek(xFilial("SC6")+SC9->C9_PEDIDO+SC9->C9_ITEM+SC9->C9_PRODUTO)

					dbSelectArea("SB2")
					dbSetOrder(1)
					MsSeek(xFilial("SB2")+SC6->C6_PRODUTO+SC9->C9_LOCAL)

					dbSelectArea("SF4")
					dbSetOrder(1)
					MsSeek(xFilial("SF4")+SC6->C6_TES)

					dbSelectArea("SE4")
					dbSetOrder(1)
					MsSeek(xFilial("SE4")+SC5->C5_CONDPAG)
				EndIf

				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁVerifica a quebra                                                       Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				lQuebra := .F.
				If ( aScan(aQuebra,{|x| If(x[2] <> Nil,&(x[1])<>x[2],.F.) }) <> 0 )				
					lQuebra := .T.
				ElseIf ( aScan(aQuebra2,{|x| If(x[2] <> Nil,&(x[1])<>x[2],.F.) }) <> 0 )
					lQuebra := .T.
				ElseIf ( aScan(aQuebra3,{|x| If(x[2] <> Nil,&(x[1])<>x[2].And.!Empty(&(x[1])).And.!Empty(x[2]),.F.) }) <> 0 ) .Or.;
				       ( If(!Empty(aNfCodISS).And.!Empty(If(lQuery,(cCursor3)->C9_CODISS,SC9->C9_CODISS)),aScan(aNfCodISS,If(lQuery,(cCursor3)->C9_CODISS,SC9->C9_CODISS)) == 0,.F.) )
					//Quando nao for NF Conjugada faz a quebra pelo codigo do ISS
					aNfCodIss:= {}
					lQuebra  := .T.
				EndIf

				If ( lJunta )
					If ( !lQuery )
						dbSelectArea("SE4")
					EndIf
					If ( E4_TIPO=="9" .Or. cTipo9=="9" )
						If cPedido <> (cCursor3)->C9_PEDIDO
							lQuebra := .T.
						EndIf
					EndIf
				EndIf
				If ( aEntry[EP_M460NITE] )
					nItemNf := ExecBlock("M460NITE",.F.,.F.,{Len(aPvlNfs),aPvlNfs})
				EndIf
				If ( Len(aPvlNfs) >= nItemNf )
					lQuebra := .T.
				EndIf
				If !lQuebra .And. ( aEntry[EP_M460QUEB] )
					lQuebra := ExecBlock("M460QUEB",.F.,.F.,{cCursor3,aPvlNfs})
				EndIf
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁEfetua a Geracao da Nfs                                                 Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				dbSelectArea(cCursor3)
				If ( lQuebra .Or. ( !Eval(bWhile3) .And. !Eval(bWhile2) ) )
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//ЁVerifica a quebra por numero de itens de nota fiscal                    Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					aEval(aPvlNfs,{|x| nTotal += a410Arred(If(x[4]<>0,x[4],1)*x[5],"D2_TOTAL")})

					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//ЁPonto de entrada para verificar o valor total da nota                   Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If lM461VTot
						lGeraVTot := ExecBlock("M461VTOT",.F.,.F.,{nTotal,aPvlNfs[Len(aPvlNfs),11]})
						If ValType(lGeraVTot) <> "L"
							lGeraVTot := .T.
						Endif
					Endif

					#IFDEF TOP
						If cPaisLoc $ "BRA|MEX" .and. (FunName()=="MATA460A" .Or. FunName()=="MATA460B").and. AliasInDic("FIE") .and. AliasInDic("FR3")
							aAreaSC5Adt := SC5->(GetArea())
							If A410UsaAdi(SC5->C5_CONDPAG)
								RestArea(aAreaSC5Adt)
								aAreaSC9Adt := SC9->(GetArea())
								aAreaSC5Adt := SC5->(GetArea())
								aAreaSC6Adt := SC6->(GetArea())
								aPedAdt := {}
								/*
								estrutura array aPedAdt
								1 - C9_PEDIDO
								2 - C5_CONDPAG
								3 - C9_CLIENTE
								4 - C9_LOJA
								5 - TES do pedido gera duplicata
								*/
								nAcresTot := 0
								aAcresTot := {}
								For nCnt:=1 To Len(aPvlNfs)
									SC9->(MsGoto(aPvlNfs[nCnt][8]))	
									SC5->(MsGoto(aPvlNfs[nCnt][9]))	
									SC6->(MsGoto(aPvlNfs[nCnt][10]))	
									nPosAdt := aScan(aPedAdt,{|x| x[1]+x[2]+x[3]+x[4] = SC9->C9_PEDIDO+SC5->C5_CONDPAG+SC9->C9_CLIENTE+SC9->C9_LOJA})
									If nPosAdt = 0
										aAdd(aPedAdt,{SC9->C9_PEDIDO,SC5->C5_CONDPAG,SC9->C9_CLIENTE,SC9->C9_LOJA,AvalTes(SC6->C6_TES,,"S")})
									Else
										If !aPedAdt[nPosAdt][5]		
											aPedAdt[nPosAdt][5] := AvalTes(SC6->C6_TES,,"S")
										Endif	
									Endif	
									// calcula o acrescimo financeiro para os itens liberados deste pedido
									nAcresTot := MaAcreFinAdt(aPvlNfs,nCnt,MV_PAR05==1,dDataMoe)
									// gera array com valores de acrescimo para cada pedido
									nPosAcres := aScan(aAcresTot,{|x| x[1] = aPvlNfs[nCnt][1]})
									If nPosAcres = 0
										aAdd(aAcresTot,{aPvlNfs[nCnt][1],nAcresTot})
									Else
										aAcresTot[nPosAcres][2] += nAcresTot
									Endif		
								Next nCnt	
								RestArea(aAreaSC5Adt)
								RestArea(aAreaSC6Adt)
								RestArea(aAreaSC9Adt)
								// avalia cada pedido em separado, para checar se hah algum adiantamento relacionado ao pedido
								For nCnt:=1 To Len(aPedAdt)
									If aScan(aPedSemAd,aPedAdt[nCnt][1]) <= 0
										If aPedAdt[nCnt][5] // somente valida valor do adiantamento se algum item liberado neste pedido tem TES que gera duplicata
											nAcresTot := aAcresTot[aScan(aAcresTot,{|x| x[1] = aPedAdt[nCnt][1]})][2]
											lPedSemAd := A461NAdian(aPedAdt[nCnt][1],aPedAdt[nCnt][2],aPvlNfs,.F.,.F.,aPedAdt[nCnt][3],aPedAdt[nCnt][4],{},nAcresTot)
											If !lPedSemAd
												aAdd(aPedSemAd,aPedAdt[nCnt][1])
												lValidouAdt := .F.
												//Exit
											Else
												lValidouAdt := .T.
												Exit // se validou um pedido nao precisa validar o restante.
											Endif		
										Endif	
									Endif
								Next nCnt
							EndIf
						Endif	
					#ENDIF
									
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Decreto N╨ 54.869, de 2 de outubro de 2009 do Estado de SЦo Paulo	   Ё
					//Ё Atingido o valor mАximo do cupom fiscal: 10.000,00.					   Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					lLeiSP := .F.
					If lECF .And. nTotal > 10000 .And. LjAnalisaLeg(51)[1]
					    aAdd(aPedDecret,cPedido)
					    lLeiSP := .T.
					EndIf
									
					If ( nTotal > nFatMin .And. !Empty(aPvlNfs) .And. lGeraVTot .and. lValidouAdt .And. !lLeiSP)
						dbSelectArea("SC9")
						cNota := MaPvlNfs(aPvlNfs,cSerie,lMostraCtb,lAglutCtb,lCtbOnLine,lCtbCusto,lReajusta,nCalAcrs,nArredPrcLis,lAtuSA7,lECF,,,,,,dDataMoe)
					EndIf
					nTotal  := 0
					aPvlNfs := {}
					aNfCodISS := {}
					lValidouAdt := .T.

					If cTabela == "DAK"
						IncProc(OemToAnsi(STR0010)+": "+cCarga+" - "+cSerie+"/"+cNota) //"Preparados os Doc's: "
					EndIf
				EndIf
				dbSelectArea(cCursor3)
				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Remove travas dos registros utilizados                  Ё
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				MaDesTrava(aTravas)
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁControle de cancelamento do usuario                                     Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If lEnd
					Exit
				EndIf
			EndDo
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁControle de cancelamento do usuario                                     Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

			//-- Uso SIGAOMS - Tratamento para Filial Operador Logistico
			If lFilDAK .And. cFilAnt <> cSavFil
				cFilAnt := cSavFil
			EndIf

			If lEnd
				Exit
			EndIf
		EndDo
		If ( cCursor1 <> cCursor2 )
			If (cCursor2 == "DAI" .Or. cCursor2 == "SC9") .And. cTabela == "DAK"
				dbSelectArea("DAK")
				DAK->(MSGoTo(nRecDAK))
			Else
				dbSelectArea(cCursor1)
				dbSkip()
			Endif	
		EndIf
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁControle de cancelamento do usuario                                     Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If lEnd
			Exit
		EndIf
	EndDo
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁRestaura a entrada da rotina                                            Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If ( lQuery )
		dbSelectArea(cCursor3)
		dbCloseArea()
		dbSelectArea("SC9")
	Else
		RetIndex("SC9")
		dbClearFilter()
		FErase(cArqSC9+OrdBagExt())
		If cTabela <> "SC9"
			RetIndex(cCursor1)
			dbClearFilter()
			FErase(cArqBrw+OrdBagExt())
		EndIf
		Eval(bFiltraBrw)
	EndIf
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁTratamento de mensagens                                                 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lTxMoeda
	Aviso(STR0018,STR0019,{STR0021}) //"Mensagens"###"Alguns pedidos nao foram gerados pois nao existe taxa para a moeda"
EndIf
If lAcima
	Aviso(STR0018,STR0031,{STR0021}) //"Mensagens" //"Alguns itens dos pedidos nao foram gerados pois a Qtd.Vendida e menor que a liberada!"
EndIf
If lTotZero
	Aviso(STR0018,STR0049,{STR0021}) //"Mensagens" //"Alguns itens dos pedidos nao foram gerados pois o valor total do item esta igual a zero"
EndIf 
If lSemSaldo
	cString += STR0053+Chr(13)+Chr(10)+Chr(13)+Chr(10) //"Os itens abaixo nЦo foram gerados devido a falta de quantidade disponivel do produto em estoque. Verificar o saldo disponivel em estoque para os itens abaixo: "
	For nCntFor := 1 To Len(aSemSaldo)
		cString += STR0054 + aSemSaldo[nCntFor,1] + " / " + STR0055 + aSemSaldo[nCntFor,2] + " / " + STR0056 + aSemSaldo[nCntFor,3] + Chr(13)+Chr(10) //"Nro.Pedido: " ###### "Item : " ### "Sequencia: " ###
	Next nCntFor 
	Aviso(STR0018,cString,{STR0021}) //"Mensagens" 
EndIf
If lDataFin
	Aviso(STR0018,STR0086,{STR0021})	//"Alguns itens nЦo foram gerados, pois nЦo sЦo permitidas movimentaГУes financeiras com datas menores que a data limite de movimentaГУes no Financeiro. Verificar o parБmetro MV_DATAFIN."
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁRestaura a entrada da rotina                                            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
cFilAnt := cSavFil
RestArea(aAreaSC9)
RestArea(aArea)

Return( Nil )

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMaPvlNfs  Ё Autor ЁEduardo Riera          Ё Data Ё28.08.1999Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁInclusao de Nota fiscal de Saida atraves do PV liberado     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpA1: Array com os itens a serem gerados                   Ё╠╠
╠╠Ё          ЁExpC2: Serie da Nota Fiscal                                 Ё╠╠
╠╠Ё          ЁExpL3: Mostra Lct.Contabil                                  Ё╠╠
╠╠Ё          ЁExpL4: Aglutina Lct.Contabil                                Ё╠╠
╠╠Ё          ЁExpL5: Contabiliza On-Line                                  Ё╠╠
╠╠Ё          ЁExpL6: Contabiliza Custo On-Line                            Ё╠╠
╠╠Ё          ЁExpL7: Reajuste de preco na nota fiscal                     Ё╠╠
╠╠Ё          ЁExpN8: Tipo de Acrescimo Financeiro                         Ё╠╠
╠╠Ё          ЁExpN9: Tipo de Arredondamento                               Ё╠╠
╠╠Ё          ЁExpLA: Atualiza Amarracao Cliente x Produto                 Ё╠╠
╠╠Ё          ЁExplB: Cupom Fiscal                                         Ё╠╠
╠╠Ё          ЁExpCC: Numero do Embarque de Exportacao                     Ё╠╠
╠╠Ё          ЁExpBD: Code block para complemento de atualizacao dos titu- Ё╠╠
╠╠Ё          Ё       los financeiros.                                     Ё╠╠
╠╠Ё          ЁExpBE: Code block para complemento de atualizacao dos dados Ё╠╠
╠╠Ё          Ё       apos a geracao da nota fiscal.                       Ё╠╠
╠╠Ё          ЁExpBF: Code Block de atualizacao do pedido de venda antes   Ё╠╠
╠╠Ё                  da geracao da nota fiscal                            Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё16/05/07  |Norbert Waage  ЁBops 125161:Altera status do orcamento do   Ё╠╠ 
╠╠Ё          Ё               ЁTelevendas (SIGATMK) apos a geracao da NF.  Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function MaPvlNfs(aPvlNfs,cSerieNFS,lMostraCtb,lAglutCtb,lCtbOnLine,lCtbCusto,lReajuste,nCalAcrs,nArredPrcLis,lAtuSA7,lECF,cEmbExp,bAtuFin,bAtuPGerNF,bAtuPvl,bFatSE1,dDataMoe)

Static lM460Num
Local aMults    := {}
Local aCopia    := {}
Local aPedido   := {}
Local cNumNFS   := ""
Local cArquivo  := ""
Local nHdlPrv   := 0
Local nLctTotal := 0
Local nX        := 0
Local nY        := 0
Local nOpcA     := 0
Local nPvlNfs   := Len(aPvlNfs[1])
Local lContinua := .T.
Local lLct610   := .F.
Local lLct611   := .F.
Local lLct620   := .F.
Local lIntACD	:= SuperGetMV("MV_INTACD",.F.,"0") == "1"
Local oList
Local oDlg
Local cTpNrNfs  := SuperGetMV("MV_TPNRNFS")
Local lM461Ser   := ExistBlock("M461SER",.F.,.F.)
Local lErroGFE := .F.
Local cFatGFE := SuperGetMv("MV_FATGFE",.F.,"2")

#IFDEF TOP
	Local cQuery := ""
#ENDIF	

Default bAtuPGerNF := {||}
Default bAtuPvl    := {||}
Default bFatSE1    := {|| .T. }
DEFAULT lM460Num   := ExistBlock("M460NUM",.F.,.F.)
Default dDataMoe   := dDatabase

If Empty(dDataMoe)
	dDataMoe := dDatabase
Endif

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁCarga das Variaveis Staticas do Programa                                Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If Len(aEntry) == 0
	MaNfsInit()
Else
	MaFisEnd()
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁCompatibilizacao do Array aPvlNFS                                       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If nPvlNFs < 17
	For nX := 1 To Len(aPvlNfs)
		aadd(aCopia,{})
		For nY := 1 To Len(aPvlNfs[nX])
			aadd(aCopia[nX],aPvlNfs[nX][nY])
		Next nY
		nY := Len(aCopia[nX])
		If nY < 17
			For nY := nY  To 17
				Do Case
				Case nY == 14
					aadd(aCopia[nX],"")
				OtherWise
					aadd(aCopia[nX],0)
				EndCase
			Next nY		
		EndIf	
	Next nX
	aPvlNfs := aClone(aCopia)
	aCopia  := {}
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁTratamento de DEAD-LOCK                                                 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !(GetNewPar("MV_NFS_JOB",.F.) .And. SC9->(FieldPos("C9_NUMSEQ"))<>0)
	For nX := 1 to Len(aPvlNfs)
		If aScan(aMults,aPvlNfs[nX,6]+aPvlNfs[nX,15])==0
			AADD(aMults,aPvlNfs[nX,6]+aPvlNfs[nX,15])
		EndIf
	Next nX
	While !MultLock("SB2",aMults,1)	
		If !InTransact()
			SB2->(MsRUnLock())
			If Empty(aPedido)
				For nX := 1 To Len(aPvlNfs)
					If aScan(aPvlNfs,aPvlNfs[nX,1])==0
						aadd(aPedido,{aPvlNfs[nX,1],aPvlNfs[nX,2],aPvlNfs[nX,3]})
					EndIf
				Next nX
			EndIf
			DEFINE MSDIALOG oDlg TITLE OemToAnsi( STR0005 ) From 0,0 To 295,460 OF oMainWnd PIXEL
			@ 000,000 BITMAP oBmp RESNAME "LOGIN" oF oDlg SIZE 45,155 NOBORDER WHEN .F. PIXEL
			@ 010,050 SAY OemToAnsi(STR0012) PIXEL SIZE 200,009
			@ 020,050 SAY OemToAnsi(STR0013) PIXEL SIZE 200,009
			@ 035,050 LISTBOX oList FIELDS HEADER RetTitle("C9_PEDIDO"),RetTitle("C9_ITEM"),RetTitle("C9_SEQUEN") SIZE 145,110 Of oDlg PIXEL
			oList:SetArray( aPedido )
			oList:bLine := {|| {aPedido[oList:nAt,1],aPedido[oList:nAt,2],aPedido[oList:nAt,3]} }
			DEFINE SBUTTON FROM 035,200 TYPE 1 ACTION (oDlg:End()) ENABLE OF oDlg
			DEFINE SBUTTON FROM 050,200 TYPE 2 ACTION (nOpcA:=1,oDlg:End()) ENABLE OF oDlg
			ACTIVATE MSDIALOG oDlg CENTERED
			If nOpcA == 1
				lContinua := .F.
				Exit
			EndIf
		Else
			ConOut("WARNING: DEADLOCK CONTROL IS ON")
		EndIf
	EndDo
Else
	lContinua := .T.
EndIf
If lContinua
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁVerifica o Fechamento do Estoque                                        Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If ( If(FindFunction("MVUlmes"),MVUlmes(),SuperGetMV("MV_ULMES")) >= dDataBase )
		Help ( " ", 1, "FECHTO" )
		lContinua := .F.
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁVerifica o Fechamento do Fiscal                                         Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If ( !FisChkDt(dDataBase) )
		lContinua := .F.
	EndIf
EndIf
If lContinua
	// Se lMudouNum for .T. significa que o usuario alterou o numero da nota em MV_TPNRNFS == "3"
	// e o sistema deve respeitar o novo numero contido em cNumero (apenas para MV_ESTADO = "SC").
	If Type("lMudouNum") == "U"
		Private lMudouNum := .F.	
	EndIf	
	If lMudouNum .And. (cTpNrNfs == "3" .Or. cTpNrNfs == "2")
		cNumNFS  := cNumero
		// Se alterou o numero, sistema ir arespeitar novo numero informado para primeira nota, porem,
		// a partir da segunda nota o sistema buscara a numeracao normal a partir do SXE/SXF
		If cTpNrNfs == "2"
			lMudouNum := .F.
		EndIf
	ElseIf !lM461Ser	//Se utilizar o PE nЦo executa a funГЦo, pois estava alterando a numeraГЦo da sИrie posicionada na geraГЦo da nota.
		cNumNFS  := IIf(!lECF,NxtSX5Nota( cSerieNFS,.T.,cTpNrNfs),"")
	EndIf	

	If lM460Num .Or. lM461Ser
		If lM461Ser .And. !Empty(cNumNFS)
			cNumero := cNumNFS
		Else	
			cNumero := cNumNFS
		EndIf
		
		PRIVATE cSerie  := cSerieNFS
	    
	   If lM460Num
		  ExecBlock("M460NUM",.F.,.F.,aPvlNfs)
	   Elseif lM461Ser 
			  ExecBlock("M461SER",.F.,.F.,aPvlNfs) // PE criado para que o usuАrio controle a alteraГЦo da numeraГЦo, mas nЦo troque o numero das sИrie que nЦo foi utilizada. O PE original foi mantido por legado
	   Endif	
		cNumNFS   := cNumero
		cSerieNFS := cSerie
	EndIf  
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁVerifica os Lancamentos contabeis                                       Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If ( lCtbOnLine )
		lLct610 := VerPadrao("610")
		lLct611 := VerPadrao("611")
		lLct620 := VerPadrao("620")
	EndIf
	If ( lLct610 .Or. lLct620 .Or. lLct611)
		PRIVATE cLote
		LoteCont("FAT")
		nHdlPrv :=HeadProva(cLote,"MATA460",cUserName,@cArquivo)
	EndIf	
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Inicializa a gravacao dos lancamentos do SIGAPCO          Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	PcoIniLan("000101") 
	
	Begin Transaction
		// Obtem numero do documento dentro da transacao
		If cTpNrNfs == "3" 
			If AliasIndic("SD9") .And. (!lM460Num .Or. Empty(cNumNFS))
				// Se cNumNFS estiver preenchido significa que o usuario alterou o numero da nota em MV_TPNRNFS == "3"
				// e o sistema deve respeitar o novo numero
				cNumNFS:=MA461NumNf(.T.,cSerieNFS,cNumNFS,lECF)
				// Se alterou o numero, sistema ir arespeitar novo numero informado para primeira nota, porem,
				// a partir da segunda nota o sistema buscara a numeracao normal a partir do SD9
				lMudouNum := .F.
			EndIf	
		EndIf	
		MaPvlNfs2(aPvlNfs,cSerieNFS,cNumNFS,lLct610,lLct611,lLct620,@nLctTotal,@nHdlPrv,lReajuste,nCalAcrs,nArredPrcLis,lAtuSA7,lECF,cEmbExp,bAtuFin,bAtuPvl,bFatSE1,dDataMoe)
		Eval( bAtuPGerNF ) //-- Atualiza dados apos a geracao da nota fiscal

		//
		// Template GEM - Gestao de empreendimentos imobiliarios
		// Grava os contratos de empreendimentos
		//
		If ExistTemplate("GEMXGRCON",,.T.)      
			ExecTemplate("GEMXGRCON",.F.,.F.,{aPvlNfs,cNumNFS,cSerieNFS}) 
		EndIf
		
		//-- IntegraГЦo Protheus x GFE (INCLUSAO)
		If !MATA461IPG(cNumNFS,cSerieNFS)
			//Indica se a geraГЦo de Nota Fiscal И interrompida quando 
			//ocorre erro de validaГЦo na integraГЦo com o GFE.
		
			If cFatGFE $ "1S"
				DisarmTransaction()
				lErroGFE := .T.
			EndIf
		EndIf
		
	End Transaction
	
	If !lErroGFE
		While __lSx8
			ConfirmSx8()
		EndDo
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁContabiliza os Lancamentos Contabeis                                    Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If ( nLctTotal <> 0 )
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Envia para Lancamento Contabil, se gerado arquivo 	 Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
			Begin Transaction
				RodaProva(nHdlPrv,nLctTotal)
				cA100Incl(cArquivo,nHdlPrv,3,cLote,lMostraCtb,lAglutCtb,,,,{{"F2_DTLANC",dDataBase,"SF2",SF2->(Recno()),0,0,0}})
			End Transaction
		EndIf
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Finaliza a gravacao dos lancamentos do SIGAPCO            Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		PcoFinLan("000101")
			
		aPedido := {}
		For nX := 1 To Len(aPvlNfs)
			If aScan(aPedido,aPvlNfs[nX,1])==0
				aAdd(aPedido,aPvlNfs[nX,1])
			EndIf
		Next nX
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁAtualiza o orcamento do Televendas, se foi originado a partirЁ
		//Ёdele no modulo Call Center (SIGATMK)                         Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		For nX := 1 To Len(aPedido)
			TkAtuTlv(aPedido[nX],3,cNumNFS,cSerieNFS,dDataBase)
		Next nX
	
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Integracao com o modulo ACD - Analisa a rotina e o tipo da NF para verificar se faz o Ё
		//Ё	acerto das tabelas para devolucao ou para NF normal		  							  Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If lIntACD .And. FindFunction("CBM460FIM")
			CBM460FIM()
		EndIf
		
		If ( ExistTemplate("M460FIM") )
			ExecTemplate("M460FIM",.F.,.F.)
		EndIf
		
		If aEntry[EP_M460FIM]
			ExecBlock("M460FIM",.F.,.F.)
		EndIf
	
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁNeogrid - Verifica a existencia da Administracao colaborativa de PedidosЁ
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If (NeoEnable())
			NeoEnvNFS(cNumNFS)
		EndIf
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁExclusao fisica dos itens de pedido de venda liberados                  Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		aPedido := {}
		For nX := 1 To Len(aPvlNfs)
			If aScan(aPedido,aPvlNfs[nX,1])==0	
				aadd(aPedido,aPvlNfs[nX,1])
			EndIf
		Next nX
		#IFDEF TOP
			If SuperGetMV("MV_DEL_PVL")<>3
				For nX := 1 To Len(aPedido)
					cQuery := "DELETE FROM "+RetSqlName("SC9")+" "
					cQuery += "WHERE C9_FILIAL='"+xFilial("SC9")+"' AND "
					cQuery += "C9_PEDIDO='"+aPedido[nX]+"' AND "
					If SuperGetMV("MV_DEL_PVL")==1
						cQuery += "((C9_BLCRED = '10' AND C9_BLEST='10') OR D_E_L_E_T_='*' )"
					Else
						cQuery += "D_E_L_E_T_='*' "
					EndIf
					TcSqlExec(cQuery)
				Next nX
			EndIf
		#ENDIF

		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁTemplate GEM - Gestao de empreendimentos imobiliarios                   Ё
		//ЁTela de complemento de contrato permite visualizar os dados do contrato Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If ExistTemplate("GEMDlgCon",,.T.)
			ExecTemplate("GEMDlgCon",.F.,.F.,{aPvlNfs,cNumNFS,cSerieNFS}) 
		EndIf
		MaFisEnd()
	EndIf
EndIf

Return( cNumNFS )

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMaPvlNfs2 Ё Autor ЁEduardo Riera          Ё Data Ё28.08.1999Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁInclusao de Nota fiscal de Saida atraves do PV liberado     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpA1: Array com os itens a serem gerados                   Ё╠╠
╠╠Ё          ЁExpC2: Serie da Nota Fiscal                                 Ё╠╠
╠╠Ё          ЁExpC3: Numero da Nota Fiscal                                Ё╠╠
╠╠Ё          ЁExpL4: Lancamento 610                                       Ё╠╠
╠╠Ё          ЁExpL5: Lancamento 611                                       Ё╠╠
╠╠Ё          ЁExpL6: Lancamento 620                                       Ё╠╠
╠╠Ё          ЁExpN7: Controle de contabilizacao                           Ё╠╠
╠╠Ё          ЁExpN8: Handle do arquivo de contabilizacao                  Ё╠╠
╠╠Ё          ЁExpL9: Reajuste de preco na nota fiscal                     Ё╠╠
╠╠Ё          ЁExpNA: Tipo de Acrescimo Financeiro                         Ё╠╠
╠╠Ё          ЁExpNB: Tipo de Arredondamento                               Ё╠╠
╠╠Ё          ЁExpLC: Atualiza Amarracao Cliente x Produto                 Ё╠╠
╠╠Ё          ЁExplD: Cupom Fiscal                                         Ё╠╠
╠╠Ё          ЁExpCE: Numero do Embarque de Exportacao                     Ё╠╠
╠╠Ё          ЁExpBF: Code block para complemento de atualizacao dos titu- Ё╠╠
╠╠Ё          Ё       los financeiros.                                     Ё╠╠
╠╠Ё          ЁExpBG: Code Block de atualizacao do pedido de venda antes   Ё╠╠
╠╠Ё          Ё       da geracao da nota fiscal                            Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function MaPvlNfs2(aPvlNfs,cSerie,cNumero,lLct610,lLct611,lLct620,nLctTotal,nHdlPrv,lReajuste,nCalAcrs,nArredPrcLis,lAtuSA7,lECF,cEmbExp,bAtuFin,bAtuPvl,bFatSE1,dDataMoe)

Local aArea      := GetArea()
Local aAreaSC9   := SC9->(GetArea())
Local aAreaDAK   := DAK->(GetArea())       
Local aPedido    := {}
Local aRateio    := {}
Local aItPedido  := {}
Local aRetImpFi  := {}
Local aTitulo    := { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0, 0, 0, 0, 0 }
Local aCarga     := {}
Local aNfOriLot  := {}
Local aGNRE      := {}
Local aRecTit    := {}
Local aDatas     := {}
Local aDSF2      := {}
LOcal aGnreProd  := {}
Local dDtIni     := Ctod("//")
Local dDtFim     := Ctod("//")
Local dDtVenc    := Ctod("//")
Local nValNeg    := 0
Local nItValNeg  := 0
Local nAcValNeg  := 0
Local nCntFor    := 0
Local nX         := 0
Local nTotal     := 0
Local nPeso      := 0
Local nScan      := 0
Local nPrcVen    := 0
Local nMoeda     := 0
Local nRatDesp   := 0
Local nRatFrete  := 0
Local nRatSeg    := 0
Local nRateio    := 0
Local nFrete     := 0
Local nVlr_Frt   := 0
Local nFretAut   := 0
Local nSeguro    := 0
Local nDespesa   := 0
Local nDesconto  := 0
Local nFrete2    := 0
Local nVlr_Frt2  := 0
Local nFretAut2  := 0
Local nSeguro2   := 0
Local nDespesa2  := 0
Local nDesconto2 := 0
Local nTotalPed  := 0
Local nMes       := 0
Local nAno       := 0
Local nVlrIcm    := 0 
Local nVlrIcmST  := 0
Local nVFecpST   := 0
Local nVFecMGST  :=0
Local nVFecMG    :=0
Local cItemNf    := "01"
Local cBanco     := ""
Local cPdv	     := Space(10)
Local cLcPadTit  := Substr(GetMv("MV_LPADICM"),1,3)					
Local lLancCont  := .F.
Local lConfTit   := .F.
Local lTit       := .F. 
Local lTitICMS  := .F.
Local lGRec    := .F. 
Local lGRecICMS := .F.
Local lGfecpmg   := .F.
Local lTitfemg   := .F.
Local lCupFis    := .F.
Local lMoedaFre  := .F.
Local lContinua  := .T.
Local lQuery     := .F.
Local lIVAAju    := .F.  //Tratamento do calculo do IVA Ajustado  
Local lGRecProd := .F. 
Local lTitProd  := .F.
Local cCgc	    := "" 	 
Local nPosItem 	:= 0
Local cAliq 	:= ""
Local nPosGnre  := 0
Local aSxFci	:= A461RetCFci(,1)
Local lLeiTran	:= SD2->(FieldPos("D2_TOTIMP"))>0 .And. SF2->(FieldPos("F2_TOTIMP"))>0 .And. SF2->(FieldPos("F2_TIPIMP"))>0 //Verifica se existem os campos para utilizaГЦo da Lei da transparЙncia
Local cMvFisCTrb:= SuperGetMv("MV_FISCTRB",.F.,"1")    // mИtodo de consulta do percentual de carga tributАria.Informe 1 para tratamento legado ou 2 alМquotas da Nota Fiscal e CGA/CGB - #conteudo gravado no campo D2_TIPIMP - Lei da transparЙncia

Local nFretAux := 0
Local nSeguAux := 0
Local nDespAux := 0
Local lTpLibPed:= (GetNewPar("MV_TPRTDSP","1")=="1")

Local cMarca   := ThisMark()
Local cMV_B1M996	:=	GetNewPar ("MV_B1M996", "")
Local cB1M996		:=	""
Local cB1FRETISS := ""

//Gestao de contratos - SIGAGCT
Local aContrato  := {}
Local aMedicao   := {}

//Tratamento diferenciado na geracao do SE1 (MV_TMSMFAT)
Local lFatSE1    := .T.

#IFDEF TOP
	Local cAlias   := ""
	Local cDbMs    := ""
	Local cQuery   := ""
#ELSE
	Local cUltNf   := ""
#ENDIF

Local cTpNrNfs	 := SuperGetMV("MV_TPNRNFS")
Local lMvAtuComp := SuperGetMV("MV_ATUCOMP",,.F.)  

//Tratamento para geracao da guia de recolhimento ICMS-ST
Local nValICMSST := 0
Local aAtuSC5 := Array(0)
Local aRecSE1Adt := Array(0)
Local aAcresTot := {}
Local nCnt := 0
Local nAcresTot := 0
//Tratamento para geraГЦo da geracao da guia de recolhimento ICMS PrСprio
Local nValICM := 0
Local nDedICM := 0
//Verifica se a funcionalidade Lista de Presente esta ativa e aplicada
Local lUsaLstPre	:= SuperGetMV("MV_LJLSPRE",,.F.) .And. IIf(FindFunction("LjUpd78Ok"),LjUpd78Ok(),.F.)


// IntegraГЦo GFE
Local aFieldValue := {}
Local aStruModel  := {}
Local lIntGFE     := SuperGetMv("MV_INTGFE",,.F.)
Local nTotAcre	  := 0

//здддддддддддддддддддддддддддддддд©
//ЁTratamento para e-Commerce      Ё
//юдддддддддддддддддддддддддддддддды
Local lECommerce := SuperGetMV("MV_LJECOMM",,.F.) .AND. GetRpoRelease("R5")

Local aSL1		  := {}			// Array que contera dados para gravacao SL1 (Cabecalho do Orcamento)

//Tratamento diferenciado na geracao do SE1 (MV_TMSMFAT)
Default bFatSE1  := {|| .T. }
Default dDataMoe := dDataBase

If Empty(dDataMoe)
	dDataMoe := dDatabase
Endif

lMoedaFre:= SuperGetMv("MV_FRETMOE") == "S"
lCupFis  := Alltrim(cSerie) == Alltrim(SuperGetMv("MV_SERCUP")) .And. aEntry[EP_M461IMPF] .And. lECF
nRatDesp := Val(SubStr(SuperGetMv("MV_RATDESP"),AT("DESP=",SuperGetMv("MV_RATDESP"))+5,1))
nRatFrete:= Val(SubStr(SuperGetMv("MV_RATDESP"),AT("FR=",SuperGetMv("MV_RATDESP"))+3,1))
nRatSeg  := Val(SubStr(SuperGetMv("MV_RATDESP"),AT("SEG=",SuperGetMv("MV_RATDESP"))+4,1))
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁCalculo das despesas acessorias - Frete/Seguro/Despesas Acessorias      Ё
//Ё                                                                        Ё
//Ё- O Frete eh gravado no pedido de Venda, assim ele pode ser estar rela- Ё
//Ё  cionado ao itens do pedido de venda ou aos itens liberados do pedido  Ё
//Ё  de venda. O default eh para os itens liberados do pedido de venda.    Ё
//Ё                                                                        Ё
//Ё- O parametro responsavel por esta configuracao eh o MV_TPRTDSP que casoЁ
//Ё  seja configurado como 1, refere-se aos itens liberados e 2 aos itens  Ё
//Ё  do pedido de venda.                                                   Ё
//Ё                                                                        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
For nCntFor := 1 To Len(aPvlNfs)
	If ( aScan(aPedido,{|y| y[1]==aPvlNfs[nCntFor,1]}) == 0 )
		aadd(aPedido,{aPvlNfs[nCntFor,1],"00","000",0,0,0,0,0,0,0,0,0,0,0,0,0,{0,0,0,0},0,0,0,0,0,0,0})
	EndIf
	nScan := Len(aPedido)
	If ( aPvlNfs[nCntFor][2] > aPedido[nScan][2] )
		aPedido[nScan][2] := aPvlNfs[nCntFor][2]
		aPedido[nScan][3] := aPvlNfs[nCntFor][3]
	EndIf
	If ( aPedido[nScan][2] == aPvlNfs[nCntFor][2] )
		aPedido[nScan][3] := If(aPvlNfs[nCntFor][3]>aPedido[nScan][3],aPvlNfs[nCntFor][3],aPedido[nScan][3])
	EndIf
Next nCntFor

For nCntFor := 1 To Len(aPedido)

	dbSelectArea("SC5")
	dbSetOrder(1)
	MsSeek(xFilial("SC5")+aPedido[nCntFor][1])
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁCalculo das despesas acessorias - Frete/Seguro/Despesas Acessorias      Ё
	//Ё                                                                        Ё
	//ЁVerifica quanto das despesas jА foi utilizado. Isto И necessАrio para o Ё
	//Ёajuste de centavos que deve ocorrer na ultima nota do pedido de venda.  Ё
	//Ё                                                                        Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды	
	If ( lContinua )
		lContinua := SoftLock("SC5")
	EndIf
	If GetNewPar("MV_TPRTDSP","1")=="2"
		nScan := aScan(aSavRat,{|x| x[SV_PEDIDO]==aPedido[nCntFor][1]})
		If nScan == 0
			#IFDEF TOP
				cAlias := GetNextAlias()
				lQuery := .T.
				
				cQuery := "SELECT DISTINCT D2_FILIAL,D2_DOC,D2_SERIE,D2_PEDIDO,F2_FRETE,F2_FRETAUT,F2_SEGURO,F2_DESPESA,F2_DESCCAB "
				If SF2->(FieldPos("F2_VLR_FRT")) > 0
					cQuery += ",F2_VLR_FRT "
				EndIf
				cQuery += "FROM "+RetSqlName("SF2")+" SF2,"
				cQuery += RetSqlName("SD2")+" SD2 "
				cQuery += "WHERE SD2.D2_FILIAL='"+xFilial("SD2")+"' AND "
				cQuery += "SD2.D2_PEDIDO = '"+aPedido[nCntFor][1]+"' AND "
				cQuery += "SD2.D_E_L_E_T_=' ' AND "
				cQuery += "SF2.F2_FILIAL='"+xFilial("SF2")+"' AND "
				cQuery += "SF2.F2_DOC = SD2.D2_DOC AND "
				cQuery += "SF2.F2_SERIE = SD2.D2_SERIE AND "
				cQuery += "SF2.F2_CLIENTE = SD2.D2_CLIENTE AND "
				cQuery += "SF2.F2_LOJA = SF2.F2_LOJA AND "
				cQuery += "SF2.D_E_L_E_T_= ' ' "
				
				cQuery := ChangeQuery(cQuery)
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAlias,.F.,.T.)
				
				While !Eof()
					nScan := aScan(aSavRat,{|x| x[SV_PEDIDO]==aPedido[nCntFor][1]})
					If nScan == 0
						aadd(aSavRat,{ aPedido[nCntFor][1],;
							0,;
							0,;
							0,;
							0,;
							0,;				
							0,;
							0})
						nScan := Len(aSavRat)
					EndIf
					dbSelectArea(cAlias)
					aSavRat[nScan][SV_FRETE  ] += (cAlias)->F2_FRETE
					aSavRat[nScan][SV_FRETAUT] += (cAlias)->F2_FRETAUT
					aSavRat[nScan][SV_SEGURO ] += (cAlias)->F2_SEGURO
					aSavRat[nScan][SV_DESPESA] += (cAlias)->F2_DESPESA
					aSavRat[nScan][SV_DESCONT] += (cAlias)->F2_DESCCAB
					aSavRat[nScan][SV_DESPAC2] += 0
					If (cAlias)->(FieldPos("F2_VLR_FRT")) > 0
						aSavRat[nScan][SV_VLR_FRT]  += (cAlias)->F2_VLR_FRT
					EndIf
					If SC5->C5_FRETE <=0
						aSavRat[nScan][SV_FRETE  ] := 0
					EndIf	
					dbSelectArea(cAlias)
					dbSkip()
				EndDo				
				dbSelectArea(cAlias)
                dbCloseArea()
                dbSelectArea("SD2")
			#ELSE
				dbSelectArea("SD2")
				dbSetOrder(8)
				MsSeek(xFilial("SD2")+aPedido[nCntFor][1])
				While !Eof() .And. xFilial("SD2") == SD2->D2_FILIAL .And. aPedido[nCntFor][1] == SD2->D2_PEDIDO
					If xFilial("SF2")+SD2->D2_DOC+SD2->D2_SERIE+SD2->D2_CLIENTE+SD2->D2_LOJA <> cUltNf
						dbSelectArea("SF2")
						dbSetOrder(1)
						MsSeek(xFilial("SF2")+SD2->D2_DOC+SD2->D2_SERIE+SD2->D2_CLIENTE+SD2->D2_LOJA)
						nScan := aScan(aSavRat,{|x| x[SV_PEDIDO]==aPedido[nCntFor][1]})
						If nScan == 0
							aadd(aSavRat,{ aPedido[nCntFor][1],;
								0,;
								0,;
								0,;
								0,;
								0,;				
								0,;
								0})
							nScan := Len(aSavRat)
						EndIf
						aSavRat[nScan][SV_FRETE  ] += SF2->F2_FRETE
						aSavRat[nScan][SV_FRETAUT] += SF2->F2_FRETAUT
						aSavRat[nScan][SV_SEGURO ] += SF2->F2_SEGURO
						aSavRat[nScan][SV_DESPESA] += SF2->F2_DESPESA
						aSavRat[nScan][SV_DESCONT] += SF2->F2_DESCCAB
						aSavRat[nScan][SV_DESPAC2] += 0
						If SF2->(FieldPos("F2_VLR_FRT")) > 0
							aSavRat[nScan][SV_VLR_FRT]  += SF2->F2_VLR_FRT
						EndIf						
						If SC5->C5_FRETE <=0
							aSavRat[nScan][SV_FRETE  ] := 0
						EndIf							
					EndIf	
					cUltNf := xFilial("SF2")+SD2->D2_DOC+SD2->D2_SERIE+SD2->D2_CLIENTE+SD2->D2_LOJA											
					dbSelectArea("SD2")
					dbSkip()
				EndDo
			#ENDIF
		EndIf
    EndIf	
	cBanco := SC5->C5_BANCO
	nMoeda := SC5->C5_MOEDA

	If !Empty(SC5->C5_PEDEXP) .And. SuperGetMV("MV_EECFAT") .And. FindFunction("EECFat2FreteEmb") .And. SuperGetMv("MV_EEC0038",,.F.)
		//зддддддддддддддддддддддддддддддддддддддд©
		//ЁTrata o frete de exportaГЦo (embarque) Ё
		//юддддддддддддддддддддддддддддддддддддддды
		EECFat2FreteEmb(SC5->C5_NUM, SC5->C5_PEDEXP, aPvlNfs, aPedido, aSavRat, @cEmbExp, dDataMoe, @lTpLibPed)
	EndIf
	
	//зддддддддддддддддддддддддддддддддддддддддддд©
	//ЁConverte da moeda do pedido para corrente  Ё
	//юддддддддддддддддддддддддддддддддддддддддддды
	nFrete    := NoRound(xMoeda(SC5->C5_FRETE   ,If(lMoedaFre,SC5->C5_MOEDA,1),1,dDataMoe),2)
	nFretAut  := NoRound(xMoeda(SC5->C5_FRETAUT ,If(lMoedaFre,SC5->C5_MOEDA,1),1,dDataMoe),2)
	nSeguro   := NoRound(xMoeda(SC5->C5_SEGURO  ,If(lMoedaFre,SC5->C5_MOEDA,1),1,dDataMoe),2)
	nDespesa  := NoRound(xMoeda(SC5->C5_DESPESA ,If(lMoedaFre,SC5->C5_MOEDA,1),1,dDataMoe),2)
	nDesconto := NoRound(xMoeda(SC5->C5_DESCONT ,If(lMoedaFre,SC5->C5_MOEDA,1),1,dDataMoe),2)
	If SC5->(FieldPos("C5_VLR_FRT")) > 0
		nVlr_Frt  := NoRound(xMoeda(SC5->C5_VLR_FRT,If(lMoedaFre,SC5->C5_MOEDA,1),1,dDataMoe),2)
	EndIf
	aPedido[nCntFor][19] := IIf(SC5->(FieldPos("C5_PDESCAB"))<>0,SC5->C5_PDESCAB/100,0)
	
	nScan := aScan(aSavRat,{|x| x[SV_PEDIDO]==aPedido[nCntFor][1]})
	If nScan > 0
		nFrete   -= aSavRat[nScan][SV_FRETE]
		nFretAut -= aSavRat[nScan][SV_FRETAUT]
		nSeguro  -= aSavRat[nScan][SV_SEGURO]
		nDespesa -= aSavRat[nScan][SV_DESPESA]
		nDesconto-= aSavRat[nScan][SV_DESCONT]
		nVlr_Frt  -= aSavRat[nScan][SV_VLR_FRT]		
	EndIf
	If (  nFrete  <> 0 .Or. ;
			nSeguro <> 0 .Or. ;
			nDespesa<> 0 .Or. ;
			nFretAut<> 0 .Or. ;
			nDesconto<> 0.Or. ;
			nVlr_Frt<> 0)

		//зддддддддддддддддддддддддддддддддддд©
		//ЁConverte frete para moeda do pedidoЁ
		//юддддддддддддддддддддддддддддддддддды
		If lMoedaFre
			nFrete2    := SC5->C5_FRETE-IIf(nScan<>0,NoRound(xMoeda(aSavRat[nScan][SV_FRETE],1,SC5->C5_MOEDA,dDataMoe),2),0)
			nFretAut2  := SC5->C5_FRETAUT-IIf(nScan<>0,NoRound(xMoeda(aSavRat[nScan][SV_FRETAUT],1,SC5->C5_MOEDA,dDataMoe),2),0)
			nSeguro2   := SC5->C5_SEGURO-IIf(nScan<>0,NoRound(xMoeda(aSavRat[nScan][SV_SEGURO],1,SC5->C5_MOEDA,dDataMoe),2),0)
			nDespesa2  := SC5->C5_DESPESA-IIf(nScan<>0,NoRound(xMoeda(aSavRat[nScan][SV_DESPESA],1,SC5->C5_MOEDA,dDataMoe),2),0)
			nDesconto2 := SC5->C5_DESCONT-IIf(nScan<>0,NoRound(xMoeda(aSavRat[nScan][SV_DESCONT],1,SC5->C5_MOEDA,dDataMoe),2),0)
			If SC5->(FieldPos("C5_VLR_FRT")) > 0			
				nVlr_Frt2   := SC5->C5_VLR_FRT-IIf(nScan<>0,NoRound(xMoeda(aSavRat[nScan][SV_VLR_FRT],1,SC5->C5_MOEDA,dDataMoe),2),0)
			EndIf
		Else
			nFrete2    := NoRound(xMoeda(nFrete    ,1 ,SC5->C5_MOEDA ,dDataMoe),2)
			nFretAut2  := NoRound(xMoeda(nFretAut  ,1 ,SC5->C5_MOEDA ,dDataMoe),2)
			nSeguro2   := NoRound(xMoeda(nSeguro   ,1 ,SC5->C5_MOEDA ,dDataMoe),2)
			nDespesa2  := NoRound(xMoeda(nDespesa  ,1 ,SC5->C5_MOEDA ,dDataMoe),2)
			nDesconto2 := NoRound(xMoeda(nDesconto ,1 ,SC5->C5_MOEDA ,dDataMoe),2)
			nVlr_Frt2  := NoRound(xMoeda(nVlr_Frt  ,1 ,SC5->C5_MOEDA ,dDataMoe),2)
		EndIf
				
		aPedido[nCntFor][20] := nFrete2+nFretAut2+nSeguro2+nDespesa2-nDesconto2-IIf(nScan<>0,aSavRat[nScan][SV_DESPAC2],0) //Arredondamento em dolar
		aPedido[nCntFor][21] := SC5->C5_MOEDA
		
		#IFDEF TOP    
			cDbMs := UPPER(TcGetDb())
			If ( TcSrvType()<>"AS/400")		
				If ( nRatDesp == 2 .Or. nRatFrete == 2 .Or. nRatSeg == 2 )
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//ЁCalcula o Valor Total do Pedido                                         Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					cAlias := CriaTrab(,.F.)
					If GetNewPar("MV_TPRTDSP","1")=="2"
						cQuery := "SELECT SUM(ROUND(SB1.B1_PESO*(SC6.C6_QTDVEN-SC6.C6_QTDENT),2)) TOTALPED FROM "
						cQuery += RetSqlName("SB1")+" SB1 ,"
						cQuery += RetSqlName("SC6")+" SC6 ,"
						cQuery += RetSqlName("SF4")+" SF4  "
						cQuery += " WHERE "
						cQuery += " SC6.C6_FILIAL='"+xFilial("SC6")+"' AND "
						cQuery += " SC6.C6_NUM='"+aPedido[nCntFor][1]+"' AND "
						cQuery += " SC6.C6_PRCVEN>0 AND "
						cQuery += " SC6.D_E_L_E_T_=' ' AND "
						cQuery += " SF4.F4_FILIAL='"+xFilial("SF4")+"' AND "
						cQuery += " SF4.F4_CODIGO=SC6.C6_TES AND "
						cQuery += " SF4.D_E_L_E_T_=' ' AND "
						cQuery += " SF4.F4_ISS<>'S' AND "
						cQuery += " SB1.B1_FILIAL='"+xFilial("SB1")+"' AND "
						cQuery += " SB1.B1_COD=SC6.C6_PRODUTO AND "
						cQuery += " SB1.D_E_L_E_T_=' ' "
					Else
						cQuery := "SELECT SUM(ROUND(SB1.B1_PESO*SC9.C9_QTDLIB,2)) TOTALPED FROM "
						cQuery += RetSqlName("SC9")+" SC9 ,"
						cQuery += RetSqlName("SB1")+" SB1 ,"
						cQuery += RetSqlName("SC6")+" SC6 ,"
						cQuery += RetSqlName("SF4")+" SF4  "
						cQuery += " WHERE SC9.C9_FILIAL='"+xFilial("SC9")+"' AND"
						cQuery +=      " SC9.C9_PEDIDO='"+aPedido[nCntFor][1]+"' AND"
						cQuery +=      " SC9.C9_NFISCAL='"+Space(Len(SC9->C9_NFISCAL))+"' AND"
						cQuery +=      " SC9.C9_PRCVEN>0 AND"
						cQuery +=      " SC9.D_E_L_E_T_=' ' AND"
						cQuery +=      " SC6.C6_FILIAL='"+xFilial("SC6")+"' AND"
						cQuery +=      " SC6.C6_NUM=SC9.C9_PEDIDO AND"
						cQuery +=      " SC6.C6_ITEM=SC9.C9_ITEM AND"
						cQuery +=      " SC6.C6_PRODUTO=SC9.C9_PRODUTO AND"
						cQuery +=      " SC6.D_E_L_E_T_=' ' AND"
						cQuery +=      " SF4.F4_FILIAL='"+xFilial("SF4")+"' AND"
						cQuery +=      " SF4.F4_CODIGO=SC6.C6_TES AND"
						cQuery +=      " SF4.D_E_L_E_T_=' ' AND"
						cQuery +=      " SF4.F4_ISS<>'S' AND"
						cQuery +=      " SB1.B1_FILIAL='"+xFilial("SB1")+"' AND"
						cQuery +=      " SB1.B1_COD=SC9.C9_PRODUTO AND"
						cQuery +=      " SB1.D_E_L_E_T_=' '"						
					EndIf
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Pontos de Entrada 			                                           Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If ( aEntry[EP_M460QRT] )
						cQuery := ExecTemplate("M460QRY",.F.,.F.,{ cQuery , 2})
					EndIf 
					
					If nModulo == 72
						cQuery := KEXF750(cQuery , 2)
					EndIf
					
					If ( aEntry[EP_M460QRY] )
						cQuery := ExecBlock("M460QRY",.F.,.F.,{ cQuery , 2})
					EndIf
					If "MSSQL"$Upper(TcGetDb())
						cQuery := StrTran(cQuery,"ROUND(","ROUND(CONVERT(DECIMAL(36,12),")
						cQuery := StrTran(cQuery,",2)","),2)")
					EndIf
					cQuery := ChangeQuery(cQuery)

					//MEMOWRIT("\MATA461B.SQL",cQuery)

					dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAlias,.F.,.T.)

					dbSelectArea(cAlias)
					aPedido[nCntFor][16] := NoRound(TOTALPED,8)
					dbCloseArea()
					dbSelectArea("SC5")

					If aPedido[nCntFor][16]>0
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//ЁRateio das despesas acessorias                                          Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						If GetNewPar("MV_TPRTDSP","1")=="2"
							cQuery := "SELECT SUM(ROUND(B1_PESO*(SC6.C6_QTDVEN-SC6.C6_QTDENT)*"+StrZero(nFrete2,16,2)+"/"
							cQuery += StrZero(aPedido[nCntFor][16],16,2)+",2)) FRETE,"
							cQuery += "SUM(ROUND(B1_PESO*(SC6.C6_QTDVEN-SC6.C6_QTDENT)*"+StrZero(nSeguro2,16,2)+"/"+StrZero(aPedido[nCntFor][16],16,2)+",2)) SEGURO,"
							cQuery += "SUM(ROUND(B1_PESO*(SC6.C6_QTDVEN-SC6.C6_QTDENT)*"+StrZero(nDespesa2,16,2)+"/"+StrZero(aPedido[nCntFor][16],16,2)+",2)) DESPESA, "
							cQuery += "SUM(ROUND(B1_PESO*(SC6.C6_QTDVEN-SC6.C6_QTDENT)*"+StrZero(nFretAut2,16,2)+"/"+StrZero(aPedido[nCntFor][16],16,2)+",2)) FRETAUT, "
							cQuery += "SUM(ROUND(B1_PESO*(SC6.C6_QTDVEN-SC6.C6_QTDENT)*"+StrZero(nVlr_Frt2,16,2)+"/"+StrZero(aPedido[nCntFor][16],16,2)+",2)) VLR_FRT "
							cQuery += "FROM "+RetSqlName("SC5")+" SC5 ,"
							cQuery +=         RetSqlName("SC6")+" SC6 ,"
							cQuery +=         RetSqlName("SB1")+" SB1 ,"
							cQuery +=         RetSqlName("SF4")+" SF4 "
							cQuery += "WHERE SC5.C5_FILIAL='"+xFilial("SC5")+"' AND"
							cQuery +=      " SC5.C5_NUM='"+aPedido[nCntFor][1]+"' AND"
							cQuery +=      " SC5.D_E_L_E_T_=' ' AND"
							cQuery +=      " SC6.C6_FILIAL='"+xFilial("SC6")+"' AND"
							cQuery +=      " SC6.C6_NUM=SC5.C5_NUM AND"
							cQuery +=      " SC6.D_E_L_E_T_=' ' AND"
							cQuery +=      " SF4.F4_FILIAL='"+xFilial("SF4")+"' AND"
							cQuery +=      " SF4.F4_CODIGO=SC6.C6_TES AND"
							cQuery +=      " SF4.D_E_L_E_T_=' ' AND"
							cQuery +=      " SF4.F4_ISS<>'S' AND"
							cQuery +=      " SB1.B1_FILIAL='"+xFilial("SB1")+"' AND"
							cQuery +=      " SB1.B1_COD=SC6.C6_PRODUTO AND"
							cQuery +=      " SB1.D_E_L_E_T_=' '"
						Else
							cQuery := "SELECT SUM(ROUND(B1_PESO*C9_QTDLIB*"+StrZero(nFrete2,16,2)+"/"
							cQuery += StrZero(aPedido[nCntFor][16],16,2)+",2)) FRETE,"
							cQuery += "SUM(ROUND(B1_PESO*C9_QTDLIB*"+StrZero(nSeguro2,16,2)+"/"+StrZero(aPedido[nCntFor][16],16,2)+",2)) SEGURO,"
							cQuery += "SUM(ROUND(B1_PESO*C9_QTDLIB*"+StrZero(nDespesa2,16,2)+"/"+StrZero(aPedido[nCntFor][16],16,2)+",2)) DESPESA, "
							cQuery += "SUM(ROUND(B1_PESO*C9_QTDLIB*"+StrZero(nFretAut2,16,2)+"/"+StrZero(aPedido[nCntFor][16],16,2)+",2)) FRETAUT, "
							cQuery += "SUM(ROUND(B1_PESO*C9_QTDLIB*"+StrZero(nVlr_Frt2,16,2)+"/"+StrZero(aPedido[nCntFor][16],16,2)+",2)) VLR_FRT "
							cQuery += "FROM "+RetSqlName("SC5")+" SC5 ,"
							cQuery +=         RetSqlName("SC6")+" SC6 ,"
							cQuery +=         RetSqlName("SB1")+" SB1 ,"
							cQuery +=         RetSqlName("SF4")+" SF4 ,"
							cQuery +=         RetSqlName("SC9")+" SC9  "
							cQuery += "WHERE SC5.C5_FILIAL='"+xFilial("SC5")+"' AND"
							cQuery +=      " SC5.C5_NUM='"+aPedido[nCntFor][1]+"' AND"
							cQuery +=      " SC5.D_E_L_E_T_=' ' AND"
							cQuery +=      " SC9.C9_FILIAL='"+xFilial("SC9")+"' AND"
							cQuery +=      " SC9.C9_PEDIDO=SC5.C5_NUM AND"
							cQuery +=      " SC9.C9_NFISCAL='"+Space(Len(SC9->C9_NFISCAL))+"' AND"
							cQuery +=      " SC9.C9_PRCVEN>0 AND"
							cQuery +=      " SC9.D_E_L_E_T_=' ' AND"
							cQuery +=      " SC6.C6_FILIAL='"+xFilial("SC6")+"' AND"
							cQuery +=      " SC6.C6_NUM=SC9.C9_PEDIDO AND"
							cQuery +=      " SC6.C6_ITEM=SC9.C9_ITEM AND"
							cQuery +=      " SC6.C6_PRODUTO=SC9.C9_PRODUTO AND"
							cQuery +=      " SC6.D_E_L_E_T_=' ' AND"
							cQuery +=      " SF4.F4_FILIAL='"+xFilial("SF4")+"' AND"
							cQuery +=      " SF4.F4_CODIGO=SC6.C6_TES AND"
							cQuery +=      " SF4.D_E_L_E_T_=' ' AND"
							cQuery +=      " SF4.F4_ISS<>'S' AND"
							cQuery +=      " SB1.B1_FILIAL='"+xFilial("SB1")+"' AND"
							cQuery +=      " SB1.B1_COD=SC9.C9_PRODUTO AND"
							cQuery +=      " SB1.D_E_L_E_T_=' '"
						EndIf
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Pontos de Entrada 													   Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						If ( aEntry[EP_M460QRT] )
							cQuery := ExecTemplate("M460QRY",.F.,.F.,{ cQuery , 3})
						EndIf
						
						If nModulo == 72
							cQuery := KEXF750(cQuery , 3)
						EndIf
						
						If ( aEntry[EP_M460QRY] )
							cQuery := ExecBlock("M460QRY",.F.,.F.,{ cQuery , 3})
						EndIf
						If "MSSQL"$Upper(TcGetDb())
							cQuery := StrTran(cQuery,"ROUND(","ROUND(CONVERT(DECIMAL(36,12),")
							cQuery := StrTran(cQuery,",2)","),2)")
						EndIf
						cQuery := ChangeQuery(cQuery)
						//MEMOWRIT("\MATA461C.SQL",cQuery)
	
						dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAlias,.F.,.T.)
	
						aPedido[nCntFor][06] := nFrete2
						aPedido[nCntFor][07] := nSeguro2
						aPedido[nCntFor][08] := nDespesa2
						aPedido[nCntFor][09] := nFretAut2
						aPedido[nCntFor][23] := nVlr_Frt2
	
						aPedido[nCntFor][11] := aPedido[nCntFor][06]
						aPedido[nCntFor][12] := aPedido[nCntFor][07]
						aPedido[nCntFor][13] := aPedido[nCntFor][08]
						aPedido[nCntFor][14] := aPedido[nCntFor][09]
						aPedido[nCntFor][24] := aPedido[nCntFor][23]
	
						aPedido[nCntFor][11] -= FRETE
						aPedido[nCntFor][12] -= SEGURO
						aPedido[nCntFor][13] -= DESPESA
						aPedido[nCntFor][14] -= FRETAUT
						aPedido[nCntFor][24] -= VLR_FRT
	
						If ( nRatFrete == 2 )
							aPedido[nCntFor][17][1] := 2
						EndIf
						If ( nRatDesp == 2 )
							aPedido[nCntFor][17][2] := 2
						EndIf
						If ( nRatSeg == 2 )
							aPedido[nCntFor][17][3] := 2
						EndIf
	
						dbCloseArea()
						dbSelectArea("SC5")
					EndIf
				EndIf
				If ( nRatDesp == 1 .Or. nRatFrete == 1 .Or. nRatSeg == 1 .Or. aPedido[nCntFor][16]==0 )
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//ЁCalcula o Valor Total do Pedido                                         Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					cAlias := CriaTrab(,.F.)				
					If GetNewPar("MV_TPRTDSP","1")=="2"					
						cQuery := "SELECT SUM(SC6.C6_PRCVEN*(SC6.C6_QTDVEN-SC6.C6_QTDENT)) TOTALPED FROM "
						cQuery += RetSqlName("SC6")+" SC6 ,"
						cQuery += RetSqlName("SF4")+" SF4  "
						cQuery += " WHERE "
						cQuery += " SC6.C6_FILIAL='"+xFilial("SC6")+"' AND"
						cQuery += " SC6.C6_NUM='"+aPedido[nCntFor][1]+"' AND"
						cQuery += " SC6.C6_PRCVEN>0 AND"
						cQuery += " SC6.D_E_L_E_T_=' ' AND"
						cQuery += " SF4.F4_FILIAL='"+xFilial("SF4")+"' AND"
						cQuery += " SF4.F4_CODIGO=SC6.C6_TES AND"
						cQuery += " SF4.D_E_L_E_T_=' ' AND "
						cQuery += " SF4.F4_ISS<>'S'"
						cQuery += "UNION SELECT SUM(SC6.C6_PRCVEN) TOTALPED FROM "
						cQuery += RetSqlName("SC6")+" SC6 ,"
						cQuery += RetSqlName("SF4")+" SF4  "
						cQuery += " WHERE "
						cQuery += " SC6.C6_FILIAL='"+xFilial("SC6")+"' AND"
						cQuery += " SC6.C6_NUM='"+aPedido[nCntFor][1]+"' AND"
						cQuery += " SC6.C6_PRCVEN>0 AND"
						cQuery += " SC6.C6_QTDVEN=0 AND"						
						cQuery += " SC6.D_E_L_E_T_=' ' AND"
						cQuery += " SF4.F4_FILIAL='"+xFilial("SF4")+"' AND"
						cQuery += " SF4.F4_CODIGO=SC6.C6_TES AND"
						cQuery += " SF4.D_E_L_E_T_=' ' AND "
						cQuery += " SF4.F4_ISS<>'S'"
					Else
						cQuery := "SELECT SUM(SC9.C9_PRCVEN*SC9.C9_QTDLIB) TOTALPED FROM "
						cQuery += RetSqlName("SC9")+" SC9 ,"
						cQuery += RetSqlName("SC6")+" SC6 ,"
						cQuery += RetSqlName("SF4")+" SF4  "
						cQuery += " WHERE SC9.C9_FILIAL='"+xFilial("SC9")+"' AND"
						cQuery +=      " SC9.C9_PEDIDO='"+aPedido[nCntFor][1]+"' AND"
						cQuery +=      " SC9.C9_NFISCAL='"+Space(Len(SC9->C9_NFISCAL))+"' AND"
						cQuery +=      " SC9.C9_PRCVEN>0 AND"
						cQuery +=      " SC9.D_E_L_E_T_=' ' AND"
						cQuery +=      " SC6.C6_FILIAL='"+xFilial("SC6")+"' AND"
						cQuery +=      " SC6.C6_NUM=SC9.C9_PEDIDO AND"
						cQuery +=      " SC6.C6_ITEM=SC9.C9_ITEM AND"
						cQuery +=      " SC6.C6_PRODUTO=SC9.C9_PRODUTO AND"
						cQuery +=      " SC6.D_E_L_E_T_=' ' AND"
						cQuery +=      " SF4.F4_FILIAL='"+xFilial("SF4")+"' AND"
						cQuery +=      " SF4.F4_CODIGO=SC6.C6_TES AND"
						cQuery +=      " SF4.D_E_L_E_T_=' ' AND "
						cQuery +=      " SF4.F4_ISS<>'S'"
						
						cQuery += "UNION SELECT SUM(SC9.C9_PRCVEN) TOTALPED FROM "
						cQuery += RetSqlName("SC9")+" SC9 ,"
						cQuery += RetSqlName("SC6")+" SC6 ,"
						cQuery += RetSqlName("SF4")+" SF4  "
						cQuery += " WHERE SC9.C9_FILIAL='"+xFilial("SC9")+"' AND"
						cQuery +=      " SC9.C9_PEDIDO='"+aPedido[nCntFor][1]+"' AND"
						cQuery +=      " SC9.C9_NFISCAL='"+Space(Len(SC9->C9_NFISCAL))+"' AND"
						cQuery +=      " SC9.C9_PRCVEN>0 AND"             
						cQuery +=      " SC9.C9_QTDLIB=0 AND"										
						cQuery +=      " SC9.D_E_L_E_T_=' ' AND"
						cQuery +=      " SC6.C6_FILIAL='"+xFilial("SC6")+"' AND"
						cQuery +=      " SC6.C6_NUM=SC9.C9_PEDIDO AND"
						cQuery +=      " SC6.C6_ITEM=SC9.C9_ITEM AND"
						cQuery +=      " SC6.C6_PRODUTO=SC9.C9_PRODUTO AND"
						cQuery +=      " SC6.D_E_L_E_T_=' ' AND"
						cQuery +=      " SF4.F4_FILIAL='"+xFilial("SF4")+"' AND"
						cQuery +=      " SF4.F4_CODIGO=SC6.C6_TES AND"
						cQuery +=      " SF4.D_E_L_E_T_=' ' AND "
						cQuery +=      " SF4.F4_ISS<>'S'"						
					EndIf

					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Pontos de Entrada 		                                               Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If ( aEntry[EP_M460QRT] )
						cQuery := ExecTemplate("M460QRY",.F.,.F.,{ cQuery , 2})
					EndIf  
					
					If nModulo == 72
						cQuery := KEXF750(cQuery , 2)
					EndIf
					
					If ( aEntry[EP_M460QRY] )
						cQuery := ExecBlock("M460QRY",.F.,.F.,{ cQuery , 2})
					EndIf
					If "MSSQL"$Upper(TcGetDb())
						cQuery := StrTran(cQuery,"ROUND(","ROUND(CONVERT(DECIMAL(36,12),")
						cQuery := StrTran(cQuery,",2)","),2)")
					EndIf
					cQuery := ChangeQuery(cQuery)

					dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAlias,.F.,.T.)

					dbSelectArea(cAlias)
					While (cAlias)->(!Eof())
						aPedido[nCntFor][05] += NoRound((cAlias)->TOTALPED,2) 
						(cAlias)->(dbSkip())
					EndDo					

					dbCloseArea()
					dbSelectArea("SC5")

					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//ЁRateio das despesas acessorias                                          Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If GetNewPar("MV_TPRTDSP","1")=="2"
						cQuery := "SELECT SUM(ROUND(C6_PRCVEN*(SC6.C6_QTDVEN-SC6.C6_QTDENT)*"+StrZero(nFrete2,16,2)+"/"
						cQuery += StrZero(aPedido[nCntFor][05],16,2)+",2)) FRETE,"
						cQuery += "SUM(ROUND(C6_PRCVEN*(SC6.C6_QTDVEN-SC6.C6_QTDENT)*"+StrZero(nSeguro2,16,2)+"/"+StrZero(aPedido[nCntFor][05],16,2)+",2)) SEGURO,"
						cQuery += "SUM(ROUND(C6_PRCVEN*(SC6.C6_QTDVEN-SC6.C6_QTDENT)*"+StrZero(nDespesa2,16,2)+"/"+StrZero(aPedido[nCntFor][05],16,2)+",2)) DESPESA, "
						cQuery += "SUM(ROUND(C6_PRCVEN*(SC6.C6_QTDVEN-SC6.C6_QTDENT)*"+StrZero(nFretAut2,16,2)+"/"+StrZero(aPedido[nCntFor][05],16,2)+",2)) FRETAUT, "
						cQuery += "SUM(ROUND(C6_PRCVEN*(SC6.C6_QTDVEN-SC6.C6_QTDENT)*"+StrZero(nVlr_Frt2,16,2)+"/"+StrZero(aPedido[nCntFor][05],16,2)+",2)) VLR_FRT "
						cQuery += "FROM "+RetSqlName("SC5")+" SC5 ,"
						cQuery +=         RetSqlName("SC6")+" SC6 ,"
						cQuery +=         RetSqlName("SF4")+" SF4 " 
						cQuery += "WHERE SC5.C5_FILIAL='"+xFilial("SC5")+"' AND"
						cQuery +=      " SC5.C5_NUM='"+aPedido[nCntFor][1]+"' AND"
						cQuery +=      " SC5.D_E_L_E_T_=' ' AND"			
						cQuery +=      " SC6.C6_FILIAL='"+xFilial("SC6")+"' AND"
						cQuery +=      " SC6.C6_NUM=SC5.C5_NUM AND"
						cQuery +=      " SC6.D_E_L_E_T_=' ' AND"
						cQuery +=      " SF4.F4_FILIAL='"+xFilial("SF4")+"' AND"
						cQuery +=      " SF4.F4_CODIGO=SC6.C6_TES AND"
						cQuery +=      " SF4.D_E_L_E_T_=' ' AND "
						cQuery +=      " SF4.F4_ISS<>'S'"
					Else
						cQuery := "SELECT SUM(ROUND(C9_PRCVEN*C9_QTDLIB*"+StrZero(nFrete2,16,2)+"/"
						cQuery += StrZero(aPedido[nCntFor][05],16,2)+",2)) FRETE,"
						cQuery += "SUM(ROUND(C9_PRCVEN*C9_QTDLIB*"+StrZero(nSeguro2,16,2)+"/"+StrZero(aPedido[nCntFor][05],16,2)+",2)) SEGURO,"
						cQuery += "SUM(ROUND(C9_PRCVEN*C9_QTDLIB*"+StrZero(nDespesa2,16,2)+"/"+StrZero(aPedido[nCntFor][05],16,2)+",2)) DESPESA, "
						cQuery += "SUM(ROUND(C9_PRCVEN*C9_QTDLIB*"+StrZero(nFretAut2,16,2)+"/"+StrZero(aPedido[nCntFor][05],16,2)+",2)) FRETAUT, "
						cQuery += "SUM(ROUND(C9_PRCVEN*C9_QTDLIB*"+StrZero(nVlr_Frt2,16,2)+"/"+StrZero(aPedido[nCntFor][05],16,2)+",2)) VLR_FRT "
						cQuery += "FROM "+RetSqlName("SC5")+" SC5 ,"
						cQuery +=         RetSqlName("SC6")+" SC6 ,"
						cQuery +=         RetSqlName("SF4")+" SF4 ,"
						cQuery +=         RetSqlName("SC9")+" SC9  "
						cQuery += "WHERE SC5.C5_FILIAL='"+xFilial("SC5")+"' AND"
						cQuery +=      " SC5.C5_NUM='"+aPedido[nCntFor][1]+"' AND"
						cQuery +=      " SC5.D_E_L_E_T_=' ' AND"
						cQuery +=      " SC9.C9_FILIAL='"+xFilial("SC9")+"' AND"
						cQuery +=      " SC9.C9_PEDIDO=SC5.C5_NUM AND"
						cQuery +=      " SC9.C9_NFISCAL='"+Space(Len(SC9->C9_NFISCAL))+"' AND"
						cQuery +=      " SC9.C9_PRCVEN>0 AND"
						cQuery +=      " SC9.C9_QTDLIB>0 AND"					
						cQuery +=      " SC9.D_E_L_E_T_=' ' AND"
						cQuery +=      " SC6.C6_FILIAL='"+xFilial("SC6")+"' AND"
						cQuery +=      " SC6.C6_NUM=SC9.C9_PEDIDO AND"
						cQuery +=      " SC6.C6_ITEM=SC9.C9_ITEM AND"
						cQuery +=      " SC6.C6_PRODUTO=SC9.C9_PRODUTO AND"
						cQuery +=      " SC6.D_E_L_E_T_=' ' AND"
						cQuery +=      " SF4.F4_FILIAL='"+xFilial("SF4")+"' AND"
						cQuery +=      " SF4.F4_CODIGO=SC6.C6_TES AND"
						cQuery +=      " SF4.D_E_L_E_T_=' ' AND "
						cQuery +=      " SF4.F4_ISS<>'S'"
					EndIf
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Pontos de Entrada													   Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If ( aEntry[EP_M460QRT] )
						cQuery := ExecTemplate("M460QRY",.F.,.F.,{ cQuery , 3})
					EndIf
					
					If nModulo == 72
						cQuery := KEXF750(cQuery , 3)
					EndIf
					
					If ( aEntry[EP_M460QRY] )
						cQuery := ExecBlock("M460QRY",.F.,.F.,{ cQuery , 3})
					EndIf
					
					cQuery += " UNION " 
					
					If GetNewPar("MV_TPRTDSP","1")=="2"
						cQuery += "SELECT SUM(ROUND(C6_PRCVEN*"+StrZero(nFrete2,16,2)+"/"
						cQuery += StrZero(aPedido[nCntFor][05],16,2)+",2)) FRETE,"
						cQuery += "SUM(ROUND(C6_PRCVEN*"+StrZero(nSeguro2,16,2)+"/"+StrZero(aPedido[nCntFor][05],16,2)+",2)) SEGURO,"
						cQuery += "SUM(ROUND(C6_PRCVEN*"+StrZero(nDespesa2,16,2)+"/"+StrZero(aPedido[nCntFor][05],16,2)+",2)) DESPESA, "
						cQuery += "SUM(ROUND(C6_PRCVEN*"+StrZero(nFretAut2,16,2)+"/"+StrZero(aPedido[nCntFor][05],16,2)+",2)) FRETAUT, "
						cQuery += "SUM(ROUND(C6_PRCVEN*"+StrZero(nVlr_Frt2,16,2)+"/"+StrZero(aPedido[nCntFor][05],16,2)+",2)) VLR_FRT "
						cQuery += "FROM "+RetSqlName("SC5")+" SC5 ,"
						cQuery +=         RetSqlName("SC6")+" SC6 ,"
						cQuery +=         RetSqlName("SF4")+" SF4 "
						cQuery += "WHERE SC5.C5_FILIAL='"+xFilial("SC5")+"' AND"
						cQuery +=      " SC5.C5_NUM='"+aPedido[nCntFor][1]+"' AND"
						cQuery +=      " SC5.D_E_L_E_T_=' ' AND"
						cQuery +=      " SC6.C6_FILIAL='"+xFilial("SC6")+"' AND"
						cQuery +=      " SC6.C6_NUM=SC5.C5_NUM AND"
						cQuery +=      " SC6.C6_QTDVEN=0 AND"						
						cQuery +=      " SC6.D_E_L_E_T_=' ' AND"
						cQuery +=      " SF4.F4_FILIAL='"+xFilial("SF4")+"' AND"
						cQuery +=      " SF4.F4_CODIGO=SC6.C6_TES AND"
						cQuery +=      " SF4.D_E_L_E_T_=' ' AND "
						cQuery +=      " SF4.F4_ISS<>'S'"
					Else
						cQuery += "SELECT SUM(ROUND(C9_PRCVEN*"+StrZero(nFrete2,16,2)+"/"
						cQuery += StrZero(aPedido[nCntFor][05],16,2)+",2)) FRETE,"
						cQuery += "SUM(ROUND(C9_PRCVEN*"+StrZero(nSeguro2,16,2)+"/"+StrZero(aPedido[nCntFor][05],16,2)+",2)) SEGURO,"
						cQuery += "SUM(ROUND(C9_PRCVEN*"+StrZero(nDespesa2,16,2)+"/"+StrZero(aPedido[nCntFor][05],16,2)+",2)) DESPESA, "
						cQuery += "SUM(ROUND(C9_PRCVEN*"+StrZero(nFretAut2,16,2)+"/"+StrZero(aPedido[nCntFor][05],16,2)+",2)) FRETAUT, "
						cQuery += "SUM(ROUND(C9_PRCVEN*"+StrZero(nVlr_Frt2,16,2)+"/"+StrZero(aPedido[nCntFor][05],16,2)+",2)) VLR_FRT "
						cQuery += "FROM "+RetSqlName("SC5")+" SC5 ,"
						cQuery +=         RetSqlName("SC6")+" SC6 ,"
						cQuery +=         RetSqlName("SF4")+" SF4 ,"
						cQuery +=         RetSqlName("SC9")+" SC9  "
						cQuery += "WHERE SC5.C5_FILIAL='"+xFilial("SC5")+"' AND"
						cQuery +=      " SC5.C5_NUM='"+aPedido[nCntFor][1]+"' AND"
						cQuery +=      " SC5.D_E_L_E_T_=' ' AND"
						cQuery +=      " SC9.C9_FILIAL='"+xFilial("SC9")+"' AND"
						cQuery +=      " SC9.C9_PEDIDO=SC5.C5_NUM AND"
						cQuery +=      " SC9.C9_NFISCAL='"+Space(Len(SC9->C9_NFISCAL))+"' AND"
						cQuery +=      " SC9.C9_PRCVEN>0 AND"             
						cQuery +=      " SC9.C9_QTDLIB=0 AND"
						cQuery +=      " SC9.D_E_L_E_T_=' ' AND"
						cQuery +=      " SC6.C6_FILIAL='"+xFilial("SC6")+"' AND"
						cQuery +=      " SC6.C6_NUM=SC9.C9_PEDIDO AND"
						cQuery +=      " SC6.C6_ITEM=SC9.C9_ITEM AND"
						cQuery +=      " SC6.C6_PRODUTO=SC9.C9_PRODUTO AND"
						cQuery +=      " SC6.D_E_L_E_T_=' ' AND"
						cQuery +=      " SF4.F4_FILIAL='"+xFilial("SF4")+"' AND"
						cQuery +=      " SF4.F4_CODIGO=SC6.C6_TES AND"
						cQuery +=      " SF4.D_E_L_E_T_=' ' AND "
						cQuery +=      " SF4.F4_ISS<>'S'"
					EndIf
						
					If "MSSQL"$Upper(TcGetDb())
						cQuery := StrTran(cQuery,"ROUND(","ROUND(CONVERT(DECIMAL(36,12),")
						cQuery := StrTran(cQuery,",2)","),2)")
					EndIf
					cQuery := ChangeQuery(cQuery)
					//MEMOWRIT("\MATA461C.SQL",cQuery)

					dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAlias,.F.,.T.)

					If nRatFrete == 1 .Or. aPedido[nCntFor][16]==0
						aPedido[nCntFor][06] := nFrete2
						aPedido[nCntFor][09] := nFretAut2
						aPedido[nCntFor][23] := nVlr_Frt2
						aPedido[nCntFor][17][1] := 1
						aPedido[nCntFor][11] := aPedido[nCntFor][06]
						aPedido[nCntFor][14] := aPedido[nCntFor][09]
						aPedido[nCntFor][24] := aPedido[nCntFor][23]
					EndIf
					If nRatSeg == 1 .Or. aPedido[nCntFor][16]==0
						aPedido[nCntFor][07] := nSeguro2
						aPedido[nCntFor][17][3] := 1
						aPedido[nCntFor][12] := aPedido[nCntFor][07]
					EndIf
					If nRatDesp == 1 .Or. aPedido[nCntFor][16]==0
						aPedido[nCntFor][08] := nDespesa2
						aPedido[nCntFor][17][2] := 1
						aPedido[nCntFor][13] := aPedido[nCntFor][08]
					EndIf               
					
					While !( cAlias )->( Eof() ) 
					  
						If nRatFrete == 1 .Or. aPedido[nCntFor][16]==0
							aPedido[nCntFor][11] -= ( cAlias )->FRETE
							aPedido[nCntFor][14] -= ( cAlias )->FRETAUT	
							aPedido[nCntFor][24] -= ( cAlias )->VLR_FRT
						EndIf
						If nRatSeg == 1 .Or. aPedido[nCntFor][16]==0
							aPedido[nCntFor][12] -= ( cAlias )->SEGURO
						EndIf
						If nRatDesp == 1 .Or. aPedido[nCntFor][16]==0
							aPedido[nCntFor][13] -= ( cAlias )->DESPESA	
						EndIf					
	
						( cAlias )->( dbSkip() ) 
						
					EndDo 					
					( cAlias )->( dbCloseArea() ) 
				EndIf	

				If nDesconto <> 0
					//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//ЁCalcula o Valor Total do Pedido para ratear o desconto considerando itensЁ
					//Ёcom ISS                                                                  Ё										
					//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					cAlias := CriaTrab(,.F.)
					If GetNewPar("MV_TPRTDSP","1")=="2"
						cQuery := "SELECT SUM(SC9.C9_PRCVEN*(SC6.C6_QTDVEN-SC6.C6_QTDENT)) TOTALPED FROM "
						cQuery += RetSqlName("SC9")+" SC9 ,"
						cQuery += RetSqlName("SC6")+" SC6 ,"
						cQuery += RetSqlName("SF4")+" SF4  "
						cQuery += " WHERE SC9.C9_FILIAL='"+xFilial("SC9")+"' AND"
						cQuery +=      " SC9.C9_PEDIDO='"+aPedido[nCntFor][1]+"' AND"
						cQuery +=      " SC9.C9_NFISCAL='"+Space(Len(SC9->C9_NFISCAL))+"' AND"
						cQuery +=      " SC9.C9_PRCVEN>0 AND"
						cQuery +=      " SC9.C9_QTDLIB>0 AND"					
						cQuery +=      " SC9.D_E_L_E_T_=' ' AND"
						cQuery +=      " SC6.C6_FILIAL='"+xFilial("SC6")+"' AND"
						cQuery +=      " SC6.C6_NUM=SC9.C9_PEDIDO AND"
						cQuery +=      " SC6.C6_ITEM=SC9.C9_ITEM AND"
						cQuery +=      " SC6.C6_PRODUTO=SC9.C9_PRODUTO AND"
						cQuery +=      " SC6.D_E_L_E_T_=' ' AND"
						cQuery +=      " SF4.F4_FILIAL='"+xFilial("SF4")+"' AND"
						cQuery +=      " SF4.F4_CODIGO=SC6.C6_TES AND"
						cQuery +=      " SF4.D_E_L_E_T_=' ' "
						If GetNewPar("MV_TPDPIND","1")=="2"
							cQuery += " AND SF4.F4_DUPLIC='S' "
						EndIf
					Else
						cQuery := "SELECT SUM(SC9.C9_PRCVEN*SC9.C9_QTDLIB) TOTALPED FROM "
						cQuery += RetSqlName("SC9")+" SC9 ,"
						cQuery += RetSqlName("SC6")+" SC6 ,"
						cQuery += RetSqlName("SF4")+" SF4  "
						cQuery += " WHERE SC9.C9_FILIAL='"+xFilial("SC9")+"' AND"
						cQuery +=      " SC9.C9_PEDIDO='"+aPedido[nCntFor][1]+"' AND"
						cQuery +=      " SC9.C9_NFISCAL='"+Space(Len(SC9->C9_NFISCAL))+"' AND"
						cQuery +=      " SC9.C9_PRCVEN>0 AND"
						cQuery +=      " SC9.C9_QTDLIB>0 AND"					
						cQuery +=      " SC9.D_E_L_E_T_=' ' AND"
						cQuery +=      " SC6.C6_FILIAL='"+xFilial("SC6")+"' AND"
						cQuery +=      " SC6.C6_NUM=SC9.C9_PEDIDO AND"
						cQuery +=      " SC6.C6_ITEM=SC9.C9_ITEM AND"
						cQuery +=      " SC6.C6_PRODUTO=SC9.C9_PRODUTO AND"
						cQuery +=      " SC6.D_E_L_E_T_=' ' AND"
						cQuery +=      " SF4.F4_FILIAL='"+xFilial("SF4")+"' AND"
						cQuery +=      " SF4.F4_CODIGO=SC6.C6_TES AND"
						cQuery +=      " SF4.D_E_L_E_T_=' ' "
						If GetNewPar("MV_TPDPIND","1")=="2" 
							cQuery += " AND SF4.F4_DUPLIC='S' "
						EndIf						
					EndIf	
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Apura valor para quantidade zerada ( notas de complemento )            Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды					
					cQuery += "UNION SELECT SUM(SC9.C9_PRCVEN) TOTALPED FROM "
					cQuery += RetSqlName("SC9")+" SC9 ,"
					cQuery += RetSqlName("SC6")+" SC6 ,"
					cQuery += RetSqlName("SF4")+" SF4  "
					cQuery += " WHERE SC9.C9_FILIAL='"+xFilial("SC9")+"' AND"
					cQuery +=      " SC9.C9_PEDIDO='"+aPedido[nCntFor][1]+"' AND"
					cQuery +=      " SC9.C9_NFISCAL='"+Space(Len(SC9->C9_NFISCAL))+"' AND"
					cQuery +=      " SC9.C9_PRCVEN>0 AND"             
					cQuery +=      " SC9.C9_QTDLIB=0 AND"										
					cQuery +=      " SC9.D_E_L_E_T_=' ' AND"
					cQuery +=      " SC6.C6_FILIAL='"+xFilial("SC6")+"' AND"
					cQuery +=      " SC6.C6_NUM=SC9.C9_PEDIDO AND"
					cQuery +=      " SC6.C6_ITEM=SC9.C9_ITEM AND"
					cQuery +=      " SC6.C6_PRODUTO=SC9.C9_PRODUTO AND"
					cQuery +=      " SC6.D_E_L_E_T_=' ' AND"
					cQuery +=      " SF4.F4_FILIAL='"+xFilial("SF4")+"' AND"
					cQuery +=      " SF4.F4_CODIGO=SC6.C6_TES AND"
					cQuery +=      " SF4.D_E_L_E_T_=' ' "
					If GetNewPar("MV_TPDPIND","1")=="2"
						cQuery += " AND SF4.F4_DUPLIC='S' "
					EndIf
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Pontos de Entrada 				                                       Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If ( aEntry[EP_M460QRT] )
						cQuery := ExecTemplate("M460QRY",.F.,.F.,{ cQuery , 2})
					EndIf
					
					If nModulo == 72
						cQuery := KEXF750(cQuery , 2)
					EndIf
					
					If ( aEntry[EP_M460QRY] )
						cQuery := ExecBlock("M460QRY",.F.,.F.,{ cQuery , 2})
					EndIf

					If "MSSQL"$Upper(TcGetDb())
						cQuery := StrTran(cQuery,"ROUND(","ROUND(CONVERT(DECIMAL(36,12),")
						cQuery := StrTran(cQuery,",2)","),2)")
					EndIf
					cQuery := ChangeQuery(cQuery)

					dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAlias,.F.,.T.)

					dbSelectArea(cAlias)		
					While (cAlias)->(!Eof())
						aPedido[nCntFor][22] += NoRound((cAlias)->TOTALPED,2) 
						(cAlias)->(dbSkip())
					EndDo

					dbCloseArea()

					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//ЁRateio do desconto considerando itens com ISS                           Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If GetNewPar("MV_TPRTDSP","1")=="2"
						cQuery := "SELECT SUM(ROUND(C6_PRCVEN*(SC6.C6_QTDVEN-SC6.C6_QTDENT)*"+StrZero(nDesconto2,16,2)+"/"+StrZero(aPedido[nCntFor][22],16,2)+",2)) DESCONT "
						cQuery += "FROM "+RetSqlName("SC5")+" SC5 ,"
						cQuery +=         RetSqlName("SC6")+" SC6 ,"
						cQuery +=         RetSqlName("SF4")+" SF4 ," 
						cQuery +=         RetSqlName("SC9")+" SC9  "
						cQuery += "WHERE SC5.C5_FILIAL='"+xFilial("SC5")+"' AND"
						cQuery +=      " SC5.C5_NUM='"+aPedido[nCntFor][1]+"' AND"
						cQuery +=      " SC5.D_E_L_E_T_=' ' AND"
						cQuery +=      " SC9.C9_FILIAL='"+xFilial("SC9")+"' AND"
						cQuery +=      " SC9.C9_PEDIDO=SC5.C5_NUM AND"
						cQuery +=      " SC9.C9_NFISCAL='"+Space(Len(SC9->C9_NFISCAL))+"' AND"
						cQuery +=      " SC9.C9_PRCVEN>0 AND"  
						cQuery +=      " SC9.C9_QTDLIB>0 AND"
						cQuery +=      " SC9.D_E_L_E_T_=' ' AND"
						cQuery +=      " SC6.C6_FILIAL='"+xFilial("SC6")+"' AND"
						cQuery +=      " SC6.C6_NUM=SC9.C9_PEDIDO AND"
						cQuery +=      " SC6.C6_ITEM=SC9.C9_ITEM AND"
						cQuery +=      " SC6.C6_PRODUTO=SC9.C9_PRODUTO AND"
						cQuery +=      " SC6.D_E_L_E_T_=' ' AND"
						cQuery +=      " SF4.F4_FILIAL='"+xFilial("SF4")+"' AND"
						cQuery +=      " SF4.F4_CODIGO=SC6.C6_TES AND"
						cQuery +=      " SF4.D_E_L_E_T_=' ' "
						If GetNewPar("MV_TPDPIND","1")=="2" 
							cQuery += " AND SF4.F4_DUPLIC='S' "
						EndIf						

					Else
						cQuery := "SELECT SUM(ROUND(C9_PRCVEN*C9_QTDLIB*"+StrZero(nDesconto2,16,2)+"/"+StrZero(aPedido[nCntFor][22],16,2)+",2)) DESCONT "
						cQuery += "FROM "+RetSqlName("SC5")+" SC5 ,"
						cQuery +=         RetSqlName("SC6")+" SC6 ,"
						cQuery +=         RetSqlName("SF4")+" SF4 ," 
						cQuery +=         RetSqlName("SC9")+" SC9  "
						cQuery += "WHERE SC5.C5_FILIAL='"+xFilial("SC5")+"' AND"
						cQuery +=      " SC5.C5_NUM='"+aPedido[nCntFor][1]+"' AND"
						cQuery +=      " SC5.D_E_L_E_T_=' ' AND"
						cQuery +=      " SC9.C9_FILIAL='"+xFilial("SC9")+"' AND"
						cQuery +=      " SC9.C9_PEDIDO=SC5.C5_NUM AND"
						cQuery +=      " SC9.C9_NFISCAL='"+Space(Len(SC9->C9_NFISCAL))+"' AND"
						cQuery +=      " SC9.C9_PRCVEN>0 AND"  
						cQuery +=      " SC9.C9_QTDLIB>0 AND"
						cQuery +=      " SC9.D_E_L_E_T_=' ' AND"
						cQuery +=      " SC6.C6_FILIAL='"+xFilial("SC6")+"' AND"
						cQuery +=      " SC6.C6_NUM=SC9.C9_PEDIDO AND"
						cQuery +=      " SC6.C6_ITEM=SC9.C9_ITEM AND"
						cQuery +=      " SC6.C6_PRODUTO=SC9.C9_PRODUTO AND"
						cQuery +=      " SC6.D_E_L_E_T_=' ' AND"
						cQuery +=      " SF4.F4_FILIAL='"+xFilial("SF4")+"' AND"
						cQuery +=      " SF4.F4_CODIGO=SC6.C6_TES AND"
						cQuery +=      " SF4.D_E_L_E_T_=' ' "
						If GetNewPar("MV_TPDPIND","1")=="2" 
							cQuery += " AND SF4.F4_DUPLIC='S' "
						EndIf						
					EndIf					
					
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Pontos de Entrada 				                                       Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If ( aEntry[EP_M460QRT] )
						cQuery := ExecTemplate("M460QRY",.F.,.F.,{ cQuery , 3})
					EndIf                    
					
					If nModulo == 72
						cQuery := KEXF750(cQuery , 3)
					EndIf
					
					If ( aEntry[EP_M460QRY] )
						cQuery := ExecBlock("M460QRY",.F.,.F.,{ cQuery , 3})
					EndIf  

					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Apura valor para quantidade zerada ( notas de complemento )            Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					
					cQuery += " UNION "  
					
					cQuery += "SELECT SUM(ROUND(C9_PRCVEN*"+StrZero(nDesconto2,16,2)+"/"+StrZero(aPedido[nCntFor][22],16,2)+",2)) DESCONT "
					cQuery += "FROM "+RetSqlName("SC5")+" SC5 ,"
					cQuery +=         RetSqlName("SC6")+" SC6 ,"
					cQuery +=         RetSqlName("SF4")+" SF4 ," 
					cQuery +=         RetSqlName("SC9")+" SC9  "
					cQuery += "WHERE SC5.C5_FILIAL='"+xFilial("SC5")+"' AND"
					cQuery +=      " SC5.C5_NUM='"+aPedido[nCntFor][1]+"' AND"
					cQuery +=      " SC5.D_E_L_E_T_=' ' AND"
					cQuery +=      " SC9.C9_FILIAL='"+xFilial("SC9")+"' AND"
					cQuery +=      " SC9.C9_PEDIDO=SC5.C5_NUM AND"
					cQuery +=      " SC9.C9_NFISCAL='"+Space(Len(SC9->C9_NFISCAL))+"' AND"
					cQuery +=      " SC9.C9_PRCVEN>0 AND"
					cQuery +=      " SC9.C9_QTDLIB=0 AND"
					cQuery +=      " SC9.D_E_L_E_T_=' ' AND"
					cQuery +=      " SC6.C6_FILIAL='"+xFilial("SC6")+"' AND"
					cQuery +=      " SC6.C6_NUM=SC9.C9_PEDIDO AND"
					cQuery +=      " SC6.C6_ITEM=SC9.C9_ITEM AND"
					cQuery +=      " SC6.C6_PRODUTO=SC9.C9_PRODUTO AND"
					cQuery +=      " SC6.D_E_L_E_T_=' ' AND"
					cQuery +=      " SF4.F4_FILIAL='"+xFilial("SF4")+"' AND"
					cQuery +=      " SF4.F4_CODIGO=SC6.C6_TES AND"
					cQuery +=      " SF4.D_E_L_E_T_=' ' "

					If "MSSQL"$Upper(TcGetDb())
						cQuery := StrTran(cQuery,"ROUND(","ROUND(CONVERT(DECIMAL(36,12),")
						cQuery := StrTran(cQuery,",2)","),2)")
					EndIf
					cQuery := ChangeQuery(cQuery)
					//MEMOWRIT("\MATA461C.SQL",cQuery)

					dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAlias,.F.,.T.)

					aPedido[nCntFor][10] := nDesconto2
					aPedido[nCntFor][15] := aPedido[nCntFor][10]
					
					While !( cAlias )->( Eof() ) 
						aPedido[nCntFor][15] -= ( cAlias )->DESCONT

						( cAlias )->( dbSkip() ) 

					EndDo 

					( cAlias )->( dbCloseArea() ) 
					dbSelectArea("SC5")
				EndIf

				aPedido[nCntFor][05] := NoRound(xMoeda(aPedido[nCntFor][05],SC5->C5_MOEDA,1,dDataMoe),2)
				aPedido[nCntFor][06] := NoRound(xMoeda(aPedido[nCntFor][06],SC5->C5_MOEDA,1,dDataMoe),2)
				aPedido[nCntFor][07] := NoRound(xMoeda(aPedido[nCntFor][07],SC5->C5_MOEDA,1,dDataMoe),2)
				aPedido[nCntFor][08] := NoRound(xMoeda(aPedido[nCntFor][08],SC5->C5_MOEDA,1,dDataMoe),2)
				aPedido[nCntFor][09] := NoRound(xMoeda(aPedido[nCntFor][09],SC5->C5_MOEDA,1,dDataMoe),2)
				aPedido[nCntFor][10] := NoRound(xMoeda(aPedido[nCntFor][10],SC5->C5_MOEDA,1,dDataMoe),2)
				aPedido[nCntFor][23] := NoRound(xMoeda(aPedido[nCntFor][23],SC5->C5_MOEDA,1,dDataMoe),2)

				aPedido[nCntFor][11] := NoRound(xMoeda(aPedido[nCntFor][11],SC5->C5_MOEDA,1,dDataMoe),2)
				aPedido[nCntFor][12] := NoRound(xMoeda(aPedido[nCntFor][12],SC5->C5_MOEDA,1,dDataMoe),2)
				aPedido[nCntFor][13] := NoRound(xMoeda(aPedido[nCntFor][13],SC5->C5_MOEDA,1,dDataMoe),2)
				aPedido[nCntFor][14] := NoRound(xMoeda(aPedido[nCntFor][14],SC5->C5_MOEDA,1,dDataMoe),2)
				aPedido[nCntFor][15] := NoRound(xMoeda(aPedido[nCntFor][15],SC5->C5_MOEDA,1,dDataMoe),2)
				aPedido[nCntFor][22] := NoRound(xMoeda(aPedido[nCntFor][22],SC5->C5_MOEDA,1,dDataMoe),2)				
				aPedido[nCntFor][24] := NoRound(xMoeda(aPedido[nCntFor][24],SC5->C5_MOEDA,1,dDataMoe),2)								
				
				aPedido[nCntFor][11] += nFrete   -  ( NoRound(xMoeda(nFrete2   ,SC5->C5_MOEDA,1,dDataMoe),2) )
				aPedido[nCntFor][12] += nSeguro  -  ( NoRound(xMoeda(nSeguro2  ,SC5->C5_MOEDA,1,dDataMoe),2) )
				aPedido[nCntFor][13] += nDespesa -  ( NoRound(xMoeda(nDespesa2 ,SC5->C5_MOEDA,1,dDataMoe),2) )
				aPedido[nCntFor][14] += nFretAut -  ( NoRound(xMoeda(nFretAut2 ,SC5->C5_MOEDA,1,dDataMoe),2) )
				aPedido[nCntFor][15] += nDesconto - ( NoRound(xMoeda(nDesconto2,SC5->C5_MOEDA,1,dDataMoe),2) )
				aPedido[nCntFor][24] += nVlr_Frt  -  ( NoRound(xMoeda(nVlr_Frt2  ,SC5->C5_MOEDA,1,dDataMoe),2) )
				
				If !Empty(SC5->C5_PEDEXP) .And. SuperGetMV("MV_EECFAT") .And. FindFunction("EECFat2AtuRat") .And. SuperGetMv("MV_EEC0038",,.F.)
					EECFat2AtuRat(aPedido[nCntFor], aPvlNfs, cEmbExp)
				EndIf
				
			Else
		#ENDIF
			nTotal   := 0
			nPeso    := 0
			aItPedido:= {}
			If GetNewPar("MV_TPRTDSP","1")=="2"
				dbSelectArea("SC6")	
				dbSetOrder(1)
				MsSeek(xFilial("SC6")+aPedido[nCntFor][1])
				While ( !Eof() .And. xFilial("SC6") == SC6->C6_FILIAL .And. SC6->C6_NUM    == aPedido[nCntFor][1] )
					SB1->(dbSetOrder(1))
					SB1->(MsSeek(xFilial("SB1")+SC6->C6_PRODUTO))								
					If SC6->C6_QTDVEN <> 0
						nTotal  += A410Arred(xMoeda(SC6->C6_PRCVEN,SC5->C5_MOEDA,1,dDataMoe,8)*(SC6->C6_QTDVEN-SC6->C6_QTDENT),"D2_TOTAL")
					Else
						nTotal  += A410Arred(xMoeda(SC6->C6_PRCVEN,SC5->C5_MOEDA,1,dDataMoe,8),"D2_TOTAL")
					EndIf
					nPeso += SB1->B1_PESO*SC6->C6_QTDVEN
					dbSelectArea("SC6")
					dbSkip()
				EndDo		
			EndIf
			dbSelectArea("SF4")
			dbSetOrder(1)
			dbSelectArea("SC6")
			dbSetOrder(1)
			dbSelectArea("SC9")
			dbSetOrder(1)
			MsSeek(xFilial("SC9")+aPedido[nCntFor][1])
			While ( !Eof() .And. SC9->C9_FILIAL == xFilial("SC9") .And.;
					SC9->C9_PEDIDO == aPedido[nCntFor][1] )
				SC6->(MsSeek(xFilial("SC6")+SC9->C9_PEDIDO+SC9->C9_ITEM+SC9->C9_PRODUTO))
				SF4->(MsSeek(xFilial("SF4")+SC6->C6_TES))
				SB1->(MsSeek(xFilial("SB1")+SC6->C6_PRODUTO))
				If Empty(SC9->C9_NFISCAL) .And. SC9->C9_PRCVEN>0
					If SC9->C9_QTDLIB <> 0
						nPrcVen := xMoeda(SC9->C9_PRCVEN,SC5->C5_MOEDA,1,dDataMoe,8)*SC9->C9_QTDLIB
					Else 
						nPrcVen := xMoeda(SC9->C9_PRCVEN,SC5->C5_MOEDA,1,dDataMoe,8)
					EndIf
					If GetNewPar("MV_TPRTDSP","1")=="1"
						If SF4->F4_ISS<>"S"	
							nTotal += A410Arred(nPrcVen,"D2_TOTAL")
							nPeso  += SB1->B1_PESO*SC9->C9_QTDLIB
						EndIf
						nTotalPed += A410Arred(nPrcVen,"D2_TOTAL")
					EndIf
					aadd(aItPedido,{IIf(SF4->F4_ISS<>"S",nPrcVen,0),0,0,0,0,0,IIf(SF4->F4_ISS<>"S",SB1->B1_PESO*SC9->C9_QTDLIB,0),nPrcVen,0})	
					aPedido[nCntFor][04]:=SC9->C9_QTDLIB
				EndIf
				dbSelectArea("SC9")
				dbSkip()
			EndDo
			aPedido[nCntFor][05] := NoRound(nTotal,2)
			aPedido[nCntFor][16] := NoRound(nPeso,8)
			aPedido[nCntFor][22] := NoRound(nTotalPed,2)
			aPedido[nCntFor][06] := nFrete
			aPedido[nCntFor][07] := nSeguro
			aPedido[nCntFor][08] := nDespesa
			aPedido[nCntFor][09] := nFretAut
			aPedido[nCntFor][10] := nDesconto
			aPedido[nCntFor][23] := nVlr_Frt	
			aPedido[nCntFor][11] := aPedido[nCntFor][06]
			aPedido[nCntFor][12] := aPedido[nCntFor][07]
			aPedido[nCntFor][13] := aPedido[nCntFor][08]
			aPedido[nCntFor][14] := aPedido[nCntFor][09]
			aPedido[nCntFor][15] := aPedido[nCntFor][10]
			aPedido[nCntFor][24] := aPedido[nCntFor][23]

			For nX := 1 To Len(aItPedido)
				If ( nRatFrete == 1 .Or. nPeso == 0)
					aPedido[nCntFor][17][1] := 1
					aItPedido[nX][2] += Round(aItPedido[nX][1]*aPedido[nCntFor][06]/nTotal,2)
					aItPedido[nX][5] += Round(aItPedido[nX][1]*aPedido[nCntFor][09]/nTotal,2)
					aItPedido[nX][9] += Round(aItPedido[nX][1]*aPedido[nCntFor][23]/nTotal,2)					
				Else
					aPedido[nCntFor][17][1] := 2
					aItPedido[nX][2] += Round(aItPedido[nX][7]*aPedido[nCntFor][06]/nPeso,2)
					aItPedido[nX][5] += Round(aItPedido[nX][7]*aPedido[nCntFor][09]/nPeso,2)
					aItPedido[nX][9] += Round(aItPedido[nX][7]*aPedido[nCntFor][23]/nPeso,2)					
				EndIf
				If ( nRatDesp == 1 .Or. nPeso == 0)
					aPedido[nCntFor][17][2] := 1
					aItPedido[nX][4] += Round(aItPedido[nX][1]*aPedido[nCntFor][08]/nTotal,2)
				Else
					aPedido[nCntFor][17][2] := 2
					aItPedido[nX][4] += Round(aItPedido[nX][7]*aPedido[nCntFor][08]/nPeso,2)
				EndIf
				If ( nRatSeg == 1 .Or. nPeso == 0)
					aPedido[nCntFor][17][3] := 1
					aItPedido[nX][3] += Round(aItPedido[nX][1]*aPedido[nCntFor][07]/nTotal,2)
				Else
					aPedido[nCntFor][17][3] := 2
					aItPedido[nX][3] += Round(aItPedido[nX][7]*aPedido[nCntFor][07]/nPeso,2)
				EndIf
				aItPedido[nX][6] += Round(aItPedido[nX][8]*aPedido[nCntFor][10]/nTotalPed,2)
			Next nX
			For nX := 1 To Len(aItPedido)
				aPedido[nCntFor][11] -= aItPedido[nX][2]
				aPedido[nCntFor][12] -= aItPedido[nX][3]
				aPedido[nCntFor][13] -= aItPedido[nX][4]
				aPedido[nCntFor][14] -= aItPedido[nX][5]
				aPedido[nCntFor][15] -= aItPedido[nX][6]
				aPedido[nCntFor][24] -= aItPedido[nX][9]				
			Next nX
		#IFDEF TOP                                                               
			EndIf
		#ENDIF
	Else		
		aPedido[nCntFor][17][1] := 1
		aPedido[nCntFor][17][2] := 1
		aPedido[nCntFor][17][3] := 1
	EndIf
Next nCntFor
//зддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de Entrada para Impressora Fiscal           Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддды
If (lCupFis .And. lContinua)
	lFiscal		:= LJProFile(11) //Recupera usuario
	aRetImpFi   := ExecBlock("M461IMPF",.F.,.F.,(aPvlNfs))
	cNumero     := aRetImpFi[1]
	lContinua   := aRetImpFi[2]
	cPdv		:= aRetImpFi[3]
    cSerie      := If(Len(aRetImpFi) > 3 .AND. !Empty(aRetImpFi[4]),aRetImpFi[4],cSerie) 
    cCgc		:= aRetImpFi[5] 
   
	If Empty(cNumero) .Or. Empty(cPdv)
		lContinua := .F.
		UserException("Exception in M461IMPF")
	EndIf
EndIf
If ( lContinua )
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁRateio das despesas                                                     Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If ( aEntry[EP_M460RTPD] )
		aPedido := ExecBlock("M460RTPD",.F.,.F.,aPedido)
	EndIf
	If ( aEntry[EP_M460ITPD] )
		aPvlNfs := ExecBlock("M460ITPD",.F.,.F.,aPvlNfs)
	EndIf
	nTotal := 0
	For nCntFor := 1 To Len(aPvlNfs)
		nScan := aScan(aPedido,{|x| x[1]==aPvlNfs[nCntFor][1]})
		aadd(aRateio,{aPvlNfs[nCntFor][1],;
			aPvlNfs[nCntFor][2],;
			aPvlNfs[nCntFor][3],;
			0,;
			0,;
			0,;
			0,;
			0,;			
			{},;
			0,;			
			0,;
			0,;
			0})		
		If ( aPvlNfs[nCntFor][5] > 0 )
			nRateio := Len(aRateio)
			If ( aPvlNfs[nCntFor][7] )
				aRateio[nRateio][RT_FRETE  ] := 0
				aRateio[nRateio][RT_SEGURO ] := 0
				aRateio[nRateio][RT_DESPESA] := 0
				aRateio[nRateio][RT_FRETAUT] := 0
				aRateio[nRateio][RT_VLR_FRT]  := 0
			Else
				If aPedido[nScan][17][01] == 1
					aRateio[nRateio][RT_FRETE  ] := Round(If(aPvlNfs[nCntFor][4]==0,1,aPvlNfs[nCntFor][4])*aPvlNfs[nCntFor][5]*aPedido[nScan][06]/aPedido[nScan][05],2)
					aRateio[nRateio][RT_FRETAUT] := Round(If(aPvlNfs[nCntFor][4]==0,1,aPvlNfs[nCntFor][4])*aPvlNfs[nCntFor][5]*aPedido[nScan][09]/aPedido[nScan][05],2)
					aRateio[nRateio][RT_VLR_FRT]  := Round(If(aPvlNfs[nCntFor][4]==0,1,aPvlNfs[nCntFor][4])*aPvlNfs[nCntFor][5]*aPedido[nScan][23]/aPedido[nScan][05],2)
				Else
					dbSelectArea("SB1")
					dbSetOrder(1)
					MsGoto(aPvlNfs[nCntFor][12])
					aRateio[nRateio][RT_FRETE  ] := Round(If(aPvlNfs[nCntFor][4]==0,1,aPvlNfs[nCntFor][4])*SB1->B1_PESO*aPedido[nScan][06]/aPedido[nScan][16],2)
					aRateio[nRateio][RT_FRETAUT] := Round(If(aPvlNfs[nCntFor][4]==0,1,aPvlNfs[nCntFor][4])*SB1->B1_PESO*aPedido[nScan][09]/aPedido[nScan][16],2)
					aRateio[nRateio][RT_VLR_FRT ] := Round(If(aPvlNfs[nCntFor][4]==0,1,aPvlNfs[nCntFor][4])*SB1->B1_PESO*aPedido[nScan][23]/aPedido[nScan][16],2)
				EndIf
				If aPedido[nScan][17][02] == 1
					aRateio[nRateio][RT_DESPESA] := Round(If(aPvlNfs[nCntFor][4]==0,1,aPvlNfs[nCntFor][4])*aPvlNfs[nCntFor][5]*aPedido[nScan][08]/aPedido[nScan][05],2)
				Else
					dbSelectArea("SB1")
					dbSetOrder(1)
					MsGoto(aPvlnfs[nCntFor][12])
					aRateio[nRateio][RT_DESPESA] := Round(If(aPvlNfs[nCntFor][4]==0,1,aPvlNfs[nCntFor][4])*SB1->B1_PESO*aPedido[nScan][08]/aPedido[nScan][16],2)
				EndIf
				If aPedido[nScan][17][03] == 1
					aRateio[nRateio][RT_SEGURO] := Round(If(aPvlNfs[nCntFor][4]==0,1,aPvlNfs[nCntFor][4])*aPvlNfs[nCntFor][5]*aPedido[nScan][07]/aPedido[nScan][05],2)
				Else
					dbSelectArea("SB1")
					dbSetOrder(1)
					MsGoto(aPvlnfs[nCntFor][12])
					aRateio[nRateio][RT_SEGURO] := Round(If(aPvlNfs[nCntFor][4]==0,1,aPvlNfs[nCntFor][4])*SB1->B1_PESO*aPedido[nScan][07]/aPedido[nScan][16],2)
				EndIf
			EndIf
			If GetNewPar("MV_TPDPIND","1")=="2"
				dbSelectArea("SF4")
				dbSetOrder(1)
				MsGoto(aPvlnfs[nCntFor][14])
				If SF4->F4_DUPLIC=="S"
					aRateio[nRateio][RT_DESCONT] := Round(If(aPvlNfs[nCntFor][4]==0,1,aPvlNfs[nCntFor][4])*aPvlNfs[nCntFor][5]*aPedido[nScan][10]/aPedido[nScan][22],2)
				EndIf
			Else
				aRateio[nRateio][RT_DESCONT] := Round(If(aPvlNfs[nCntFor][4]==0,1,aPvlNfs[nCntFor][4])*aPvlNfs[nCntFor][5]*aPedido[nScan][10]/aPedido[nScan][22],2)
			EndIf
			aRateio[nRateio][RT_PDESCON] := If(aPvlNfs[nCntFor][4]==0,1,aPvlNfs[nCntFor][4])*aPvlNfs[nCntFor][5]*aPedido[nScan][19]
			nTotal += a410Arred(aPvlNfs[nCntFor][5]*If(aPvlNfs[nCntFor][4]==0,1,aPvlNfs[nCntFor][4]),"D2_TOTAL")
		Else
			nValNeg += Abs(a410Arred(aPvlNfs[nCntFor][5] * If(aPvlNfs[nCntFor][4]==0,1,aPvlNfs[nCntFor][4]),"D2_TOTAL"))
		EndIf
	Next nCntFor
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁVerifica se o ultimo item sera faturado para adicionar a diferenca de   Ё
	//Ёarredondamento                                                          Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	For nCntFor := 1 To Len(aPedido)
		nScan := aScan(aRateio,{|x|   x[1]==aPedido[nCntFor][1].And.;
			x[2]==aPedido[nCntFor][2].And.;
			x[3]==aPedido[nCntFor][3]})
		If ( nScan > 0 )
			aRateio[nScan][RT_FRETE  ] += aPedido[nCntFor][11]
			aRateio[nScan][RT_SEGURO ] += aPedido[nCntFor][12]
			aRateio[nScan][RT_DESPESA] += aPedido[nCntFor][13]
			aRateio[nScan][RT_FRETAUT] += aPedido[nCntFor][14]
			aRateio[nScan][RT_DESCONT] += aPedido[nCntFor][15]
			aRateio[nScan][RT_DESPMOE] += aPedido[nCntFor][20]
			aRateio[nScan][RT_VLR_FRT ] += aPedido[nCntFor][24]
			
			If lMoedaFre .And. aPedido[nCntFor][21]>1
				nFretAux := 0
				nSeguAux := 0
				nDespAux := 0
				For nX := 1 To Len(aRateio)								
					If aRateio[nX][1] == aPedido[nCntFor][1]
						aRateio[nScan][RT_DESPAC2] -= NoRound(xMoeda(aRateio[nX][RT_FRETE]+aRateio[nX][RT_SEGURO]+aRateio[nX][RT_DESPESA]+aRateio[nX][RT_FRETAUT]-aRateio[nX][RT_DESCONT],1,aPedido[nCntFor][21]),2)
						If nX <= Len(aRateio) .And. lTpLibPed
							nFretAux += aRateio[nX][RT_FRETE  ]
							nSeguAux += aRateio[nX][RT_SEGURO ]
							nDespAux += aRateio[nX][RT_DESPESA]
						EndIf
					EndIf
				Next nX
				If lTpLibPed
					aRateio[nScan][RT_FRETE  ] += (aPedido[nCntFor][6] - nFretAux)
					aRateio[nScan][RT_SEGURO ] += (aPedido[nCntFor][7] - nSeguAux)
					aRateio[nScan][RT_DESPESA] += (aPedido[nCntFor][8] - nDespAux)
				EndIf
				aRateio[nScan][RT_DESPAC2] += aPedido[nCntFor][20]
			EndIf			
		EndIf
	Next nCntFor

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁVerifica se ha valores negativos no rateio                              Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды	
	For nScan := Len(aRateio) To 2 STEP -1
		If aRateio[nScan][RT_FRETE   ] < 0
			aRateio[nScan-1][RT_FRETE  ] += aRateio[nScan][RT_FRETE]
			aRateio[nScan  ][RT_FRETE  ] := 0
		EndIf
		If aRateio[nScan][RT_SEGURO  ] < 0
			aRateio[nScan-1][RT_SEGURO ] += aRateio[nScan][RT_SEGURO]
			aRateio[nScan  ][RT_SEGURO ] := 0
		EndIf
		If aRateio[nScan][RT_DESPESA ] < 0
			aRateio[nScan-1][RT_DESPESA] += aRateio[nScan][RT_DESPESA]
			aRateio[nScan  ][RT_DESPESA] := 0
		EndIf
		If aRateio[nScan][RT_FRETAUT ] < 0
			aRateio[nScan-1][RT_FRETAUT] += aRateio[nScan][RT_FRETAUT]
			aRateio[nScan  ][RT_FRETAUT] := 0
		EndIf
		If aRateio[nScan][RT_DESCONT] < 0
			aRateio[nScan-1][RT_DESCONT] += aRateio[nScan][RT_DESCONT]
			aRateio[nScan][RT_DESCONT  ] := 0
		EndIf
		If aRateio[nScan][RT_PDESCON] < 0
			aRateio[nScan-1][RT_PDESCON] += aRateio[nScan][RT_PDESCON]
			aRateio[nScan][RT_PDESCON  ] := 0
		EndIf				
		If aRateio[nScan][RT_VLR_FRT  ] < 0
			aRateio[nScan-1][RT_VLR_FRT ] += aRateio[nScan][RT_VLR_FRT]
			aRateio[nScan  ][RT_VLR_FRT ] := 0
		EndIf
	Next nScan

	If ( aEntry[EP_M460RAT] )
		aRateio := ExecBlock("M460RAT",.F.,.F.,aRateio)
	EndIf
	
   	If !(IsInCallStack("Ma410PvNfs"))
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁGuarda os rateios efetuados para tratamento de quebra de nota fiscal    Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды	
		For nX := 1 To Len(aRateio)
			nScan := aScan(aSavRat,{|x| x[SV_PEDIDO]==aRateio[nX][RT_PEDIDO]})
			If nScan == 0
				aadd(aSavRat,{ aRateio[nX][RT_PEDIDO],;
					0,;
					0,;
					0,;
					0,;
					0,;				
					0,;
					0})
				nScan := Len(aSavRat)
			EndIf
			aSavRat[nScan][SV_FRETE  ] += aRateio[nX][RT_FRETE  ]
			aSavRat[nScan][SV_FRETAUT] += aRateio[nX][RT_FRETAUT]
			aSavRat[nScan][SV_SEGURO ] += aRateio[nX][RT_SEGURO ]
			aSavRat[nScan][SV_DESPESA] += aRateio[nX][RT_DESPESA]
			aSavRat[nScan][SV_DESCONT] += aRateio[nX][RT_DESCONT]
			aSavRat[nScan][SV_DESPAC2] += aRateio[nX][RT_DESPAC2]
			aSavRat[nScan][SV_VLR_FRT ] += aRateio[nX][RT_VLR_FRT ]
	
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁAcerta as decimais do % de desconto para a maior diferenca da nota ser  Ё
			//Ёde 0,01 centavos.                                                       Ё		
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If nX + 1 <= Len(aRateio)
				aRateio[nX+1][RT_PDESCON] += aRateio[nX][RT_PDESCON]-NoRound(aRateio[nX][RT_PDESCON],2)
				aRateio[nX][RT_PDESCON]   := NoRound(aRateio[nX][RT_PDESCON],2)
			Else
				aRateio[nX][RT_PDESCON]   := NoRound(aRateio[nX][RT_PDESCON],2)
			EndIf		
		Next nX
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁApaga os rateios ja utilizadoss                                         Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	nCntFor := 0
	For nX := 1 To Len(aSavRat)
		If aSavRat[nX]<>Nil
			nScan := aScan(aPedido,{|x| x[1]==aSavRat[nX][SV_PEDIDO]})
			If nScan == 0
				ADel(aSavRat,nX)
			Else
				nCntFor++
			EndIf
		Else
			nCntFor++
		EndIf
	Next nX
	ASize(aSavRat,nCntFor)
	
	// Tratamento para passar a MATXFIS o total do pedido
	aEval(aRateio,{|x| nTotAcre += a410Arred( x[RT_FRETE]+x[RT_SEGURO]+x[RT_DESPESA],"D2_TOTAL")})

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁVerifica se o pedido ja nao foi processado por outra estacao            Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dbSelectArea("SC9")
	dbSetOrder(1)
	MsGoto(aPvlNfs[1][8])	
	If Empty(SC9->C9_NFISCAL) .And. !SC9->(Deleted()) .And. !SC9->(Eof())
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁGravacao da Nota Fiscal de Saida                                        Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		MaPvl2SF2(cSerie,cNumero,aPedido,lReajuste,lMoedaFre,lLct610.Or.lLct620,nValNeg,cPdv,cCgc)
		
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Se o Parametro MV_VALDESP = .T. deve utilizar o rateio de despesas     Ё
		//Ё acessorias FRETE/SEGURO/DESPESA realizado pela MATXFIS sobrepondo o ra Ё
		//Ё teio realizado pelo MATA461 do array aRateio[RT_FRETE],[RT_SEGURO] e   Ё
		//Ё [RT_DESPESA] pela funГЦo MaRatDesp.                                    Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If GetNewPar("MV_VALDESP",.F.)
			MaRatDesp(aPvlNfs,@aRateio,lReajuste,dDataMoe)
        EndIf

		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁGravacao do Item da Nota Fiscal de Saida                                Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		aGnreProd:= {}
		For nCntFor := 1 To Len(aPvlNfs)
			dbSelectArea("SC9")
			MsGoto(aPvlNfs[nCntFor][8])
			If Empty(SC9->C9_NFISCAL) .And. !SC9->(Deleted()) .And. !SC9->(Eof())	
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁRateio do Desconto negativo do item do pedido de venda              Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If aPvlNfs[nCntFor][5] > 0
					nItValNeg := SF4->(NoRound(nValNeg*a410Arred(If(aPvlNfs[nCntFor][4]==0,1,aPvlNfs[nCntFor][4])*aPvlNfs[nCntFor][5]/nTotal,"D2_TOTAL"),2))
				Else
					nItValNeg := 0
				EndIf
				nAcValNeg += nItValNeg
				If ( nCntFor == Len(aPvlNfs) .Or. (aPvlNfs[nCntFor+1][5]<0 .And. nCntFor+1==Len(aPvlNfs)))						
					nItValNeg += nValNeg - nAcValNeg
				EndIf
				nItValNeg := Max(0,nItValNeg)
				//зддддддддддддддддддддддддддддддддддддд©
				//ЁTratamento do calculo do IVA AjustadoЁ
				//юддддддддддддддддддддддддддддддддддддды
				SB1->(dbSetOrder(1))
				If SB1->(MsSeek(xFilial("SB1")+SC9->C9_PRODUTO))
				   lIVAAju := IIF(SB1->(FieldPos("B1_IVAAJU")) > 0 .And. SB1->B1_IVAAJU == '1',.T.,.F.)
				EndIf
				If	lIVAAju
					aNfOriLot := Ma460InfOr(SC9->C9_PEDIDO,SC9->C9_ITEM,SC9->C9_PRODUTO,SC9->C9_LOCAL,SC9->C9_QTDLIB,SC9->C9_QTDLIB2,SC9->C9_DATALIB,SC9->C9_LOTECTL,SC9->C9_NUMLOTE)				
    			EndIf
				If lCupFis .And. Len(aRetImpFi) > 5
					nPosItem 	:= ascan(aRetImpFi[6], { |x| x[1] == cItemNf } )
					If nPosItem > 0
						cAliq 		:= aRetImpFi[6][nPosItem][2]
					EndIf
				EndIf
				If lCupFis .And. Len(aRetImpFi) > 5
					nPosItem 	:= ascan(aRetImpFi[6], { |x| x[1] == cItemNf } )
					If nPosItem > 0
						cAliq 		:= aRetImpFi[6][nPosItem][2]
					EndIf
				EndIf
				MaPvl2Sd2(cItemNf,aPvlNfs,aRateio[nCntFor],@aTitulo,lAtuSa7,lReajuste,nItValNeg,nCntFor,cEmbExp,aCarga,bAtuPvl,aContrato,aMedicao,aNfOriLot,cAliq,dDataMoe,nTotAcre,aSxFci)
				If (SB1->(FieldPos(cMV_B1M996))>0) .And. cB1M996 <> "1"
					cB1M996	:=	SB1->(FieldGet(FieldPos (cMV_B1M996)))
				EndIf
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁAtendimento ao DECRETO 5.052, DE 08/01/2004 para o municipio de ARARAS. Ё
				//ЁMais especificamente o paragrafo unico do Art 2.                        Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If (SB1->(FieldPos("B1_FRETISS"))>0) .And. cB1FRETISS <> "2"
					cB1FRETISS	:=	SB1->B1_FRETISS
				EndIf
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁContabilizacao                                                          Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If ( lLct610 )
					nLctTotal += DetProva(nHdlPrv,"610","MATA460",cLote)
					If ( lLct611 .And. xFilial("SD1") == SD1->D1_FILIAL .And. SD2->D2_NFORI == SD1->D1_DOC .And. SD2->D2_SERIORI == SD1->D1_SERIE .And. SD2->D2_ITEMORI == SD1->D1_ITEM	)
						dbSelectArea("SDE")
						dbSetOrder(1)
						MsSeek(xFilial("SDE")+SD1->D1_DOC+SD1->D1_SERIE+SD1->D1_FORNECE+SD1->D1_LOJA+SD1->D1_ITEM)
						While ( !Eof() .And. ;
							xFilial("SDE") == SDE->DE_FILIAL .And.;
							SD1->D1_DOC == SDE->DE_DOC .And.;
							SD1->D1_SERIE == SDE->DE_SERIE .And.;
							SD1->D1_FORNECE == SDE->DE_FORNECE .And.;
							SD1->D1_LOJA == SDE->DE_LOJA .And.;
							SD1->D1_ITEM == SDE->DE_ITEMNF)
	
							nLctTotal += DetProva(nHdlPrv,"611","MATA461",cLote)
	
							dbSelectArea("SDE")
							dbSkip()
						EndDo
					EndIf
				EndIf				
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Grava os lancamentos nas contas orcamentarias SIGAPCO    Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				PcoDetLan("000101","01","MATA461")
	
				cItemNf := Soma1(cItemNf,2)   
				
				//Tratamento para geracao da guia de recolhimento ICMS-ST
				nValICMSST += MaFisRet(nCntFor,'IT_VALSOL')
	   			//Tratamento para geracao da guia de recolhimento ICMS PrСprio
				nValICM += MaFisRet(nCntFor,'IT_VALICM')
                //Tratamento para guia de recolhimento ICMS-ST por Produto              
  				nPosGnre:= aScan(aGnreProd, {|x| x[1]==aPvlNfs[nCntFor][6]})
   				If nPosGnre == 0
					aadd(aGnreProd,{aPvlNfs[nCntFor][6],MaFisRet(nCntFor,'IT_VALSOL')})
				Else
  			   		aGnreProd[nPosGnre][2] += MaFisRet(nCntFor,'IT_VALSOL') 
  			   	Endif

				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Desconta o Valor do ICMS DESONERADO do valor do Item D2_PRCVEN         Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If SF4->F4_AGREG$"R"
					nDedICM += MaFisRet(nCntFor,'IT_DEDICM')
    			EndIf
			EndIf
		Next nCntFor
		If !InTransact()
			RecLock("SF2")
		EndIf
		MaFisWrite()
		MaAvalSF2()

		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁTratamento para LegislaГЦo de Carga TributАria - Lei n╨ 12.741/2012 (Lei da TransparЙncia)        Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If lLeiTran .And. FindFunction("AlqLei2741")
			SF2->F2_TIPIMP := cMvFisCTrb
		EndIf
		
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Desconta o Valor do ICMS DESONERADO do valor do Item D2_PRCVEN         Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If nDedICM > 0
			SF2->F2_VALMERC -= nDedICM
		EndIf

		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁGravacao do Fiscal                                                      Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		MaFisAtuSF3(1,"S",SF2->(RecNo()),,cPDV)
		MAFISCDA(,2)	//Gravacao dos lancamentos fiscais	

		//зддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Atualiza dados dos complementos SPED automaticamente
		//зддддддддддддддддддддддддддддддддддддддддддддддддддд©
		If lMvAtuComp
			AtuComp(SF2->F2_DOC,SF2->F2_SERIE,SF2->F2_ESPECIE,SF2->F2_CLIENTE,SF2->F2_LOJA,"S",SF2->F2_TIPO)
		EndIf
		//зддддддддддддддддддддддддддддддддддд©
		//ЁTratamento do artigo 65 do RICMS PRЁ
		//юддддддддддддддддддддддддддддддддддды
		If SF2->F2_TIPO == "N" 
			A461ART65(SF2->F2_CLIENTE, SF2->F2_LOJA, SF2->F2_EMISSAO, SF2->F2_DOC, SF2->F2_SERIE, cNumero, aGnre, aRecTit, lConfTit,SF2->F2_EST)
		EndIf
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁGravacao do ICMS ST - Imposto Retido(ICR)                               Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If nValICMSST > 0 .And. cPaisLoc=="BRA" .And. cModulo $ "FAT.OMS"
			lGRec     := Iif(ValType(MV_PAR18)<>"N",.F.,(mv_par18==1))
			lTit      := Iif(ValType(MV_PAR17)<>"N",.F.,(mv_par17==1))
			lGRecProd := Iif(ValType(MV_PAR23)<>"N",.F.,(mv_par23==1))
			lTitProd  := Iif(ValType(MV_PAR22)<>"N",.F.,(mv_par22==1))
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁGera Guia de Recolhimento ou Titulo ICMS no Contas a pagar quando nao for do mesmo Estado Ё
			//Ёe que o Estado Destino nao pos.suir IE no parametro da substituicao tributaria             Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If (GetMV("MV_ESTADO")<>SF2->F2_EST .And. Empty(IESubTrib(SF2->F2_EST))) 
				If (lGRecProd .Or. lTitProd)
		   			nMes      := Month(SF2->F2_EMISSAO)
					nAno      := Year(SF2->F2_EMISSAO)
					aDatas    := DetDatas(nMes,nAno,3,1)
					dDtIni	  := aDatas[1]
					dDtFim	  := aDatas[2]
					dDtVenc	  := DataValida(aDatas[2]+1,.t.)
					lLancCont := (MV_PAR03==1)
					//Armazenamento dos dados para ser utilizado na Guia de Recolhimento e no COntas a Pagar
					aadd(aDSF2,{SF2->F2_DOC,SF2->F2_SERIE,SF2->F2_CLIENTE,SF2->F2_LOJA,SF2->F2_TIPO,"2",SF2->F2_EST})
					//Armazenamento dos dados para ser utilizado na Guia de Recolhimento por Produto 
					For nX := 1 To Len(aGnreProd)
						GravaTit(lTitProd,aGnreProd[nX][2],"ICMS","IC",cLcPadTit,dDtIni,dDtFim,dDtVenc,1,lGRecProd,nMes,nAno,nVlrIcm,aGnreProd[nX][2],"MATA460A",lLancCont,@cNumero,@aGNRE,,,SF2->F2_EST,,,,,@aRecTit,@lConfTit,0,aDSF2,,,,aGnreProd[nX][1])
				   	Next nX
		    	ElseIf (lTit .Or. lGrec)
					nVlrIcmST := SF2->F2_ICMSRET
					nVFecpST  := Iif(SF2->F2_EST <> "RJ", SF3->F3_VFECPST,0)     
					nMes      := Month(SF2->F2_EMISSAO)
					nAno      := Year(SF2->F2_EMISSAO)
					aDatas    := DetDatas(nMes,nAno,3,1)
					dDtIni	  := aDatas[1]
					dDtFim	  := aDatas[2]
					dDtVenc	  := DataValida(aDatas[2]+1,.t.)
					lLancCont := (MV_PAR03==1)
					//Armazenamento dos dados para ser utilizado na Guia de Recolhimento e no COntas a Pagar
					aadd(aDSF2,{SF2->F2_DOC,SF2->F2_SERIE,SF2->F2_CLIENTE,SF2->F2_LOJA,SF2->F2_TIPO,"2",SF2->F2_EST})
			    	GravaTit(lTit,nVlrIcmST-nVFecpST ,"ICMS","IC",cLcPadTit,dDtIni,dDtFim,dDtVenc,1,lGRec,nMes,nAno,nVlrIcm,nVlrIcmST-nVFecpST,"MATA460A",lLancCont,@cNumero,@aGNRE,,,SF2->F2_EST,,,,,@aRecTit,@lConfTit,0,aDSF2)
				   	If nVFecpST > 0
				   		GravaTit(lTit,nVFecpST,"ICMS","IC",cLcPadTit,dDtIni,dDtFim,dDtVenc,1,lGRec,nMes,nAno,nVlrIcm,nVFecpST,"MATA460A",lLancCont,@cNumero,@aGNRE,,,SF2->F2_EST,,.T.,,,@aRecTit,@lConfTit,0,aDSF2)
					Endif
		   		Endif
			Endif			
            // Gera guia de recolhimento quand houver valor de FECP/ST-MG para nЦo contribuinte/consumidor final
			If (SF3->(FieldPos ("F3_VFESTMG")))>0 .And. SF2->F2_TIPOCLI=="F"
   			    lGfecpmg  := Iif(ValType(MV_PAR18)<>"N",.F.,(mv_par18==1))
    			lTitfemg  := Iif(ValType(MV_PAR17)<>"N",.F.,(mv_par17==1))
				nVFecMGST := SF3->F3_VFESTMG
				nMes      := Month(SF2->F2_EMISSAO) 
				nAno      := Year(SF2->F2_EMISSAO) 
				aDatas    := DetDatas(nMes,nAno,3,1)
				dDtIni	  := aDatas[1]
				dDtFim	  := aDatas[2]
				dDtVenc	  := DataValida(aDatas[2]+1,.t.)
				lLancCont := (MV_PAR03==1)
				//Armazenamento dos dados para ser utilizado na Guia de Recolhimento e no COntas a Pagar
				aadd(aDSF2,{SF2->F2_DOC,SF2->F2_SERIE,SF2->F2_CLIENTE,SF2->F2_LOJA,SF2->F2_TIPO,"2",SF2->F2_EST})
			   	If nVFecMGST > 0
			   		GravaTit(lTitfemg,nVFecMGST,"ICMS","IC",cLcPadTit,dDtIni,dDtFim,dDtVenc,1,lGfecpmg,nMes,nAno,0,nVFecMGST,"MATA460A",lLancCont,@cNumero,@aGNRE,,,SF2->F2_EST,,.T.,,,@aRecTit,@lConfTit,0,aDSF2)
				Endif
			EndIf	
		Endif
		//здддддддддддддддддддддддддддд©
		//ЁGravacao do ICMS Proprio    Ё
		//юдддддддддддддддддддддддддддды
		If nValICM > 0 .And. cPaisLoc=="BRA"
			lGRecICMS := Iif(ValType(MV_PAR20)<>"N",.F.,(mv_par20==1))
			lTitICMS  := Iif(ValType(MV_PAR19)<>"N",.F.,(mv_par19==1))
			If (GetMV("MV_ESTADO")<>SF2->F2_EST .And. (lTitICMS  .Or. lGRecICMS))
				nVlrIcm	 := SF2->F2_VALICM             
				nMes      := Month(SF2->F2_EMISSAO) 
				nAno      := Year(SF2->F2_EMISSAO) 
				aDatas    := DetDatas(nMes,nAno,3,1)
				dDtIni	  := aDatas[1]
				dDtFim	  := aDatas[2]
				dDtVenc	  := DataValida(aDatas[2]+1,.t.)
				lLancCont := Iif(ValType(MV_PAR03)<>"N",.F.,(mv_par03==1))
		    	aadd(aDSF2,{SF2->F2_DOC,SF2->F2_SERIE,SF2->F2_CLIENTE,SF2->F2_LOJA,SF2->F2_TIPO,"2",SF2->F2_EST})
		    	GravaTit(lTitICMS,nVlrIcm,"ICMS","IC",cLcPadTit,dDtIni,dDtFim,dDtVenc,1,lGRecICMS,nMes,nAno,nVlrIcm,0,"MATA460A",lLancCont,@cNumero,@aGNRE,,,,,,,,@aRecTit,@lConfTit,0,aDSF2)
		  	Endif
            // Gera guia de recolhimento quand houver valor de FECP-MG para nЦo contribuinte/consumidor final
			If (SF3->(FieldPos ("F3_VFECPMG")))>0 .And. SF2->F2_TIPOCLI=="F"
   			    lGfecpmg  := Iif(ValType(MV_PAR18)<>"N",.F.,(mv_par18==1))    
    			lTitfemg  := Iif(ValType(MV_PAR17)<>"N",.F.,(mv_par17==1))   			    
				nVFecMG   := SF3->F3_VFECPMG
				nMes      := Month(SF2->F2_EMISSAO) 
				nAno      := Year(SF2->F2_EMISSAO) 
				aDatas    := DetDatas(nMes,nAno,3,1)
				dDtIni	  := aDatas[1]
				dDtFim	  := aDatas[2]
				dDtVenc	  := DataValida(aDatas[2]+1,.t.)
				lLancCont := Iif(ValType(MV_PAR03)<>"N",.F.,(mv_par03==1))
		    	aadd(aDSF2,{SF2->F2_DOC,SF2->F2_SERIE,SF2->F2_CLIENTE,SF2->F2_LOJA,SF2->F2_TIPO,"2",SF2->F2_EST})
			   	If nVFecMG > 0
			   		GravaTit(lTitfemg,nVFecMG,"ICMS","IC",cLcPadTit,dDtIni,dDtFim,dDtVenc,1,lGfecpmg,nMes,nAno,nVFecMG,0,"MATA460A",lLancCont,@cNumero,@aGNRE,,,SF2->F2_EST,,.T.,,,@aRecTit,@lConfTit,0,aDSF2)
				Endif
			EndIf			  	
		Endif               
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁGravacao do Financeiro                                                  Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If ( aTitulo[_VLRTIT_] > 0 )
			lFatSE1 := Eval(bFatSE1)
			If nModulo == 43 .And. SuperGetMv("MV_TMSMFAT") == "2" .And. !lFatSE1
				SF2->F2_VALFAT := aTitulo[_VLRTIT_]
			Else
				MaNfs2Fin(aTitulo,nMoeda,cBanco,SC5->C5_NUM,bAtuFin,(lLct610.Or.lLct620),IIf(SC5->(FieldPos("C5_FORNISS"))<>0,SC5->C5_FORNISS,Nil), MaFisRet(,"NF_RECISS"), cB1M996,cB1FRETISS,aContrato,aMedicao,@aRecSE1Adt,dDataMoe)
			EndIf
		EndIf
		
		#IFDEF TOP
			If cPaisLoc $ "BRA|MEX" .and. (FunName() == "MATA460A" .or. FunName() == "MATA460B" .or. FunName() == "MATA460N" .or. FunName() == "MATA461") .and. AliasInDic("FIE") .and. AliasInDic("FR3")
				If ( aTitulo[_VLRTIT_] > 0 ) // somente se o documento gerou contas a receber
					If A410UsaAdi(SF2->F2_COND)
						For nCnt := 1 To Len(aPvlNfs)
							If aScan(aAtuSC5,aPvlNfs[nCnt,1])==0	
								aadd(aAtuSC5,aPvlNfs[nCnt,1])
							EndIf
							// calcula o acrescimo financeiro para os itens liberados deste pedido
							nAcresTot := MaAcreFinAdt(aPvlNfs,nCnt,MV_PAR05==1,dDataMoe)
							// gera array com valores de acrescimo para cada pedido
							nPosAcres := aScan(aAcresTot,{|x| x[1] = aPvlNfs[nCnt][1]})
							If nPosAcres = 0
								aAdd(aAcresTot,{aPvlNfs[nCnt][1],nAcresTot})
							Else
								aAcresTot[nPosAcres][2] += nAcresTot
							Endif		
						Next nCnt	
						// Importante: chamar a rotina de compensacao de adiantamento antes da rotina MaAvalSC5, pois esta elimina os itens restantes da tabela FIE, quando for o faturamento do ultimo item do pedido
						// Faz a compensacao do titulo no Financeiro
						A461NCompAd(aAtuSC5,aRecSE1Adt,,aPvlNfs,.T.,SF2->F2_DOC,SF2->F2_SERIE,{},aAcresTot,aTitulo)
					EndIf
				Endif	
			Endif	
		#ENDIF	
		
		If ( llCt620 )
			nLctTotal += DetProva(nHdlPrv,"620","MATA460",cLote)
		EndIf
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Grava os lancamentos nas contas orcamentarias SIGAPCO    Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		PcoDetLan("000101","02","MATA461")

		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁAtualiza o Pedido de Venda                                              Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		For nCntFor := 1 To Len(aPedido)
			MaAvalSC5("SC5",5,,,,,,,,aPedido[nCntFor][1])
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁIntegracao com SIGAEEC                                                  Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			dbSelectArea("SC5")
			dbSetOrder(1)
			MsSeek(xFilial("SC5")+aPedido[nCntFor][1])
			If ( !Empty(SC5->C5_PEDEXP) .And. SuperGetMV("MV_EECFAT") )
				If FindFunction("AE100STATUS")
					AE100STATUS(SC5->C5_PEDEXP,SC5->C5_NUM)
				EndIf
			EndIf
			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁEXECUTAR CHAMADA DE FUNCAO p/ integracao com sistema de Distribuicao - NAO REMOVER Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

			//зддддддддддддддддддддддддддддддддддддддддд©
			//ЁAtualizacao da Legenda da tabela SL1     |
			//юддддддддддддддддддддддддддддддддддддддддды                				
			aAdd(aSL1,{"L1_DOC"		, cNumero	})
			aAdd(aSL1,{"L1_SERIE" 	, cSerie	})		
            
			// Posiciona no registro SL1
			dbSelectArea("SL1")
			dbSetOrder(1)			
			If DbSeek(xFilial("SL1") + SC5->C5_ORCRES)			                           
	    		// Atualiza SL1
		        Lj7GeraSL( "SL1", aSL1, .F., .T. )			
		    Endif    
					
		Next nCntFor
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁAtualiza as cargas de transporte                                        Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		For nCntFor := 1 To Len(aCarga)
			If ( aCarga[nCntFor]<> 0 )
				dbSelectArea("DAK")
				dbSetOrder(1)
				MsGoto(aCarga[nCntFor])

				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁAtualiza Flag de Faturamento da Carga                              Ё
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

				OsAvalDAK("SC9",7)

			EndIf
		Next nCntFor

		//здддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁVerificacao da Lista de Presentes - Vendas CRMЁ
		//юдддддддддддддддддддддддддддддддддддддддддддддды
		If lUsaLstPre
			//Verifica se o Pedido que esta sendo faturado И de lista de presentes e se conseguiu emitir a nota fiscal de remessa
			a461LstPre(aPvlnfs)
		EndIf
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁPara a localizacao Mexico, sera processada a funcao do ponto de entrada SF2460I no padrao.Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If cPaisLoc == "MEX"
			RcFatMex()
		Endif
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Pontos de Entrada 											      Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If ( aEntry[EP_SF2460T] )
			ExecTemplate("SF2460I",.F.,.F.)
		EndIf

		If nModulo == 72
			KEXF990()
		EndIf

		If ( aEntry[EP_SF2460I] )
			Execblock("SF2460I",.F.,.F.)
		EndIf
	Else
		// Libera numero da nota no SD9 caso nao consiga gerar a nota
		If cTpNrNfs == "3"
			Ma461LibD9(cSerie,cNumero)
		EndIf
	EndIf
	//-- aStruModel
	//-- [1] - Alias
	//-- [2] - Model da Estrutura
	//-- [3] - bSeek
	//-- [4] - nOrdem
	//-- [5] - bWhile    
	//-- [6] - aFieldValue
	//-- [6,1] Nome do Campo
	//-- [6,2] Bloco de execucao para o valor 
	//--       a ser atribuido ao campo
	
	If FindFunction("MaEnvEAI")
		If lIntGFE
			MaEnvEAI(,,4,"MATA461")
		Else
			Aadd(aStruModel, { "SF2", "MATA461_SF2"     , NIL, NIL, NIL, NIL } )
			Aadd(aStruModel, { "SD2", "MATA461_SD2"     , {|| SF2->(F2_FILIAL+F2_DOC+F2_SERIE+F2_CLIENTE+F2_LOJA) }, 3, {|| SD2->(D2_FILIAL+D2_DOC+D2_SERIE+D2_CLIENTE+D2_LOJA) == SF2->(F2_FILIAL+F2_DOC+F2_SERIE+F2_CLIENTE+F2_LOJA) }, NIL } )
			MaEnvEAI(,,3,"MATA461",aStruModel)
		EndIf	
	EndIf                                    
	
	 //зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	 //ЁVincula Notas Fiscais de Presente com Nota Fiscal comum.     Ё
	 //ЁSeta o Valor das Notas Fiscais na ObservaГЦo da Nota Fiscal .Ё
	 //юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды                             
	If  lECommerce
		A460VNCNF(aPedido)
	EndIf

Else
	// Libera numero da nota no SD9 caso nao consiga gerar a nota
	If cTpNrNfs == "3"
		Ma461LibD9(cSerie,cNumero)
	EndIf
	Aviso(STR0018,STR0020,{STR0021}) //"Mensagem"###"Problemas com o Travamento dos Registros"###"OK"
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁRestaura a entrada da rotina                                            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
RestArea(aAreaDAK)
RestArea(aAreaSC9)
RestArea(aArea)

Return( cNumero )

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMaPvl2SD2 Ё Autor ЁEduardo Riera          Ё Data Ё29.08.1999Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁGravacao do Item da Nota Fiscal de Saida                    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpL1: .T.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpC1: Item da Nota Fiscal                                  Ё╠╠
╠╠Ё          ЁExpA2: Array com o item do SC9 a ser Gerado                 Ё╠╠
╠╠Ё          ЁExpA3: Array com o rateio das despesas acessorias           Ё╠╠
╠╠Ё          ЁExpA4: Array aTitulo p/  controle do Financeiro             Ё╠╠
╠╠Ё          ЁExpL5: Atualiza Amarracao Cliente x Produto                 Ё╠╠
╠╠Ё          ЁExpL6: Reajuste de Preco.                                   Ё╠╠
╠╠Ё          ЁExpN7: Valor do Desconto ( Produto Negativo )               Ё╠╠
╠╠Ё          ЁExpC8: Numero do Embarque de Exportacao                     Ё╠╠
╠╠Ё          ЁExpC9: Array com as cargas a serem atualizadas              Ё╠╠
╠╠Ё          ЁExpB1: Code Block de atualizacao do pedido de venda antes   Ё╠╠
╠╠Ё          Ё       da geracao da nota fiscal                            Ё╠╠
╠╠Ё          ЁExpAA: Array contendo o contrato (GCT) relacionado ao       Ё╠╠
╠╠Ё          Ё       pedido                                               Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function MaPvl2Sd2(cItemNf,aPvlNfs,aRateio,aTitulo,lAtuSa7,lReajuste,nValNeg,nItem,cEmbExp,aCarga,bAtuPvl,aContrato,aMedicao,aNfOriLot,cAliq,dDataMoe, nTotAcre,aSxFci)

Local aPvlSD2	:= aPvlNfs[nItem]
Local aSolid    := {}
Local aSolidTmp        //Inicial este array com nil para validar somente apos utilizaГЦo do ponto de entrada.
Local aPesoEmb  := {}
Local nMaxVend  := Fa440CntVen()
Local nCntFor   := 0
Local nComis    := 0
Local nPrcVen   := 0
Local nPrUnit   := 0
Local nAcresFin := 0
Local nTotal    := 0
Local ny        := 0
Local nDesconto := 0
Local nRecOri   := 0
Local nPosAIss  := 0
Local nAliqIss  := 0
Local cCliEnt   := ""
Local cVendedor := ""
Local cSeriOri  := ""
Local cNfOri    := ""
Local cNumSeq   := SF4->(ProxNum())
Local cItemOri  := ""
Local cIdentB6  := ""
Local cGrpCliTrb := NIL
Local cFilPv    := ""
Local cFilSav   := cFilAnt
Local lGrvVeic	:= .F.		//Grava Veiculo
Local aAreaDAI	:= {}
Local cMoedaTit := SuperGetMv("MV_MOEDTIT")
Local nMoeda    := 0
Local nMoedaNDF := 1
Local nTaxaNDF  := 0
Local aTransp	:= {"",""}
Local lCfo      := .F.
Local nX        := 0 
Local lCAT83	  := .F.  
Local cCmpD2Re := SuperGetMv("MV_RE",,"") 	 // Campo D2 - Exportacao (Sem Integracao EIC) 
Local cCmpC6Re := SuperGetMv("MV_RESC6",,"")  // Campo C6 - Exportacao (Sem Integracao EIC) 

Local cEstado	  := SuperGetMv("MV_ESTADO") 
Local cTesVend    := SuperGetMv("MV_TESVEND",,"")
Local nTotPed	  := 0 
Local nVlImp	  := 0
Local cFciCod	  := ""
Local cNwFciCod	  := ""
Local nNwVlImp	  := 0
Local cCodOrig := ""
Local lFISAUCF := GetNewPar("MV_FISAUCF",.F.)

//Verifica se a funcionalidade Lista de Presente esta ativa e aplicada
Local lUsaLstPre := SuperGetMV("MV_LJLSPRE",,.F.) // .And. IIf(FindFunction("LjUpd78Ok"),LjUpd78Ok(),.F.)
Local lGE 		 := FindFunction("LjUP104OK") .AND. LjUP104OK()   //Verifica se a funcionalidade de Garantia esta aplicaca	

Local lCtbIsCube    := FindFunction("CtbEntArr") .And. AliasInDic("CV0")
Local aEntidades	:= {}
Local nEnt			:= 0
Local nDeb			:= 0
Local lLeiTran		:= SD2->(FieldPos("D2_TOTIMP"))> 0 .And. SF2->(FieldPos("F2_TOTIMP"))> 0 .And. SF2->(FieldPos("F2_TIPIMP"))>0  //Verifica se existem os campos para utilizaГЦo da Lei da transparЙncia
Local nAlqLeiTr		:= 0											// valor da  aliquota retornado pela funГЦo fiscal (Lei transparЙncia)
Local nTotAlq		:= 0                                            // valor total da  aliquota a ser gravada no campo D2_TOTIMP
Local cMvFisCTrb 	:= SuperGetMv("MV_FISCTRB",.F.,"1")             // mИtodo de consulta do percentual de carga tributАria.Informe 1 para tratamento legado ou 2 alМquotas da Nota Fiscal e CGA/CGB - #conteudo gravado no campo D2_TIPIMP
Local cMvFisAlCT   	:= SuperGetMv("MV_FISALCT",.F.,"3")            // Informar qual o mИtodo de composiГЦo da carga tributАria quando MV_FISCTRB = 2. 
Local lMvFisFRas    := SuperGetMv("MV_FISFRAS",.F.,.F.)            // Indica se utilizara a rastreabilidade no faturamento para preenchimento dos campos que necessitam desta funcionalidade 
//здддддддддддддддддддддддддддддддд©
//ЁTratamento para e-Commerce      Ё
//юдддддддддддддддддддддддддддддддды
Local lECommerce := SuperGetMV("MV_LJECOMM",,.F.) .AND. GetRpoRelease("R5")
Local lCDescIPI := lECommerce .AND. SuperGetMV("MV_LJIPENP",, .F.) .AND.  SC6->(FieldPos("C6_DESCIPI") ) > 0

Default bAtuPvl  := {||.T.}
Default dDataMoe := dDataBase

//Gestao de Contratos
Default aContrato := {}
Default aMedicao  := {}
Default aNfOriLot := {}
Default cAliq	  := ""	
Default nTotAcre  := 0
Default aSxFci    := A461RetCFci(,1)

//Tratamento para saber o total antes de chamar a MATXFIS
aEval(aPvlNfs,{|x| nTotPed += a410Arred( x[5],"D2_TOTAL")})
nTotPed +=nTotAcre

If Empty(dDataMoe)
	dDataMoe := dDatabase
Endif

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁPosiciona Registros                                                     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SC9")
dbSetOrder(1)
MsGoto(aPvlSd2[8])

dbSelectArea("SC5")
dbSetOrder(1)
MsGoto(aPvlSD2[9])

dbSelectArea("SC6")
dbSetOrder(1)
MsGoto(aPvlSD2[10])

dbSelectArea("SE4")
dbSetOrder(1)
MsGoto(aPvlSd2[11])

dbSelectArea("SB1")
dbSetOrder(1)
MsGoto(aPvlSd2[12])

dbSelectArea("SB2")
dbSetOrder(1)
MsGoto(aPvlSd2[13])

dbSelectArea("SF4")
dbSetOrder(1)
MsGoto(aPvlSd2[14])

dbSelectArea("DAK")
dbSetOrder(1)
MsGoto(aPvlSd2[16])

dbSelectArea("SA4")
dbSetOrder(1)
If ( aEntry[EP_M460MOED] )
	cMoedaTit := ExecBlock("M460MOED", .F., .F.,cMoedaTit)
EndIf

If aSxFci[3]
	DbSelectArea("CFD")
	DbSetOrder(2)
Endif

nMoeda := SC5->C5_MOEDA
nMoeda := If(cMoedaTit=="S",nMoeda,1)

lCAT83   := SD2->(FieldPos("D2_CODLAN")) > 0 .And. SC6->(FieldPos("C6_CODLAN")) > 0 .And. SuperGetMV("MV_CAT8309",,.T.)
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁCarrega a relacao de impostos contidos no SF2 e SD2                 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If nItem == 1
	If SC5->(FieldPos("C5_CLIENT"))>0
		cCliEnt := SC5->C5_CLIENT
	EndIf
	If Empty(cCliEnt)
		cCliEnt := SC5->C5_CLIENTE
	EndIf

	If ExistBlock( "M461GRP" )
		cGrpCliTrb := ExecBlock( "M461GRP", .f., .f. )
	EndIf

	If SA4->(dbSeek(xFilial("SA4")+SC5->C5_TRANSP))
		aTransp[01] := SA4->A4_EST
		aTransp[02] := Iif(SA4->(FieldPos("A4_TPTRANS")) > 0,SA4->A4_TPTRANS,"")
	Endif
	
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁA Consultoria TributАria, por meio da Resposta Ю Consulta n╨ 268/2004, determinou a aplicaГЦo das seguintes alМquotas nas Notas Fiscais de venda emitidas pelo vendedor remetente:                                                                         Ё
	//Ё1) no caso previsto na letra "a" (venda para SP e entrega no PR) - aplicaГЦo da alМquota interna do Estado de SЦo Paulo, visto que a operaГЦo entre o vendedor remetente e o adquirente originАrio И interna;                                              Ё
	//Ё2) no caso previsto na letra "b" (venda para o DF e entrega no PR) - aplicaГЦo da alМquota interestadual prevista para as operaГУes com o ParanА, ou seja, 12%, visto que a circulaГЦo da mercadoria se dА entre os Estado de SЦo Paulo e do ParanА.       Ё
	//Ё3) no caso previsto na letra "c" (venda para o RS e entrega no SP) - aplicaГЦo da alМquota interna do Estado de SЦo Paulo, uma vez que se considera interna a operaГЦo, quando nЦo se comprovar a saМda da mercadoria do territСrio do Estado de SЦo Paulo,Ё
	//Ё conforme previsto no art. 36, ╖ 4╨ do RICMS/SP                                                                                                                                                                                                            Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If cEstado == 'SP' .And. SC5->(FieldPos("C5_CLIENT"))>0
		If !Empty(SC5->C5_CLIENT) .And. SC5->C5_CLIENT <> SC5->C5_CLIENTE
			For nX := 1 To Len(aPvlNfs)
				dbSelectArea("SC6")
				dbSetOrder(1)
				MsGoto(aPvlNfs[nX][10])
				If Alltrim(SC6->C6_TES)$ Alltrim(cTesVend)
					lCfo:= 	.T.
				EndIf
   			Next 

   			//Restauro a area anterior
   			dbSelectArea("SC6")
			dbSetOrder(1)
			MsGoto(aPvlSD2[10])

	   		If lCfo
				dbSelectArea(IIF(SC5->C5_TIPO$"DB","SA2","SA1"))
				dbSetOrder(1)
				MsSeek(xFilial()+SC5->C5_CLIENTE+SC5->C5_LOJAENT)
				If Iif(SC5->C5_TIPO$"DB", SA2->A2_EST,SA1->A1_EST) <> 'SP'
					 cCliEnt := SC5->C5_CLIENT
				Else
					cCliEnt := SC5->C5_CLIENTE
				EndIf
			EndIf 
		EndIf
	EndIF
	dbSelectArea("SC5")
	MaFisIni(cCliEnt,SC5->C5_LOJAENT,If(SC5->C5_TIPO$'DB',"F","C"),SC5->C5_TIPO,SC5->C5_TIPOCLI,aRelImp,,,,'MATA461',,,,cGrpCliTrb,,,,;
				aTransp,,,SC6->C6_NUM,SC5->C5_CLIENTE,SC5->C5_LOJACLI,nTotPed,,SC5->C5_TPFRETE)
	MaFisLoad("NF_ESPECIE",SF2->F2_ESPECIE)
	If !(SC5->C5_TIPO$'DB')
		If "CTR"$AllTrim(SF2->F2_ESPECIE) .OR. "NFST"$AllTrim(SF2->F2_ESPECIE)
			MaFisLoad("NF_PNF_COD",SC5->C5_CLIENTE)
			MaFisLoad("NF_PNF_LOJ",SC5->C5_LOJACLI)
			MaFisLoad("NF_PNF_UF" ,SA1->A1_EST)
			MaFisLoad("NF_PNF_TPCLIFOR",SA1->A1_TIPO)
		EndIf
		If SC5->(FieldPos("C5_NATUREZ"))>0 .And. !Empty(SC5->C5_NATUREZ)
			MaFisLoad("NF_NATUREZA",SC5->C5_NATUREZ)
		Else
			MaFisLoad("NF_NATUREZA",Iif( Empty(SA1->A1_NATUREZ), &(SuperGetMv("MV_1DUPNAT")) , SA1->A1_NATUREZ ))
		EndIf
	EndIf
	If !Empty(SC5->C5_MUNPRES)
		MaFisLoad("NF_CODMUN",AllTrim(SC5->C5_MUNPRES))
	EndIf
	
	If !Empty(SC5->C5_ESTPRES)
		MaFisLoad("NF_UFPREISS",AllTrim(SC5->C5_ESTPRES))
	EndIf
	If !Empty(SF2->F2_CLIENT) .And. !Empty(SF2->F2_LOJENT)
		MaFisLoad("NF_CLIENT",SF2->F2_CLIENT)
		MaFisLoad("NF_LOJENT",SF2->F2_LOJENT)
	EndIf
	For nY := 1 to Len(aFisGetSC5)
		If !Empty( SC5->(FieldGet(FieldPos(aFisGetSC5[nY][2]))) )
			If aFisGetSC5[ny][1] == "NF_SUFRAMA"
				MaFisLoad(aFisGetSC5[ny][1],Iif( SC5->(FieldGet(FieldPos(aFisGetSC5[nY][2]))) == "1",.T.,.F.))
			Else
				MaFisLoad(aFisGetSC5[ny][1], SC5->(FieldGet(FieldPos(aFisGetSC5[nY][2]))) )
			Endif
		EndIf
	Next nY
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁTratamento para devolucao de Material                                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( SC5->C5_TIPO=="D" )
	dbSelectArea("SD1")
	dbSetOrder(1)
	If ( MsSeek(xFilial()+SC6->C6_NFORI+SC6->C6_SERIORI+SC5->C5_CLIENTE+SC5->C5_LOJACLI+SC6->C6_PRODUTO+SC6->C6_ITEMORI,.F.) )
		nRecOri	:= SD1->(RecNo())
		dbSelectArea("SF1")
		dbSetOrder(1)
		If MsSeek(xFilial("SF1")+SD1->D1_DOC+SD1->D1_SERIE+SD1->D1_FORNECE+SD1->D1_LOJA+"N")
			nTaxaNDF := SF1->F1_TXMOEDA
			dbSelectArea("SE2")
			dbSetOrder(6)
			If MsSeek(xFilial("SE2")+SF1->F1_FORNECE+SF1->F1_LOJA+SF1->F1_PREFIXO+SF1->F1_DUPL)
				nMoedaNDF := SE2->E2_MOEDA
			EndIf
		EndIf
	EndIf
Else
	If ( SF4->F4_PODER3=="D" .And. SC5->C5_TIPO$"BN" )
		dbSelectArea("SD1")
		dbSetOrder(4)
		If ( MsSeek(xFilial("SD1")+SC9->C9_IDENTB6) )
			nRecOri	:= SD1->(RecNo())
		EndIf
		dbSetOrder(1)
	Endif
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁExecuta Code Block de atualizacao do pedido de venda                   Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Eval(bAtuPvl)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁInicializa as funcoes                                                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
MaFisIniLoad(nItem,{	SC6->C6_PRODUTO,;	//IT_PRODUTO
	SC6->C6_TES,; 		//IT_TES
	If(SF4->F4_ISS=="S", SC6->C6_CODISS , " " ) ,; 	//IT_CODISS
	aPvlNfs[nItem][4],;	//IT_QUANT
	SC6->C6_NFORI,; 	//IT_NFORI
	SC6->C6_SERIORI,; 	//IT_SERIORI
	SB1->(RecNo()),;	//IT_RECNOSB1
	SF4->(RecNo()),;	//IT_RECNOSF4
	nRecOri ,; 			//IT_RECORI  
	SC6->C6_LOTECTL,;	//IT_LOTECTL
	SC6->C6_NUMLOTE })	//IT_NUMLOTE
//Apesar da referencia jА ser atualizada no momento da gravaГЦo no SD2, pelo MAFisRef, na MATXFIS precisaremos
// da classificaГЦo fiscal no cАlculo dos impostos do item.
If Len(Alltrim(SC6->C6_CLASFIS))==3
	Mafisload("IT_CLASFIS",SC6->C6_CLASFIS,nItem)
EndIf

MaFisLoad("IT_ABVLISS",SC6->C6_ABATISS,nItem)	

MaFisTes(SC6->C6_TES,SF4->(RecNo()),nItem)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁPara que a aliquota do ISS Progressivo seja enquadrada na tabela        Ё
//ЁCALCPROG.ISS a MATXFIS necessita do valor de referencia do valor total  Ё
//Ёdo item do pedido de vendas para que aliquota seja gravada ao gerar NFs.Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If (SuperGetMV("MV_ISSPRG",,"N") == "S")
	MaFisLoad("IT_VALMERC",SC6->C6_VALOR,nItem) 
EndIf                          

nPosAIss := Ascan(aFisGet, {|x| x[1] == "IT_ALIQISS" })
If nPosAIss > 0    
	dbSelectArea("SC6")
	nAliqIss := SC6->(FieldGet(FieldPos(aFisGet[nPosAIss][2])))
	If nAliqIss == 0
		nAliqIss :=	MaAliqISS(nItem)
	EndIf
Else
	nAliqIss :=	MaAliqISS(nItem)
Endif	
aRateio[RT_PRECOIT]	:= MaPvPrcIt(aPvlNfs,nItem,lReajuste,aRateio,nValNeg,nAliqIss,dDataMoe)

nValNeg		:= If(nValNeg>0,0,nValNeg)
MaFisLoad("IT_VALMERC",aRateio[RT_PRECOIT][3]+aRateio[RT_PRECOIT][4],nItem) 
MaFisLoad("IT_PRCUNI",aRateio[RT_PRECOIT][1],nItem)
MaFisLoad("IT_VLR_FRT",aRateio[RT_VLR_FRT],nItem)
If nAliqIss==0
	MaFisLoad("IT_FRETE",aRateio[RT_FRETE],nItem)
	MaFisLoad("IT_SEGURO",aRateio[RT_SEGURO],nItem)
	MaFisLoad("IT_DESPESA",aRateio[RT_DESPESA],nItem)
EndIf
MaFisLoad("IT_AUTONOMO",aRateio[RT_FRETAUT],nItem)
MaFisLoad("IT_DESCONTO",aRateio[RT_PRECOIT][4],nItem)
MaFisLoad("IT_PESO",SB1->B1_PESO,nItem)

If !Empty(aNfOriLot) .And. Len(aNfOriLot[01])>0 //Tratamento para IVA Ajustado - Esta chamada tem custo zero de performance para matxfis
	MaFisAddIT("IT_ANFORI2",{aNfOriLot[01][__UFORI],aNfOriLot[01][__ALQORI],aNfOriLot[01][__PROPOR],0},nItem,.T.)
EndIf
MaFisRecal("",nItem)
//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁForca os valores de impostos que foram informados no SC6.              Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SC6")
For nY := 1 to Len(aFisGet)
	If !Empty( SC6->(FieldGet(FieldPos(aFisGet[ny][2]))) )
		MaFisAlt(aFisGet[ny][1] , SC6->(FieldGet(FieldPos(aFisGet[ny][2]))) ,nItem,.T.)
	EndIf
Next nY      

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁExecuta o calculo de todos os impostos.                                Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
MaFisAlt("IT_ALIQISS",aRateio[RT_PRECOIT][5],nItem,.T.)
If ( aEntry[EP_M460VISS] )
	MaFisLoad("IT_VALISS",ExecBlock("M460VISS",.F.,.F.,MaFisRet(nItem,"IT_VALISS")),nItem)
EndIf
//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁCompatibilizacao com os pontos de entrada anteriores                   Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( SF4->F4_IPI<>"N" )
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Pontos de Entrada 													  Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If ( aEntry[EP_M460IPT] )
		VALORIPI    := MaFisRet(nItem,"IT_VALIPI")
		BASEIPI     := MaFisRet(nItem,"IT_BASEIPI")
		QUANTIDADE  := MaFisRet(nItem,"IT_QUANT")
		ALIQIPI     := MaFisRet(nItem,"IT_ALIQIPI")
		BASEIPIFRETE:= MaFisRet(nItem,"IT_FRETE")
		MaFisAlt("IT_VALIPI",ExecTemplate("M460IPI",.F.,.F.,{SC9->(RecNo()),nItem}),nItem,.T.)
		MaFisLoad("IT_BASEIPI",BASEIPI,nItem)
		MaFisLoad("IT_ALIQIPI",ALIQIPI,nItem)
		MaFisLoad("IT_FRETE",BASEIPIFRETE,nItem,"11")
	EndIf
	If ( aEntry[EP_M460IPI] )
		VALORIPI    := MaFisRet(nItem,"IT_VALIPI")
		BASEIPI     := MaFisRet(nItem,"IT_BASEIPI")
		QUANTIDADE  := MaFisRet(nItem,"IT_QUANT")
		ALIQIPI     := MaFisRet(nItem,"IT_ALIQIPI")
		BASEIPIFRETE:= MaFisRet(nItem,"IT_FRETE")
		MaFisAlt("IT_VALIPI",ExecBlock("M460IPI",.F.,.F.,{SC9->(RecNo()),nItem}),nItem,.T.)
		MaFisLoad("IT_BASEIPI",BASEIPI,nItem)
		MaFisLoad("IT_ALIQIPI",ALIQIPI,nItem)
		MaFisLoad("IT_FRETE",BASEIPIFRETE,nItem,"11")
	EndIf
	If lCDescIPI .AND. SC6->(C6_DESCIPI) > 0 
		VALORIPI    := MaFisRet(nItem,"IT_VALIPI")
		BASEIPI     := MaFisRet(nItem,"IT_BASEIPI")
		QUANTIDADE  := MaFisRet(nItem,"IT_QUANT")
		ALIQIPI     := MaFisRet(nItem,"IT_ALIQIPI")
		BASEIPIFRETE:= MaFisRet(nItem,"IT_FRETE")
		MaFisAlt("IT_VALIPI", SC6->(C6_DESCIPI),nItem,.T.)
		MaFisLoad("IT_BASEIPI",BASEIPI,nItem)
		MaFisLoad("IT_ALIQIPI",ALIQIPI,nItem)
		MaFisLoad("IT_FRETE",BASEIPIFRETE,nItem,"11")

	EndIf
EndIf
If ( SF4->F4_ICM=="S" )
	If ( aEntry[EP_M460ICM] )
		_BASEICM    := MaFisRet(nItem,"IT_BASEICM")
		_ALIQICM    := MaFisRet(nItem,"IT_ALIQICM")
		_QUANTIDADE := MaFisRet(nItem,"IT_QUANT")
		_VALICM     := MaFisRet(nItem,"IT_VALICM")
		_FRETE      := MaFisRet(nItem,"IT_FRETE")
		_VALICMFRETE:= MaFisRet(nItem,"IT_ICMFRETE")
		_DESCONTO   := MaFisRet(nItem,"IT_DESCONTO")
		ExecBlock("M460ICM",.F.,.F., { nItem } )
		MaFisLoad("IT_BASEICM",_BASEICM,nItem)
		MaFisLoad("IT_ALIQICM",_ALIQICM,nItem)
		MaFisLoad("IT_VALICM",_VALICM,nItem)
		MaFisLoad("IT_FRETE",_FRETE,nItem)
		MaFisLoad("IT_ICMFRETE",_VALICMFRETE,nItem)
		MaFisLoad("IT_DESCONTO",_DESCONTO,nItem)
	EndIf
	If ( aEntry[EP_M460ICMT] )
		_BASEICM    := MaFisRet(nItem,"IT_BASEICM")
		_ALIQICM    := MaFisRet(nItem,"IT_ALIQICM")
		_QUANTIDADE := MaFisRet(nItem,"IT_QUANT")
		_VALICM     := MaFisRet(nItem,"IT_VALICM")
		_FRETE      := MaFisRet(nItem,"IT_FRETE")
		_VALICMFRETE:= MaFisRet(nItem,"IT_ICMFRETE")
		_DESCONTO   := MaFisRet(nItem,"IT_DESCONTO")
		ExecTemplate("M460ICM",.F.,.F., { nItem } )
		MaFisLoad("IT_BASEICM",_BASEICM,nItem)
		MaFisLoad("IT_ALIQICM",_ALIQICM,nItem)
		MaFisLoad("IT_VALICM",_VALICM,nItem)
		MaFisLoad("IT_FRETE",_FRETE,nItem)
		MaFisLoad("IT_ICMFRETE",_VALICMFRETE,nItem)
		MaFisLoad("IT_DESCONTO",_DESCONTO,nItem)
	EndIf

EndIf
If ( SC5->C5_TIPOCLI == "S" .Or. SC5->C5_TIPOCLI == "F" .Or. SC5->C5_TIPOCLI $ SuperGetMV("MV_TPSOLCF")  )
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Pontos de Entrada 													  Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If ( aEntry[EP_M460SOT])                                                  
		ICMSITEM    := MaFisRet(nItem,"IT_VALICM")		// variavel para ponto de entrada
		QUANTITEM   := MaFisRet(nItem,"IT_QUANT")		// variavel para ponto de entrada
		BASEICMRET  := MaFisRet(nItem,"IT_BASESOL")	// criado apenas para o ponto de entrada
		MARGEMLUCR  := MaFisRet(nItem,"IT_MARGEM")		// criado apenas para o ponto de entrada
		If (ExistTemplate("M460SOLI"))
		 	aSolidTmp := ExecTemplate("M460SOLI",.F.,.F.,{nItem,SC6->C6_ITEM})
		 	If ValType(aSolidTmp) == "A"
		 		aSolid := aClone(aSolidTmp)
		 	EndIf
		EndIf
		If Len(aSolid) == 3
			MaFisLoad("IT_BASESOL",NoRound(aSolid[1],2),nItem)
			MaFisLoad("IT_VALSOL" ,NoRound(aSolid[2],2),nItem)
			MaFisLoad("IT_ALIQSOL" ,NoRound(aSolid[3],2),nItem)
		EndIf
	EndIf
//	If ( aEntry[EP_M460SOLI]  .AND. !aEntry[EP_M460SOT] )
	If ( aEntry[EP_M460SOLI]  .OR. nModulo == 72 )
		ICMSITEM    := MaFisRet(nItem,"IT_VALICM")		// variavel para ponto de entrada
		QUANTITEM   := MaFisRet(nItem,"IT_QUANT")		// variavel para ponto de entrada
		BASEICMRET  := MaFisRet(nItem,"IT_BASESOL")	// criado apenas para o ponto de entrada
		MARGEMLUCR  := MaFisRet(nItem,"IT_MARGEM")		// criado apenas para o ponto de entrada
		If nModulo == 72 .AND. !aEntry[EP_M460SOLI]
			aSolidTmp := KEXF760(nItem)
		Else
			If ExistBlock("M460SOLI")
				aSolidTmp := ExecBlock("M460SOLI",.F.,.F.,{nItem,SC6->C6_ITEM})
			EndIf
		EndIf
	 	If ValType(aSolidTmp) == "A" 
	 		aSolid := aClone(aSolidTmp)
	 	EndIf
		If Len(aSolid) == 2
			MaFisLoad("IT_BASESOL",NoRound(aSolid[1],2),nItem)
			MaFisLoad("IT_VALSOL" ,NoRound(aSolid[2],2),nItem)
		EndIf
	EndIf
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁFinaliza a carga do item.                                              Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
MaFisEndLoad(nItem,2)

nPrcVen	 := aRateio[RT_PRECOIT][1]
nPrUnit	 := aRateio[RT_PRECOIT][2]
nTotal	 := aRateio[RT_PRECOIT][3]
nDesconto:= aRateio[RT_PRECOIT][4]
nAcresFin:= aRateio[RT_PRECOIT][6]
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁCalculo dos Impostos Financeiros                                        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( SF4->F4_DUPLIC=="S" )
	aTitulo[_VLRTIT_]  += MaFisRet(nItem,'IT_BASEDUP')
	aTitulo[_VLRIRRF_] += MaFisRet(nItem,'IT_VALIRR')
	aTitulo[_VLRINSS_] += MaFisRet(nItem,'IT_VALINS')
	aTitulo[_VLRINSS_] += MaFisRet(nItem,'IT_VALINA')
	aTitulo[_VLRISS_]  += MaFisRet(nItem,'IT_VALISS')
	aTitulo[_VLRPIS_]  += MaFisRet(nItem,'IT_VALPIS')
	aTitulo[_VLRCSLL_] += MaFisRet(nItem,'IT_VALCSL')
	aTitulo[_VLRCOFI_] += MaFisRet(nItem,'IT_VALCOF')
	aTitulo[_VLRIPI_ ] += MaFisRet(nItem,'IT_VALIPI')
	aTitulo[_VLRSOL_ ] += MaFisRet(nItem,'IT_VALSOL')
	aTitulo[_VLRFET_ ] += MaFisRet(nItem,'IT_VALFET')
	aTitulo[_VLRFAB_ ] += MaFisRet(nItem,'IT_VALFAB') 	
	aTitulo[_VLRFAC_ ] += MaFisRet(nItem,'IT_VALFAC')
	aTitulo[_VLRTPDP_] += MaFisRet(nItem,'IT_VALTPDP') 	 

	If MaFisRet(nItem,'IT_BASEDUP') > 0
		aTitulo[_VLRMOE_]      += aRateio[RT_PRECOIT][7]
		aTitulo[_VLRREA_]      += aRateio[RT_PRECOIT][3]
		aTitulo[_VLRACR_]      += aRateio[RT_PRECOIT][6]
		aTitulo[_VLRDESPAC2_]  += aRateio[RT_DESPAC2]
		If nMoeda <> 1
			aTitulo[_VLRDSPREA_] += aRateio[RT_FRETE]+aRateio[RT_SEGURO]+aRateio[RT_DESPESA]+aRateio[RT_FRETAUT]-aRateio[RT_DESCONT]
			aTitulo[_VLRDSPMOE_] += xMoeda(aRateio[RT_FRETE]+aRateio[RT_SEGURO]+aRateio[RT_DESPESA]+aRateio[RT_FRETAUT]-aRateio[RT_DESCONT],1,nMoeda,dDataMoe,2)

			If aTitulo[_VLRDESPAC2_] < 0
				aTitulo[_VLRTITDIF_] := (aTitulo[_VLRMOE_]+aTitulo[_VLRDESPAC2_])-xMoeda(aTitulo[_VLRREA_],1,nMoeda,dDataMoe,2)
			Else
				aTitulo[_VLRTITDIF_] := aTitulo[_VLRMOE_]+aTitulo[_VLRDSPMOE_]-xMoeda(aTitulo[_VLRREA_]+aTitulo[_VLRDSPREA_],1,nMoeda,dDataMoe,2)
			EndIf
		EndIf
		If nMoedaNDF <> 1 .And. aTitulo[_MOEDANDF_] <> -1
			If aTitulo[_MOEDANDF_] == 0
				aTitulo[_MOEDANDF_]	:= 	nMoedaNDF
			Else
				If nMoedaNDF <> aTitulo[_MOEDANDF_]
					aTitulo[_MOEDANDF_] := -1
				EndIf
			EndIf
			If aTitulo[_MOEDANDF_] > 0
				If aTitulo[_TAXANDF_ ] == 0
					aTitulo[_TAXANDF_] := nTaxaNDF
				Else
					aTitulo[_TAXANDF_ ]  := (aTitulo[_VLRTIT_]/(xMoeda(aTitulo[_VLRTIT_] - MaFisRet(nItem,'IT_BASEDUP'),1,aTitulo[_MOEDANDF_],dDataMoe,,,aTitulo[_TAXANDF_ ])+xMoeda(aTitulo[_VLRTIT_] - MaFisRet(nItem,'IT_BASEDUP'),1,nMoedaNDF,dDataMoe,,,nTaxaNDF)))
				EndIf
			EndIf
		EndIf
	EndIf
ElseIF SF4->(FieldGet(FieldPos("F4_DUPLIST")) == "1" )
	aTitulo[_VLRTIT_]  += MaFisRet(nItem,'IT_VALSOL')
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁPoder de Terceiro                                                       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Do Case
Case ( SF4->F4_PODER3=="D" .And. Empty(SC6->C6_NFORI) )
	dbSelectArea("SB6")
	dbSetOrder(1)
	MsSeek(xFilial("SB6")+SC6->C6_PRODUTO+SC5->C5_CLIENTE+SC5->C5_LOJACLI+SC9->C9_IDENTB6)

	While ( !Eof() .And. xFilial("SB6") == SB6->B6_FILIAL .And.;
			SC6->C6_PRODUTO== SB6->B6_PRODUTO.And.;
			SC5->C5_CLIENTE== SB6->B6_CLIFOR .And.;
			SC5->C5_LOJACLI== SB6->B6_LOJA   .And.;
			SB6->B6_IDENT  == SC9->C9_IDENTB6 )
		dbSelectArea("SF4")
		dbSetOrder(1)
		MsSeek(xFilial("SF4")+SB6->B6_TES)
		If ( SF4->F4_PODER3=="R" )
			cNfOri   := SB6->B6_DOC
			cSeriOri := SB6->B6_SERIE
			cItemOri := ""
			cIdentB6 := SC9->C9_IDENTB6
			dbSelectArea("SF4")
			dbSetOrder(1)
			MsGoto(aPvlSd2[13])
			Exit
		EndIf
		dbSelectArea("SB6")
		dbSkip()
	EndDo
Case ( SF4->F4_PODER3=="N" .And. !Empty(SC9->C9_IDENTB6) )
	dbSelectArea("SD1")
	dbSetOrder(4)
	MsSeek(xFilial("SD1")+SC9->C9_IDENTB6)
	cNfOri   := SD1->D1_DOC
	cSeriOri := SD1->D1_SERIE
	cItemOri := SD1->D1_ITEM
	cIdentB6 := SC9->C9_IDENTB6
OtherWise
	cNfOri   := SC6->C6_NFORI
	cSeriOri := SC6->C6_SERIORI
	cItemOri := SC6->C6_ITEMORI
	cIdentB6 := SC9->C9_IDENTB6
EndCase

//Tratamento para ICMS-ST de transporte, quando a nota nao deve possuir valor
//contabil, apenas os valores do ICMS Solidario
If SF4->(FieldPos("F4_OBSSOL"))>0 .And. SF4->(FieldPos("QTDZERO"))>0
	If SF4->F4_OBSSOL=="5" .And. SF4->F4_QTDZERO=="1"
		nPrUnit	:=	0
		nPrcVen	:=	0
		nTotal	:=	0
	Endif
Endif

RecLock("SD2",.T.)
SD2->D2_FILIAL   := xFilial("SD2")
SD2->D2_SERIE    := SF2->F2_SERIE
SD2->D2_DOC      := SF2->F2_DOC
SD2->D2_ITEM     := cItemNf
SD2->D2_EMISSAO  := dDataBase
SD2->D2_TIPO     := SF2->F2_TIPO
SD2->D2_CLIENTE  := SF2->F2_CLIENTE
SD2->D2_LOJA     := SF2->F2_LOJA
SD2->D2_COD      := SC6->C6_PRODUTO
SD2->D2_QUANT    := aPvlSD2[4]
SD2->D2_UM       := SC6->C6_UM
If SD2->(FieldPos('D2_ESTOQUE')) > 0 
	SD2->D2_ESTOQUE	 := SF4->F4_ESTOQUE	
Endif
If SD2->(FieldPos('D2_SITTRIB')) > 0 .And. !Empty(cAliq)
	SD2->D2_SITTRIB  := cAliq
Endif

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVendas Cliente - 22/02/11                                Ё
//ЁGrava os campos de Codigo da Lista de Presentes e Item daЁ
//ЁLista de Presentes                                       Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If 	lUsaLstPre
	SD2->D2_CODLPRE	:= SC6->C6_CODLPRE
	SD2->D2_ITLPRE	:= SC6->C6_ITLPRE
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVendas Cliente - 10/12/13                                Ё
//ЁGrava os campos de Garantia para rastreio na devolucao   Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lGE 
	If SC6->(FieldPos('C6_ITEMGAR')) > 0 .AND.  SD2->(FieldPos('D2_ITEMGAR')) > 0 
		SD2->D2_ITEMGAR	 := SC6->C6_ITEMGAR
	EndIf	
		
	If SC6->(FieldPos('C6_ORCGAR')) > 0 .AND.  SD2->(FieldPos('D2_ORCGAR')) > 0 
		SD2->D2_ORCGAR	 := SC6->C6_ORCGAR
	EndIf	
Endif


If Empty( aPvlSD2[17] )
	If aPvlSD2[4] == SC6->C6_QTDVEN
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Se baixou totalmente a primeira unidade de medida, baixa a segunda     Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		SD2->D2_QTSEGUM  := SC6->C6_UNSVEN
	Else
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Faz a conversao de unidade                                             Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		SD2->D2_QTSEGUM  := SF4->(ConvUm(SC6->C6_PRODUTO,aPvlSD2[4],0,2))
	EndIf
Else
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Fatura a quantidade efetivamente liberada                              Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	SD2->D2_QTSEGUM := aPvlSD2[17]
EndIf

SD2->D2_SEGUM    := SC6->C6_SEGUM
SD2->D2_DESC     := SC6->C6_DESCONT
SD2->D2_DESCON   := nDesconto
SD2->D2_PEDIDO   := SC6->C6_NUM
SD2->D2_ITEMPV   := SC6->C6_ITEM
SD2->D2_LOCAL    := SC9->C9_LOCAL
SD2->D2_NUMSERI  := SC6->C6_NUMSERI
SD2->D2_CODFAB   := SC6->C6_CODFAB
SD2->D2_LOJAFA   := SC6->C6_LOJAFA
SD2->D2_ITEMORI  := cItemOri
SD2->D2_PESO     := SB1->B1_PESO
SD2->D2_GRUPO    := SB1->B1_GRUPO
SD2->D2_TP       := SB1->B1_TIPO
SD2->D2_CONTA    := SB1->B1_CONTA
SD2->D2_CCUSTO   := SB1->B1_CC
SD2->D2_ITEMCC   := SB1->B1_ITEMCC
SD2->D2_CLVL     := SB1->B1_CLVL
SD2->D2_EST      := SF2->F2_EST
SD2->D2_PRUNIT   := nPrUnit
SD2->D2_BASEORI  := 0
SD2->D2_NUMSEQ   := cNumSeq
SD2->D2_VALACRS  := nAcresFin
SD2->D2_IDENTB6  := cIdentB6
SD2->D2_GRADE    := SC6->C6_GRADE
SD2->D2_CODISS   := SF4->(If(SF4->F4_ISS=="S", SC6->C6_CODISS , " " )) 
SD2->D2_NUMLOTE  := SC9->C9_NUMLOTE
SD2->D2_LOTECTL  := SC9->C9_LOTECTL
SD2->D2_DTVALID  := SC9->C9_DTVALID
SD2->D2_POTENCI  := SC9->C9_POTENCI
SD2->D2_CLASFIS  := SC6->C6_CLASFIS
SD2->D2_PROJPMS  := SC9->C9_PROJPMS
SD2->D2_TASKPMS  := SC9->C9_TASKPMS
If SD2->(FieldPos('D2_TRT')) > 0 .And.SC9->(FieldPos('C9_TRT'))  > 0
	SD2->D2_TRT  := SC9->C9_TRT
Endif	
SD2->D2_LICITA 	  := SC9->C9_LICITA
SD2->D2_SERVIC   := SC9->C9_SERVIC
SD2->D2_PDV      := SF2->F2_PDV

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁEfetua a gravacao dos Impostos                                          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
SF4->(MaFisWrite(2,"SD2",nItem))
SD2->D2_VALICM   := SF4->(If(SF4->F4_ISS<>"S",MaFisRet(nItem,'IT_VALICM') ,MaFisRet(nItem,'IT_VALISS')))
SD2->D2_BASEICM  := SF4->(If(SF4->F4_ISS<>"S",MaFisRet(nItem,'IT_BASEICM'),MaFisRet(nItem,'IT_BASEISS')))
SD2->D2_PICM     := SF4->(If(SF4->F4_ISS=="S",MaFisRet(nItem,'IT_ALIQISS'),MaFisRet(nItem,'IT_ALIQICM')))
SD2->D2_DESCZFR  := SF4->(MaFisRet(nItem,'IT_DESCZF'))    
If nModulo <> 43
	SD2->D2_CF := SC6->C6_CF
EndIf

//------Numero da Receita AgronТmica   
If ( SD2->(FieldPos('D2_NRECAGR')) > 0 .And. SC6->(FieldPos('C6_NRECAGR')) > 0 )
	SD2->D2_NRECAGR := SC6->C6_NRECAGR
EndIf
//-----------------------------------

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁEfetua a gravacao dos valores unitarios qdo. nao utiliza desc. ZF       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If SD2->D2_DESCZFR == 0 
	SD2->D2_PRCVEN	:= nPrcVen
	SD2->D2_TOTAL	:= nTotal
Else
	SD2->D2_TOTAL := SD2->D2_TOTAL - nDesconto
EndIf
If SD2->(FieldPos("D2_EDTPMS"))>0
	SD2->D2_EDTPMS   := SC9->C9_EDTPMS
EndIf                              

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁTratamento para o Reg. CR=31 da Nova GIA quando nЦo tiver interaГЦo com SIGAEEC Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If SD2->(Fieldpos(cCmpD2Re)) > 0 .And. SC6->(Fieldpos(cCmpC6Re)) > 0
   SD2->&(cCmpD2Re) := SC6->&(cCmpC6Re) 
Endif
  
  
/* ------------------------------------------------------------------
  Preenchimento dos campos D2_VLIMPOR

O array aSxFci eh carregado no cabecalho do documento
aSxFci ->	[1] - MV_FISFRAS
			[2] - MV_FCIMOD
			[3] - AliasInDic("CFD")
			[4] - FieldPos("D2_FCICOD")
			[5] - FieldPos("D2_VLIMPOR")
			[6] - FieldPos("C6_VLIMPOR")
			[7] - FieldPos("D1_FCICOD")
			[8] - FieldPos("C6_FCICOD")						*/
			
cFciCod := Iif( aSxFci[8] , SC6->C6_FCICOD , "" )
nVlImp	:= Iif( aSxFci[6] , SC6->C6_VLIMPOR , 0 )

// Verificar parametro MV_FISFRAS, que deve ser desabilitado caso nao queria
// preencher o campo D2_VLIMPOR automaticamente
If aSxFci[1]
	// **************************************************************************
	// OPCAO TRANSFERIDA PARA O PEDIDO DE VENDA (PREENCHIMENTO DO CODIGO DA FCI)
	// **************************************************************************
	/*//Preenchimento do Codigo da Fci atraves da tabela CFD -> A461RetCFci()
	If aSxFci[3] .And. aSxFci[4] .And. ( Empty( aSxFci[2] ) .Or. Alltrim( SF2->F2_ESPECIE ) $ aSxFci[2] )
		cFciCod 		:=	A461RetCFci( SC6->C6_PRODUTO , 2 , cFciCod )[1]
	Endif*/
	If Rastro( SC6->C6_PRODUTO )
		SpedRastro2( SC9->C9_NUMLOTE , SC9->C9_LOTECTL , SC6->C6_PRODUTO , @nNwVlImp , 0 , .T. , @cNwFciCod,,,,,@cCodOrig )
	Endif
	//Soh utilizo o retorno da SpedRastro() se nao tiver digitado no PV
	nVlImp	:=	Iif( nVlImp > 0 , nVlImp , nNwVlImp )
	cFciCod	:=	Iif( !Empty( cFciCod ) , cFciCod , cNwFciCod )
Endif
If aSxFci[4]
	SD2->D2_FCICOD	:=	cFciCod	 
	If lFISAUCF .And. !Empty( cFciCod ) .And. !Empty( cCodOrig ) //Preenchimento do Clasfis do Fci de revenda  
		SD2->D2_CLASFIS := cCodOrig + Substr(SD2->D2_CLASFIS,2)  
	EndIf
Endif
If aSxFci[5]
	SD2->D2_VLIMPOR	:=	nVlImp
Endif
// ------------------------------------------------------------------
                              
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Desconta o Valor do ICMS DESONERADO do valor do Item D2_PRCVEN         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If SF4->F4_AGREG$"R"
	SD2->D2_TOTAL  -= MaFisRet(nItem,"IT_DEDICM")
	SD2->D2_PRCVEN := A410Arred(SD2->D2_TOTAL/IIf(SD2->D2_QUANT==0,1,SD2->D2_QUANT),"D2_PRCVEN")
EndIf                              

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Atualiza CAT/83										    Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lCAT83
	SD2->D2_CODLAN := SC6->C6_CODLAN
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Pontos de Entrada 											       	   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( aEntry[EP_MSD2UMT] )
	SD2->D2_QTSEGUM := ExecTemplate("MSD2UM2",.F.,.F.,SC9->(RecNo()))
EndIf
If ( aEntry[EP_MSD2UM2] )
	SD2->D2_QTSEGUM := ExecBlock("MSD2UM2",.F.,.F.,SC9->(RecNo()))
EndIf
IF ( SD2->(FIELDPOS("D2_PREEMB")) <> 0 ) .and. cEmbExp <> Nil
	SD2->D2_PREEMB := cEmbExp
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁTratamento para LegislaГЦo de Carga TributАria - Lei n╨ 12.741/2012 (Lei da TransparЙncia)        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lLeiTran .And. FindFunction("AlqLei2741")
    If SF2->F2_TIPOCLI == "F"  // LegislaГЦo aplicada apenas para cliente consumidor final
	 	// FunГЦo Fiscal para retorno da carga trubutАria
		nAlqLeiTr := AlqLei2741(SB1->B1_POSIPI,SB1->B1_EX_NCM,SB1->B1_CODISS,SF2->F2_EST,SA1->A1_COD_MUN,SC9->C9_PRODUTO,nItem,SC9->C9_NUMLOTE,SC9->C9_LOTECTL,cMvFisCTrb, cMvFisAlCT,lMvFisFRas)
		nTotAlq := (nAlqLeiTr / 100) * SD2->D2_VALBRUT
		SD2->D2_TOTIMP := nTotAlq
	EndIf	
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁAtualiza Percentuais de Comissao                                        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
cVendedor := "1"
For nCntFor := 1 To nMaxVend
	nComis := SC6->(FieldGet(FieldPos("C6_COMIS"+cVendedor)))
	If ( nComis == 0 )
		nComis := SC5->(FieldGet(FieldPos("C5_COMIS"+cVendedor)))
	EndIf
	SD2->(FieldPut(FieldPos("D2_COMIS"+cVendedor),nComis))
	cVendedor := Soma1(cVendedor,1)
Next nCntFor
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁAtualiza o Cabecalho da Nota                                            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !InTransact()
	RecLock("SF2")
EndIf

If !Empty(SC5->C5_PEDEXP) .And. SuperGetMV("MV_EECFAT") .And. FindFunction("EECAtuPesNF") .And. EECAtuPesNF(SC5->C5_PEDEXP)
	aPesoEmb := CalcPeso(SC5->C5_PEDEXP,SD2->D2_ITEMPV,SD2->D2_QUANT,SC5->C5_NUM)
	SF2->F2_PLIQUI     += aPesoEmb[1]
	SF2->F2_PBRUTO     += aPesoEmb[2]
Else
	If ( SC5->C5_PESOL == 0 )
		SF2->F2_PLIQUI     += SD2->D2_PESO * SD2->D2_QUANT
	EndIf
	If ( SC5->C5_PBRUTO == 0 )
		SF2->F2_PBRUTO     += SB1->B1_PESBRU * SD2->D2_QUANT
	EndIf
EndIf

SF2->F2_CARGA  := SC9->C9_CARGA
SF2->F2_SEQCAR := SC9->C9_SEQCAR
SF2->F2_SEQENT := SC9->C9_SEQENT

If SF2->(FieldPos("F2_DESCCAB")) > 0
	SF2->F2_DESCCAB += aRateio[RT_DESCONT]+aRateio[RT_PDESCON]
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁTratamento para LegislaГЦo de Carga TributАria - Lei n╨ 12.741/2012 (Lei da TransparЙncia)        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lLeiTran .And. FindFunction("AlqLei2741")
	SF2->F2_TOTIMP := SF2->F2_TOTIMP + SD2->D2_TOTIMP
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁAtualiza itens do Pedido de Venda                                       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
RecLock("SC6",.F.)
SF4->(MaAvalSC6("SC6",5))
MsUnlock()
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁAtualiza Itens de Pedido Liberado                                       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
RecLock("SC9")
SF4->(MaAvalSC9("SC9",11))
MsUnLock()
If (!Empty(SC9->C9_CARGA))
	//-- Uso SIGAOMS - Tratamento para Filial Operador Logistico
	If	Type("cFilOpl") <> "U" .And. cFilOpl <> cFilAnt
		cFilAnt := cFilOpl
	EndIf
	If	aPvlSD2[16] <> 0
		lGrvVeic := .T.
		If Ascan(aCarga,aPvlSD2[16])==0
			aadd(aCarga,aPvlSD2[16])
		EndIf
	Else
		dbSelectArea("DAK")
		dbSetOrder(1) //DAK_FILIAL+DAK_COD+DAK_SEQCAR
		If	MsSeek(xFilial("DAK")+SC9->C9_CARGA+SC9->C9_SEQCAR)
			lGrvVeic := .T.
			If Ascan(aCarga,DAK->(RecNo()))==0
				aadd(aCarga,DAK->(RecNo()))
			EndIf
		EndIf
	EndIf
	If	lGrvVeic .And. SF2->(FieldPos("F2_VEICUL1")) > 0 //Grava Veiculo
		SF2->F2_VEICUL1 := DAK->DAK_CAMINH
	EndIf
	cFilPv := IIf(OsVlEntCom()==1,"",SC9->C9_FILIAL)
	If	DAI->(FieldPos("DAI_NFISCA")) > 0 .And. DAI->(FieldPos("DAI_SERIE")) > 0
		aAreaDAI := DAI->(GetArea())
		dbSelectArea("DAI")
		dbSetOrder(1) //DAI_FILIAL+DAI_COD+DAI_SEQCAR+DAI_SEQUEN+DAI_PEDIDO
		If	DAI->(dbSeek(xFilial("DAI")+SC9->C9_CARGA+SC9->C9_SEQCAR+SC9->C9_SEQENT+SC9->C9_PEDIDO))
			Reclock("DAI",.F.)
			DAI->DAI_NFISCA := SF2->F2_DOC
			DAI->DAI_SERIE  := SF2->F2_SERIE
			MsUnlock()
		EndIf
		RestArea(aAreaDAI)
	EndIf
	//-- Uso SIGAOMS - Tratamento para Filial Operador Logistico
	If	cFilAnt <> cFilSav
		cFilAnt := cFilSav
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁAtualiza saldo no armazem de poder de terceiros                         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If FindFunction("TrfSldPoder3")
	TrfSldPoder3(SD2->D2_TES,"SD2",SD2->D2_COD,.F.)
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁAtualiza saldo do contrato SIGAGCT                                      Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If SC6->( FieldPos("C6_ITEMED") ) > 0 .And. !Empty(SC6->C6_ITEMED)
	CtaAvalGCT(1,aContrato,SC5->C5_MDCONTR,SC5->C5_MDPLANI,SC6->C6_ITEMED,SD2->D2_QUANT,aMedicao,SC5->C5_MDNUMED,SD2->D2_TOTAL)	
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁAtualiza os acumulados do SD2                                           Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( aEntry[EP_MSD2460] )
	_ATITNEW := aTitulo
EndIf
SF2->(FkCommit(.T.))
MaAvalSD2(,,lAtuSA7,nItem)
If ( aEntry[EP_MSD2460] )
	aTitulo := _ATITNEW
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁRotina para tratar a gravacao do rateio por item nota fiscal de saida.       Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If AliasInDic("AGH") .And. AliasInDic("AGG")
	aAreaRat := GetArea()
	nItemRat := 0
	dbSelectArea("AGG")
	dbSetOrder(1) // AGG_FILIAL+AGG_PEDIDO+AGG_FORNEC+AGG_LOJA+AGG_ITEMPD+AGG_ITEM	
	If dbSeek(xFilial("AGG") + SD2->D2_PEDIDO + SD2->D2_CLIENTE + SD2->D2_LOJA + SD2->D2_ITEMPV)
		While AGG->(!EOF()) .AND. AGG->(AGG_FILIAL+AGG_PEDIDO+AGG_FORNEC+AGG_LOJA+AGG_ITEMPD) == xFilial("AGG") + SD2->D2_PEDIDO + SD2->D2_CLIENTE + SD2->D2_LOJA + SD2->D2_ITEMPV
			nItemRat++
			RecLock("AGH",.T.)
			AGH->AGH_FILIAL		:= 	xFilial("AGH")
			AGH->AGH_NUM  		:=  SF2->F2_DOC
			AGH->AGH_SERIE 		:=	SF2->F2_SERIE
			AGH->AGH_FORNECE	:=  SD2->D2_CLIENTE
			AGH->AGH_LOJA 		:=  SD2->D2_LOJA
			AGH->AGH_ITEMPD 	:=	SD2->D2_ITEM
			AGH->AGH_ITEM   	:=  STRZERO( nItemRat , TamSX3("AGH_ITEM")[1])
			AGH->AGH_PERC 		:=	AGG->AGG_PERC
			AGH->AGH_CC 		:=  AGG->AGG_CC
			AGH->AGH_CONTA 		:=  AGG->AGG_CONTA
			AGH->AGH_ITEMCTA 	:=  AGG->AGG_ITEMCTA
			AGH->AGH_CLVL    	:=  AGG->AGG_CLVL
			AGH->AGH_CUSTO1 	:=  SD2->D2_CUSTO1 * (AGG->AGG_PERC/100)
			AGH->AGH_CUSTO2     :=  SD2->D2_CUSTO2 * (AGG->AGG_PERC/100)
			AGH->AGH_CUSTO3     :=	SD2->D2_CUSTO3 * (AGG->AGG_PERC/100)
			AGH->AGH_CUSTO4     :=  SD2->D2_CUSTO4 * (AGG->AGG_PERC/100)
			AGH->AGH_CUSTO5     :=  SD2->D2_CUSTO5 * (AGG->AGG_PERC/100)
			
			If lCtbIsCube
				aEntidades := CtbEntArr()
				For nEnt := 1 to Len(aEntidades)
					For nDeb := 1 to 2
						cCpo := "AGH_EC"+aEntidades[nEnt]
						cAGG := "AGG_EC"+aEntidades[nEnt]
						
						If nDeb == 1
							cCpo += "DB"
							cAGG += "DB"
						Else
							cCpo += "CR"
							cAGG += "CR"
						EndIf
										
						If AGH->(FieldPos(cCpo)) > 0 .And. AGG->(FieldPos(cAGG)) > 0
							AGH->(&(cCpo)) := AGG->(&(cAGG))
						EndIf
						
					Next nDeb
				Next nEnt
			EndIf
			
			MsUnLock()
			AGG->(dbSkip())
		EndDo
		RecLock("SD2",.F.)
			SD2->D2_RATEIO := "1"
		MsUnLock()
	EndIf
	RestArea(aAreaRat)
Endif

Return( .T. )

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMaPvl2SF2 Ё Autor ЁEduardo Riera          Ё Data Ё29.08.1999Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁGravacao da Nota Fiscal de Saida                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpL1: .T.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ                                                            Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function MaPvl2SF2(cSerie,cNumero,aPedido,lReajuste,lMoedaFre,lCtbOnLine,nValNeg,cPdv,cCgc)

Local aEspVol  := {}
Local nCntFor  := 1
Local nMaxVend := Fa440CntVen()
Local cScan    := ""
Local nScan    := ""
Local cEstado  := ""
Local cCliEnt  := IIf(SC5->(FieldPos("C5_CLIENT"))>0,IIf(!Empty(SC5->C5_CLIENT),SC5->C5_CLIENT,SC5->C5_CLIENTE),SC5->C5_CLIENTE)
Local cVendedor:= "1"
Local nTotPBrut:= 0
Local nTotPesoL:= 0
Local cEspecie := ""
Local lTMSUFPAG:= SuperGetMv("MV_TMSUFPG",.F.,.F.) //-- Define se grava o estado do pagador do frete.
Local cMv_Estado  := SuperGetMv("MV_ESTADO") 
Local cTesVend    := SuperGetMv("MV_TESVEND",,"")
Local lCfo        := .F.

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁPosiciona Registros                                                     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If  ( SC5->C5_TIPO $ "DB" )
	If ( SC5->C5_CLIENTE+SC5->C5_LOJACLI <> cCliEnt+SC5->C5_LOJAENT )
		dbSelectArea("SA2")
		dbSetOrder(1)
		MsSeek(xFilial("SA2")+cCliEnt+SC5->C5_LOJAENT)
		cEstado := SA2->A2_EST

		dbSelectArea("SA2")
		dbSetOrder(1)
		MsSeek(xFilial("SA2")+SC5->C5_CLIENTE+SC5->C5_LOJACLI)

		cEstado := IIf(Empty(cEstado),SA2->A2_EST,cEstado)
	Else
		dbSelectArea("SA2")
		dbSetOrder(1)
		MsSeek(xFilial("SA2")+SC5->C5_CLIENTE+SC5->C5_LOJACLI)

		cEstado := SA2->A2_EST
	EndIf
Else
	If ( SC5->C5_CLIENTE+SC5->C5_LOJACLI <> cCliEnt+SC5->C5_LOJAENT )
		dbSelectArea("SA1")
		dbSetOrder(1)
		MsSeek(xFilial("SA1")+cCliEnt+SC5->C5_LOJAENT)
		cEstado := SA1->A1_EST

		dbSelectArea("SA1")
		dbSetOrder(1)
		MsSeek(xFilial("SA1")+SC5->C5_CLIENTE+SC5->C5_LOJACLI)
		
		
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁA Consultoria TributАria, por meio da Resposta Ю Consulta n╨ 268/2004, determinou a aplicaГЦo das seguintes alМquotas nas Notas Fiscais de venda emitidas pelo vendedor remetente:                                                                         Ё
	//Ё1) no caso previsto na letra "a" (venda para SP e entrega no PR) - aplicaГЦo da alМquota interna do Estado de SЦo Paulo, visto que a operaГЦo entre o vendedor remetente e o adquirente originАrio И interna;                                              Ё
	//Ё2) no caso previsto na letra "b" (venda para o DF e entrega no PR) - aplicaГЦo da alМquota interestadual prevista para as operaГУes com o ParanА, ou seja, 12%, visto que a circulaГЦo da mercadoria se dА entre os Estado de SЦo Paulo e do ParanА.       Ё
	//Ё3) no caso previsto na letra "c" (venda para o RS e entrega no SP) - aplicaГЦo da alМquota interna do Estado de SЦo Paulo, uma vez que se considera interna a operaГЦo, quando nЦo se comprovar a saМda da mercadoria do territСrio do Estado de SЦo Paulo,Ё
	//Ё conforme previsto no art. 36, ╖ 4╨ do RICMS/SP                                                                                                                                                                                                            Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If cMv_Estado == 'SP'.And. SA1->A1_EST == 'SP'
		dbSelectArea("SC6")
   		dbSetOrder(1)
   		MsSeek(xFilial("SC6")+aPedido[nCntFor][1])
   			
		While !SC6->(Eof()) .And. xFilial("SC6") == SC6->C6_FILIAL .And. SC6->C6_NUM    == aPedido[nCntFor][1] 
			If Alltrim(SC6->C6_TES)$ Alltrim(cTesVend)
				lCfo:= 	.T.
			EndIf
   			dbSkip() 
   		End
   			
   		If lCfo
			cEstado := SA1->A1_EST			
		EndIf 
	EndIF
	
		//--Se a chamada e pelo modulo SIGATMS, para gravar o estado precisamos respeitar o parametro MV_TMSUFPG,
		//--responsavel por todas as gravacoes de estado, na parte fiscal, se o parametro estiver ativado, gravo
		//--o estado que pegamos atraves do C5_CLIENTE+C5_LOJACLI, que e o cliente devedor do frete,
		//--caso contrario utilizo o estado do destinatario que ja estava gravado em cEstado		
		If "TMSA200" $ FunName() //--SIGATMS, Calculo do Frete
			If lTMSUFPAG
				cEstado := SA1->A1_EST
			EndIf
		EndIf

		cEstado := IIf(Empty(cEstado),SA1->A1_EST,cEstado)		
	Else
		dbSelectArea("SA1")
		dbSetOrder(1)
		MsSeek(xFilial("SA1")+SC5->C5_CLIENTE+SC5->C5_LOJACLI)

		cEstado := SA1->A1_EST
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁCalculo do Volumes                                                      Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
For nCntFor := 1 To Len(aPedido)
	dbSelectArea("SC5")
	dbSetOrder(1)
	MsSeek(xFilial("SC5")+aPedido[nCntFor][1])

	cScan := "1"
	While ( !Empty(cScan) )
		cEspecie := Upper(FieldGet(FieldPos("C5_ESPECI"+cScan)))
		If !Empty(cEspecie)
			nScan := aScan(aEspVol,{|x| x[1] == cEspecie})
			If ( nScan==0 )
				aadd(aEspVol,{ cEspecie, FieldGet(FieldPos("C5_VOLUME"+cScan)) })
			Else
				aEspVol[nScan][2] += FieldGet(FieldPos("C5_VOLUME"+cScan))
			EndIf
		EndIf
		cScan := Soma1(cScan,1)
		If ( FieldPos("C5_ESPECI"+cScan) == 0 )
			cScan := ""
		EndIf
	EndDo
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁCalculo dos Peso Bruto                                                  Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If Empty(SC5->C5_PEDEXP) .Or. !SuperGetMV("MV_EECFAT") .Or. ( !Empty(SC5->C5_PEDEXP) .AND. FindFunction("EECAtuPesNF") .AND. !EECAtuPesNF(SC5->C5_PEDEXP))
		nTotPBrut	+= FieldGet(FieldPos("C5_PBRUTO"))
		nTotPesoL	+= FieldGet(FieldPos("C5_PESOL"))
	EndIf
Next nCntFor

RecLock("SF2",.T.)

SF2->F2_FILIAL     := xFilial("SF2")
SF2->F2_DOC        := cNumero
SF2->F2_PDV        := cPdv
SF2->F2_ECF        := IIf(!Empty(cPdv),"S","")
SF2->F2_SERIE      := cSerie
SF2->F2_ESPECIE    := A460Especie(cSerie)
SF2->F2_EMISSAO    := dDataBase
SF2->F2_CLIENTE    := SC5->C5_CLIENTE
SF2->F2_LOJA       := SC5->C5_LOJACLI
SF2->F2_TIPO       := SC5->C5_TIPO
SF2->F2_COND       := SC5->C5_CONDPAG
SF2->F2_TIPOCLI    := SC5->C5_TIPOCLI
SF2->F2_TRANSP     := SC5->C5_TRANSP
SF2->F2_REDESP     := SC5->C5_REDESP
SF2->F2_REAJUST    := If(!lReajuste,SC5->C5_REAJUST,"")
SF2->F2_HORA       := SubStr(Time(),1,5)
SF2->F2_REGIAO     := SA1->A1_REGIAO
SF2->F2_EST        := cEstado
SF2->F2_PBRUTO     := nTotPBrut
SF2->F2_PLIQUI     := nTotPesoL  
SF2->F2_CLIENT	:=	SC5->C5_CLIENT
SF2->F2_LOJENT	:=	SC5->C5_LOJAENT    
If  SF2->(FieldPos("F2_TPFRETE")) > 0	
     SF2->F2_TPFRETE := SC5->C5_TPFRETE
EndIf
If  SF2->(FieldPos("F2_CGCCLI")) > 0	
	SF2->F2_CGCCLI	:= ALLTRIM( cCgc )
Endif
If SF2->(FieldPos("F2_VEICUL1"))>0 .And. SC5->(FieldPos("C5_VEICULO")) > 0
   SF2->F2_VEICUL1 := SC5->C5_VEICULO
Endif 
If  SC5->(FieldPos("C5_RECFAUT")) > 0	.And. SF2->(FieldPos("F2_RECFAUT")) > 0 	
	SF2->F2_RECFAUT    := SC5->C5_RECFAUT
ENdif
If  SC5->(FieldPos("C5_NFSUBST")) > 0	.And. SF2->(FieldPos("F2_NFSUBST")) > 0 	
	SF2->F2_NFSUBST    := SC5->C5_NFSUBST
ENdif
If  SC5->(FieldPos("C5_SERSUBS")) > 0	.And. SF2->(FieldPos("F2_SERSUBS")) > 0 	
	SF2->F2_SERSUBS    := SC5->C5_SERSUBS
ENdif
If  SF2->(FieldPos("F2_MENNOTA")) > 0
	SF2->F2_MENNOTA  := SC5->C5_MENNOTA
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁPonto de Entrada Padrao                                                 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( ExistBlock("M461LSF2") )
	ExecBlock("M461LSF2",.F.,.F.)
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁGravacao dos vendedores                                                 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
cVendedor := "1"
For nCntFor := 1 To nMaxVend
	FieldPut(FieldPos("F2_VEND"+cVendedor),SC5->(FieldGet(FieldPos("C5_VEND"+cVendedor))))
	If SC5->(FieldPos("C5_CODRL"+cVendedor))>0
		FieldPut(FieldPos("F2_CODRL"+cVendedor),SC5->(FieldGet(FieldPos("C5_CODRL"+cVendedor))))
	EndIf
	cVendedor := Soma1(cVendedor,1)
Next nCntFor
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁGravacao dos Volumes/Especie                                            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
For nCntFor := 1 To Len(aEspVol)
	FieldPut(FieldPos("F2_ESPECI"+StrZero(nCntFor,1)),aEspVol[nCntFor,1])
	FieldPut(FieldPos("F2_VOLUME"+StrZero(nCntFor,1)),aEspVol[nCntFor,2])
Next nCntFor

Return( .T. )

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMaNfs2Fin Ё Autor ЁEduardo Riera          Ё Data Ё29.08.1999Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁGravacao dos Dados Financeiros                              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpL1: .T.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpA1: Array aTitulo                                        Ё╠╠
╠╠Ё          Ё       [1] Valor do Titulo                                  Ё╠╠
╠╠Ё          Ё       [2] Valor do IRF                                     Ё╠╠
╠╠Ё          Ё       [3] Valor do INSS                                    Ё╠╠
╠╠Ё          Ё       [4] Valor do ISS                                     Ё╠╠
╠╠Ё          Ё       [5] Valor do PIS                                     Ё╠╠
╠╠Ё          Ё       [6] Valor do CSLL                                    Ё╠╠
╠╠Ё          Ё       [7] Valor do COFINS                                  Ё╠╠
╠╠Ё          Ё       [8] Valor do IPI                                     Ё╠╠
╠╠Ё          Ё       [9] Valor do Solidario                               Ё╠╠
╠╠Ё          ЁExpN2: Moeda do Titulo                                      Ё╠╠
╠╠Ё          ЁExpC3: Codigo do Banco                                      Ё╠╠
╠╠Ё          ЁExpC4: Numero do Pedido                                     Ё╠╠
╠╠Ё          ЁExpB5: Code block para complemento de atualizacao dos titu- Ё╠╠
╠╠Ё          Ё       los financeiros.                                     Ё╠╠
╠╠Ё          ЁExpA6: Array contendo o contrato (GCT) relacionado pelo     Ё╠╠
╠╠Ё          Ё       pedido de contrato                                   Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function MaNfs2Fin(aTitulo,nMoeda,cBanco,cPedido,bAtuFin,lCtbOnLine,cFornISS,cRecISS, cB1M996,cB1FRETISS,aContrato,aMedicao,aRecSE1Adt,dDataMoe)

Local aVencto   := {}
Local aImposto  := {}
Local aImpOut   := {}    
Local aProp     := {}
Local aRecSe1   := {}
Local aRecSe2   := {}
Local aRecNDF   := {}
Local aCtbRet   := {0,0,0}

Local dDataCnd  := SF2->F2_EMISSAO

Local cMoedaTit := SuperGetMv("MV_MOEDTIT")
Local cVendedor := 0
Local cConteudo := ""
Local cParcela  := ""
Local cAliasSE2 := "SE2"   
Local cPrefOri  := ""
Local cNumOri   := ""
Local cParcOri  := ""
Local cTipoOri  := ""
Local cCfOri    := ""
Local cLojaOri  := ""
Local cTipoData := GetNewPar( "MV_TD10925", "1" ) 
Local cAplVlMn	:= "1"
Local cAlIssB1  := GetNewPar("MV_ALISSB1","")

Local lf440Com  := aEntry[EP_F440COM]
Local lM460IREN := aEntry[EP_M460IREN]
Local lAbate    := .F. 
Local lComissao := SuperGetMv("MV_TPCOMIS")=="O"
Local lTemVend  := .F.
Local lCompensa := SuperGetMv("MV_CMPDEVC",.F.,.F.)	//Compensar automatica dev. Compras
Local lQuery    := .F.

Local nPerJur   := SuperGetMv("MV_TXPER")
Local nDecE1Vlr := TamSX3( "E1_VALOR"  )[2]
Local nDecE1Vlc := TamSX3( "E1_VLCRUZ" )[2]
Local nVendedor := 0
Local nVlrParc  := 0
Local nVlrMoed1 := 0
Local nTotMoeda := 0
Local nTotMoed1 := 0
Local nVlrAcum1 := 0
Local nVlrAcum2 := 0
Local nTotalDev := 0
Local nCntFor   := 0
Local cImposto  := "0000000"
Local nImpISS   := 0
Local nImpIRRF  := 0
Local nImpINSS  := 0
Local nImpCSLL  := 0
Local nImpCOF   := 0
Local nImpPIS   := 0
Local nImpFet   := 0
Local nImpFab   := 0
Local nImpFac   := 0
Local nMaxVend  := Fa440CntVen()
Local nAbtISS   := 0              
Local nFatorParc:= 0 
Local nValTot   := 0
Local nBasePis  := MaFisRet(,"NF_BASEPIS")
Local nBaseCof  := MaFisRet(,"NF_BASECOF")
Local nBaseCsl  := MaFisRet(,"NF_BASECSL")
Local nBaseIns  := MaFisRet(,"NF_BASEINS")
Local nBaseIrf  := MaFisRet(,"NF_BASEIRR") 
Local nSaldoPis := nBasePis
Local nSaldoCof := nBaseCof
Local nSaldoCsl := nBaseCsl
Local nSaldoIns := nBaseIns
Local nSaldoIrf := nBaseIrf
Local nSaldoProp:= 0
Local nProp     := 0
Local nRetParISS:= 0

Local dIniMes   := FirstDay( dDataBase ) 
Local dFimMes   := LastDay( dDataBase ) 
Local nValMinRet:= GetNewPar( "MV_VL10925", 0 ) 
Local cModRet   := GetNewPar( "MV_AB10925", "0" )
Local aAcumulMes:= {} 
Local aRecnos   := {} 
Local aDadosRet := {}

Local cAnoMes := ""
				
Local nVlRetPIS := 0
Local nVlRetCOF := 0
Local nVlRetCSLL:= 0
Local nTotARet  := 0
Local nSobra    := 0
Local nFatorRed := 0
Local nLoop     := 0
Local nScanMes  := 0
Local nX        := 0
Local lContrAbt := !Empty( SE1->( FieldPos( "E1_SABTPIS" ) ) ) .And. !Empty( SE1->( FieldPos( "E1_SABTCOF" ) ) ) .And. ; 
				 !Empty( SE1->( FieldPos( "E1_SABTCSL" ) ) ) 
Local lGerAbtISS:= ( GetNewPar("MV_TPABISS","1")=="2" ) 				 
Local lFethab	:= (SE1->(FieldPos("E1_FETHAB")) > 0) 
Local lFabov    := (SE1->(FieldPos("E1_FABOV")) > 0) 
Local lFacs     := (SE1->(FieldPos("E1_FACS")) > 0) 
				 
Local cRetCli   := "1" 				 
Local lCondVenda := .F.

Local cA1M996		:=	""
Local cMV_A1M996	:=	GetNewPar ("MV_A1M996", "")
Local cTipoParc     := ""
Local cA1FRETISS	:=	""

#IFDEF TOP
	Local aStruSE2  := {}
	Local cQuery    := ""
#ENDIF

Local lBaseImp  := ( SuperGetMv("MV_BS10925",.F.,"1") == "1")
Local nBasePCC	:=	Iif(nBasePis==0,Iif(nBaseCof==0,Iif(nBaseCsl==0,0,nBaseCsl),nBaseCof),nBasePis)
Local aTitCndVnd	:= {}
Local lAtuSldNat:= FindFunction("AtuSldNat") .AND. AliasInDic("FIV") .AND. AliasInDic("FIW")
Local cNatureza := IIF(SC5->(FieldPos("C5_NATUREZ"))>0 .And. !Empty(SC5->C5_NATUREZ), SC5->C5_NATUREZ, Nil)

Private nValFun := SF2->F2_CONTSOC

//Gestao de Contratos
Default aContrato := {}
Default aMedicao  := {}

DEFAULT cPedido := ""
DEFAULT bAtuFin := {|| .T.}         
DEFAULT cFornISS:= ""
DEFAULT cRecISS := SA1->A1_RECISS

Default cB1M996	:=	""
Default cB1FRETISS :=  ""
//

Default aRecSE1Adt := Array(0)
Default dDataMoe := dDataBase


If Empty(dDataMoe)
	dDataMoe := dDatabase
Endif

If (SA1->(FieldPos (cMV_A1M996))>0)		//Campo da tabela SE1 identifica fornecimento de (1) bens e Servicos contratados por pessoa juridica de direito publico ou (2 ou '') identifica que Nao.
	cA1M996	:=	SA1->(FieldGet (FieldPos (cMV_A1M996)))
EndIf	
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁAtendimento ao DECRETO 5.052, DE 08/01/2004 para o municipio de ARARAS. Ё
//ЁMais especificamente o paragrafo unico do Art 2.                        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If (SA1->(FieldPos ("A1_FRETISS"))>0)
	cA1FRETISS	:=	SA1->(FieldGet (FieldPos ("A1_FRETISS")))
EndIf

If lContrAbt
	If SA1->(FieldPos("A1_ABATIMP")) > 0 
		cRetCli := Iif(Empty(SA1->A1_ABATIMP),"1",SA1->A1_ABATIMP) 		
	Endif
Endif		
    
//tratamento para empresa publica. deve ser feito a retencao sem verificar o valor minimo      
If SA1->(FieldPos("A1_RECCSLL")) > 0 .And. SA1->(FieldPos("A1_RECCOFI")) > 0 .And. SA1->(FieldPos("A1_RECPIS")) > 0
    If ("1"$cA1M996) .And. (SA1->A1_RECCSLL == "P" .Or. SA1->A1_RECCOFI == "P" .Or. SA1->A1_RECPIS == "P") 
        nValMinRet := 0
    EndIf
Endif

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁIndica se o tratamento de valor minimo para retencao (R$ 5.000,00) deve ser aplicado:Ё
//ЁControle pela variavel cAplVlMn, onde :                                              Ё
//Ё1 = Aplica o valor minimo                                                            Ё
//Ё2 = Nao aplica o valor minimo                                                        Ё
//ЁQuando o tratamento da retencao for pela emissao, sera forcada a retencao em cada    Ё
//Ёmovimento. Quando o tratamento da retencao for pela baixa, o financeiro ira usar o   Ё
//Ёcampo E1_APLVLMN para identificar se utilizara ou nao o valor minimo para retencao.  Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If MaFisRet(,"NF_PIS252") > 0 .Or. MaFisRet(,"NF_COF252") > 0 
	cModRet 	:= "1"
	cAplVlMn	:= "2"
	cRetCli		:= "2"
Endif
If ( aEntry[EP_M460MOED] )
	cMoedaTit := ExecBlock("M460MOED", .F., .F.,cMoedaTit)
EndIf

nMoeda := If(cMoedaTit=="S",nMoeda,1)

If ( aEntry[EP_M460COND] )
	dDataCnd := ExecBlock("M460COND", .F., .F.,{dDataCnd})
EndIf

If lGerAbtISS .And. cRecISS == "2"
	lGerAbtISS := .F.
EndIf	
If ( SF2->F2_TIPO == "D" )
	//зддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Gera Titulo Credito ao Fornecedor                 Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддды
	//ADupCred(aTitulo[_VLRTIT_],"501")
	If aTitulo[_MOEDANDF_]<=0
		Aadd(aRecNDF,ADupCred(aTitulo[_VLRTIT_],"501",nMoeda/*nMoeda*/,cNatureza,/*nTaxaNCC*/))
	Else
		Aadd(aRecNDF,ADupCred(xMoeda(aTitulo[_VLRTIT_],1,aTitulo[_MOEDANDF_],dDataMoe,,,aTitulo[_TAXANDF_])+aTitulo[_VLRTITDIF_],"501",aTitulo[_MOEDANDF_]/*nMoeda*/,cNatureza,aTitulo[_TAXANDF_]/*nTaxaNCC*/))
	EndIf
	If lCompensa  //Compensacao automatica do titulo

		dbSelectArea("SE2")
		dbSetOrder(6)
		#IFDEF TOP
			lQuery		:= .T.
			aStruSE2		:= SE2->(dbStruct())
			cAliasSE2	:= "A461DEV"
			cQuery		:= "SELECT SE2.E2_FILIAL, SE2.E2_SALDO ,SE2.E2_FORNECE, SE2.E2_LOJA, SE2.E2_NUMBOR ,"
			cQuery		+= " SE2.E2_PREFIXO, SE2.E2_NUM, SE2.E2_TIPO,SE2.E2_MOEDA, SE2.R_E_C_N_O_ SE2RECNO ,"
			cQuery		+= " SD2.D2_FILIAL,SD2.D2_DOC,SD2.D2_SERIE,SD2.D2_ITEM,SD2.D2_COD,"
			cQuery		+= " SD2.D2_PEDIDO,SD2.D2_ITEMPV,SD2.D2_CLIENTE,SD2.D2_LOJA "	
			cQuery		+= " FROM "+RetSqlName("SE2")+" SE2 " 
			cQuery		+= " JOIN "+RetSqlName("SD2")+" SD2 ON SD2.D2_PEDIDO ='"+cPedido+"' AND SE2.E2_NUM = SD2.D2_NFORI AND SE2.E2_PREFIXO = SD2.D2_SERIORI AND SD2.D_E_L_E_T_ = ' ' "  	
			cQuery		+= " WHERE SE2.E2_FILIAL='"+xFilial("SE2")+"' AND "   
			cQuery		+= " SE2.E2_TIPO='NF ' AND "
			cQuery		+=	" SE2.E2_FORNECE = '" + SF1->F1_FORNECE + "' AND "
			cQuery		+= " SE2.E2_LOJA = '" + SF1->F1_LOJA + "' AND "
			cQuery		+= " SE2.D_E_L_E_T_=' ' "
			cQuery		+= " ORDER BY "+SqlOrder(SE2->(IndexKey()))
			
			cQuery := ChangeQuery(cQuery)

			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSE2,.T.,.T.)
			For nX := 1 To Len(aStruSE2)
				If aStruSE2[nX][2]<>"C"
					TcSetField(cAliasSE2,aStruSE2[nX][1],aStruSE2[nX][2],aStruSE2[nX][3],aStruSE2[nX][4])
				EndIf
			Next nX
			
			While !Eof()
				If Empty((cAliasSE2)->E2_NUMBOR)
					If !SuperGetMv("MV_CHECKNF",.F.,.F.)
						aadd(aRecSE2,If(lQuery,(cAliasSE2)->SE2RECNO,(cAliasSE2)->(RecNo())))
						nTotalDev += xMoeda((cAliasSE2)->E2_SALDO,(cAliasSE2)->E2_MOEDA,1)
					EndIf
				EndIf
				dbSelectArea(cAliasSE2)
				dbSkip()
			EndDo			
		#ELSE
			MsSeek(xFilial("SE2")+SF2->F2_CLIENTE+SF2->F2_LOJA+SD2->D2_SERIORI+SD2->D2_NFORI)
	
			While !Eof() .And. xFilial("SE2") == (cAliasSE2)->E2_FILIAL .And.;
				SF2->F2_CLIENTE == (cAliasSE2)->E2_FORNECE .And.;
				SF2->F2_LOJA == (cAliasSE2)->E2_LOJA .And.;
				SD2->D2_SERIORI == (cAliasSE2)->E2_PREFIXO .And.;
				SD2->D2_NFORI == (cAliasSE2)->E2_NUM
				If (cAliasSE2)->E2_TIPO == "NF " .And. Empty((cAliasSE2)->E2_NUMBOR)
					If !SuperGetMv("MV_CHECKNF",.F.,.F.)
						aadd(aRecSE2,If(lQuery,(cAliasSE2)->SE2RECNO,(cAliasSE2)->(RecNo())))
						nTotalDev += xMoeda((cAliasSE2)->E2_SALDO,(cAliasSE2)->E2_MOEDA,1)
					EndIf
				EndIf
				dbSelectArea(cAliasSE2)
				dbSkip()
			EndDo   
		#ENDIF

		//Compensacao automatica do titulo
		MaIntBxCP(2,aRecSe2,,aRecNDF,,{lCtbOnLine,.F.,.F.,.F.,.F.,.F.}) 
		
		If lQuery
			dbSelectArea(cAliasSE2)
			dbCloseArea()
			dbSelectArea("SE2")
		EndIf
	EndIf

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁAtualiza o SF2                                                          Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If !InTransact()
		RecLock("SF2")
	EndIf
	SF2->F2_PREFIXO:= SE2->E2_PREFIXO
	SF2->F2_DUPL   := SF2->F2_DOC
Else
	If !(SF2->F2_TIPO$"B")
	
		//
		// Template GEM - Gestao de Empreendimentos Imobiliarios
		//
		// Verifica se a condicao de pagamento tem vinculacao com uma condicao de venda
		//
		If ExistTemplate("GMCondPagto") .And. HasTemplate("LOT")
			lCondVenda := ExecTemplate("GMCondPagto",.F.,.F.,{SF2->F2_COND,} )
			If ValType(lCondVenda) # "L"
				lCondVenda := .F.
			EndIf
		EndIf                   
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Verifica o numero de parcelas dos impostos                             Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		// Se Cond.Pagto tipo 9, moeda 2 e MV_MOEDTIT = "S", passa valor em Moeda 2 para nao
		// dar problema de arredondamento.
		If SE4->E4_TIPO == "9" .And. nMoeda <> 1 .And. cMoedaTit == "S"
			aVencto := Condicao(xMoeda(aTitulo[_VLRTIT_],1,nMoeda,dDataMoe),SF2->F2_COND,aTitulo[_VLRIPI_],dDataCnd,aTitulo[_VLRSOL_],,,aTitulo[_VLRACR_])
		Else
			aVencto := Condicao(aTitulo[_VLRTIT_],SF2->F2_COND,aTitulo[_VLRIPI_],dDataCnd,aTitulo[_VLRSOL_],,,aTitulo[_VLRACR_])			
		EndIf
		//
		// Template GEM - Gestao de Empreendimentos Imobiliarios
		//
		If ExistBlock("GMMA410Dupl")
			aVencto := ExecBlock("GMMA410Dupl",.F.,.F.,{cPedido ,SF2->F2_COND,dDataCnd,,aTitulo[_VLRTIT_],aVencto}, .F., .F.)
		Else
			If ExistTemplate("GMMA410Dupl")
				aVencto := ExecTemplate("GMMA410Dupl",.F.,.F.,{cPedido ,SF2->F2_COND,dDataCnd,,aTitulo[_VLRTIT_],aVencto}) 
			EndIf
		Endif	
		
		cImposto := GetNewPar("MV_RTIPESP",cImposto)
		
		If GetNewPar("MV_RTIPFIN",.F.)
			If(SubStr(cImposto,1,1)$"01",nImpISS:=Len(aVencto),nImpISS:=1)
			If(SubStr(cImposto,2,1)$"01",nImpIRRF:=Len(aVencto),nImpIRRF:=1)
			If(SubStr(cImposto,3,1)$"01",nImpINSS:=Len(aVencto),nImpINSS:=1)
			If(SubStr(cImposto,4,1)$"01",nImpCSLL:=Len(aVencto),nImpCSLL:=1)
			If(SubStr(cImposto,5,1)$"01",nImpCOF:=Len(aVencto),nImpCOF:=1)
			If(SubStr(cImposto,6,1)$"01",nImpPIS:=Len(aVencto),nImpPIS:=1)
			If(SubStr(cImposto,7,1)$"01",nImpFet:=Len(aVencto),nImpFet:=1)			
			If(SubStr(cImposto,8,1)$"01",nImpFab:=Len(aVencto),nImpFab:=1)
			If(SubStr(cImposto,9,1)$"01",nImpFac:=Len(aVencto),nImpFac:=1)			
		Else
			If(SubStr(cImposto,1,1)$"02",nImpISS:=1,nImpISS:=Len(aVencto))
			If(SubStr(cImposto,2,1)$"02",nImpIRRF:=1,nImpIRRF:=Len(aVencto))
			If(SubStr(cImposto,3,1)$"02",nImpINSS:=1,nImpINSS:=Len(aVencto))
			If(SubStr(cImposto,4,1)$"02",nImpCSLL:=1,nImpCSLL:=Len(aVencto))
			If(SubStr(cImposto,5,1)$"02",nImpCOF:=1,nImpCOF:=Len(aVencto))
			If(SubStr(cImposto,6,1)$"02",nImpPIS:=1,nImpPIS:=Len(aVencto))
			If(SubStr(cImposto,7,1)$"02",nImpFet:=1,nImpFet:=Len(aVencto))			
			If(SubStr(cImposto,8,1)$"02",nImpFab:=1,nImpFab:=Len(aVencto))			
			If(SubStr(cImposto,9,1)$"02",nImpFac:=1,nImpFac:=Len(aVencto))									
		EndIf

		If nImpISS == 1 .And. !(SF2->F2_TIPO$"DB") .And. cRecISS =="1" .And. SuperGetMV("MV_DESCISS") .And. Len(aVencto) > 1 .And. !lGerAbtISS
			nAbtISS := aTitulo[_VLRISS_]
		EndIf
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Aplica a condicao de pagamento                                         Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If nAbtISS != 0
			aVencto := Condicao(aTitulo[_VLRTIT_]+nAbtISS,SF2->F2_COND,aTitulo[_VLRIPI_],dDataCnd,aTitulo[_VLRSOL_],,,aTitulo[_VLRACR_])
			//
			// Template GEM - Gestao de Empreendimentos Imobiliarios
			//
			If ExistBlock("GMMA410Dupl")
				aVencto := ExecBlock("GMMA410Dupl",.F.,.F.,{cPedido ,SF2->F2_COND,dDataCnd,,aTitulo[_VLRTIT_]+nAbtISS,aVencto}, .F., .F.) 
			Else
				If ExistTemplate("GMMA410Dupl")
					aVencto := ExecTemplate("GMMA410Dupl",.F.,.F.,{cPedido ,SF2->F2_COND,dDataCnd,,aTitulo[_VLRTIT_]+nAbtISS,aVencto}) 
				EndIf
			Endif	
		EndIf
		nTotMoed1  := aTitulo[_VLRTIT_]
      //-- CRT - Conhecimento Transporte Internacional - Valor estА em dolar.
		If nModulo == 43 .And. nMoeda <> 1 
			nTotMoed1:= Round(NoRound(xMoeda(aTitulo[_VLRTIT_],nMoeda,1,dDataMoe,3),3),2)
		EndIf
		
		If nMoeda <> 1
			If nModulo == 43
				nTotMoeda  := aTitulo[_VLRTIT_]
			Else
				nTotMoeda  := xMoeda(aTitulo[_VLRTIT_],1,nMoeda,dDataMoe)+aTitulo[_VLRTITDIF_]
			EndIf	
		Else		
			nTotMoeda  := xMoeda(aTitulo[_VLRTIT_],1,nMoeda,dDataMoe)
		EndIf

		If ExistBlock("ME4_COND")
			aVencto := Condicao(aTitulo[_VLRTIT_]+nAbtISS,SF2->F2_COND,SF2->F2_VALIPI,dDataCnd,SF2->F2_ICMSRET,,ExecBlock("ME4_COND",.F.,.F.),aTitulo[_VLRACR_])
			//
			// Template GEM - Gestao de Empreendimentos Imobiliarios
			//
			If ExistBlock("GMMA410Dupl")
				aVencto := ExecBlock("GMMA410Dupl",.F.,.F.,{cPedido ,SF2->F2_COND,dDataCnd,,aTitulo[_VLRTIT_]+nAbtISS,aVencto}, .F., .F.) 
			Else
				If ExistTemplate("GMMA410Dupl")
					aVencto := ExecTemplate("GMMA410Dupl",.F.,.F.,{cPedido ,SF2->F2_COND,dDataCnd,,aTitulo[_VLRTIT_]+nAbtISS,aVencto}) 
				EndIf
			Endif	
		EndIf
		If ExistBlock("MT461VCT")
			aVencto := ExecBlock("MT461VCT",.F.,.F.,{aVencto,aTitulo})
		EndIf
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Verifica a primeira parcela                                            Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If ( Len(aVencto) > 1 )
			cParcela := SuperGetMv("MV_1DUP")
		EndIf
		If ExistBlock("M4601DUP")
			cParcela := ExecBlock("M4601DUP",.F.,.F.,{cParcela})
		EndIf	
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Verifica os impostos a serem gravados                                  Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		aImposto := {{0,0},;
			{aTitulo[_VLRIRRF_],0},;
			{aTitulo[_VLRINSS_],0},;
			{aTitulo[_VLRISS_],0},;
			{aTitulo[_VLRPIS_],0},;				
			{aTitulo[_VLRCSLL_],0},;
			{aTitulo[_VLRCOFI_],0},;
			{aTitulo[_VLRFET_],0},;
			{aTitulo[_VLRFAB_],0},;
			{aTitulo[_VLRFAC_],0},;
			{0,0},{0,0},{0,0},{0,0},;
			{0,0},{0,0},{0,0},{0,0},;
			{0,0},{0,0},{0,0},;
			{aTitulo[_VLRTPDP_],0}}
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Atualizacao das parcelas do contas a receber                           Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		dbSelectArea("SE1")                                
		
		If cModRet == "1" .And. lContrAbt
			
			nAbtISSAnt := nAbtISS
			
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//|FOR SOMENTE PARA DETERMINAR O VALOR A SER COMPARADO COM O MV_VL10925	   |
			//|                                                                        |
			//Ё Obtem os totais por mes antes de processar                             Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			For nCntFor := 1 To Len(aVencto)
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁCalculo valor acumulado do MES de acordo com a definicao do parametro Ё
				//Ё  MV_RTIPFIN que determina em qual parcela deverah haver a retencao.  Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If !(nImpCSLL==nCntFor .And. nImpCOF==nCntFor .And. nImpPIS==nCntFor)
					Loop
				EndIf
				
				If lBaseImp .And. nBasePCC>0
					nVlrParc  := nVlrMoed1 := NoRound( xMoeda((nBasePCC/Len(aVencto)),1,nMoeda,dDataMoe), nDecE1Vlr )
				Else
					nVlrParc  := NoRound( xMoeda(aVencto[nCntFor][2]-nAbtISSAnt,1,nMoeda,dDataMoe), nDecE1Vlr )
					nVlrMoed1 := NoRound( aVencto[nCntFor][2]-nAbtISSAnt, nDecE1Vlc )
				EndIf
				
				If nCntFor == 1
					nAbtISSAnt := 0
				EndIf
				
				nVlrAcum1 += nVlrParc
				nVlrAcum2 += nVlrMoed1
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁNa Ultima Parcela acerta as diferenca de centavo                        Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If ( Len(aVencto)==nCntFor ) .AND. ! lCondVenda
					If lBaseImp .And. nBasePCC>0
						nVlrParc += nBasePCC - nVlrAcum1
						nVlrMoed1+= nBasePCC  - nVlrAcum2
					Else
						nVlrParc += nTotMoeda - nVlrAcum1
						nVlrMoed1+= nTotMoed1  - nVlrAcum2
					EndIf
				EndIf
				
				cAnoMes := Left( DToS( DataValida( aVencto[nCntFor,1],.T.) ), 6 )
				
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Alimenta os acumulados por Ano / Mes                                                     Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If Empty( nScanMes := AScan( aAcumulMes, { |x| x[1] == cAnoMes } ) )
					AAdd( aAcumulMes, { cAnoMes, 0 } )
					nScanMes := Len( aAcumulMes )
				EndIf
				
				aAcumulMes[ nScanMes, 2 ] += nVlrParc
				
			Next nCntFor
			
		EndIf

		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Calcula a proporcao da parcelaa do PIS,COFINS e CSLL                   Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		nValPis := 0
		nValCof := 0
		nValCsl := 0
		
		For nX := 1 to Len(aVencto)
			nValTot += aVencto[nX][2]
		Next
	                        
		aProp := {} 
	        
		nSaldoProp := 1 
	
		For nX := 1 to Len(aVencto) 
			If nX == Len(aVencto)  
				nProp := nSaldoProp
			Else 			
				nProp := Round(aVencto[nX][2] / nValTot,6)
				nSaldoProp -= nProp
			EndIf	
		   AAdd( aProp, nProp )
		Next nX
		
		//
		// Template GEM - Gestao de Empreendimentos Imobiliarios
		//
		// Verifica se a condicao de pagamento tem vinculacao com uma condicao de venda
		//
		If ExistTemplate("GEMMA461") .And. HasTemplate("LOT")
			aTitCndVnd := ExecTemplate("GEMMA461",.F.,.F.,{cPedido ,SF2->F2_COND ,dDataCnd ,aTitulo[_VLRTIT_]+nAbtISS }) 
		EndIf
		
		nVlrAcum1 := 0
		nVlrAcum2 := 0
		
		nVlrParc  := 0
		nVlrMoed1 := 0
				
		For nCntFor := 1 To Len(aVencto)
		
			//
			// Tipo de parcela = E1_TIPO
			//
			cTipoParc := MVNOTAFIS
			
			//
			// Template GEM - Gestao de empreendimentos imobiliarios
			// Condicao de pagto com condicao de venda
			//
			If ExistTemplate("GEMTipTit")
				cTipoParc := ExecTemplate("GEMTipTit",.F.,.F.,{cTipoParc,aVencto[nCntFor][1],SF2->F2_COND})
			EndIf                                  
			
			//-- SIGATMS = Retorna Tipo do Titulo (E1_TIPO) com base no parametro MV_TMSTIPT
			If IntTms() .And. nModulo==43 .And. FindFunction("TmsTpTit")
				TmsTpTit(@cTipoParc)				
			EndIf
	
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Calcula a proporcao da parcela em relacao ao total de duplicatas       Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			nFatorParc := ( aVencto[nCntFor][2]-nAbtISS ) / ( aTitulo[_VLRTIT_]+nAbtISS )

			// Se Cond.Pagto tipo 9, moeda 2 e MV_MOEDTIT = "S", array a Vencto ja esta em Moeda 2,
			// e nao precisa converter.
			If (SE4->E4_TIPO == "9" .Or. nModulo == 43) .And. nMoeda <> 1 .And. cMoedaTit == "S"
				nVlrParc := NoRound( aVencto[nCntFor][2]-nAbtISS, nDecE1Vlr )
				// Valor em moeda 1 que devera ser gravado no campo E1_VLCRUZ
				nVlrMoed1:= NoRound( xMoeda(aVencto[nCntFor][2]-nAbtISS,nMoeda,1,dDataMoe), nDecE1Vlc )				
			Else
				nVlrParc := NoRound( xMoeda(aVencto[nCntFor][2]-nAbtISS,1,nMoeda,dDataMoe), nDecE1Vlr ) 
				nVlrMoed1:= NoRound( aVencto[nCntFor][2]-nAbtISS, nDecE1Vlc )				
			EndIf
			
			If nCntFor == 1
				nAbtISS := 0
			EndIf

			nVlrAcum1 += nVlrParc
			nVlrAcum2 += nVlrMoed1
			
			If ! lCondVenda 
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁNa Ultima Parcela acerta as diferenca de centavo                        Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If ( Len(aVencto)==nCntFor )
					nVlrParc += nTotMoeda - nVlrAcum1
					nVlrMoed1+= nTotMoed1  - nVlrAcum2
				EndIf
			EndIf

			RecLock("SE1",.T.)
			If SE1->(FieldPos ("E1_SCORGP"))>0		//Campo da tabela SE1 identifica fornecimento de (1) bens e Servicos contratados por pessoa juridica de direito publico ou (2 ou '') identifica que Nao.
				If ("1"$cA1M996) .And. ("1"$cB1M996)
					SE1->E1_SCORGP	:=	"1"
				EndIf
			EndIf
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁAtendimento ao DECRETO 5.052, DE 08/01/2004 para o municipio de ARARAS. Ё
			//ЁMais especificamente o paragrafo unico do Art 2.                        Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If SE1->(FieldPos ("E1_FRETISS"))>0
				If ("2"$cA1FRETISS) .And. ("2"$cB1FRETISS)
					SE1->E1_FRETISS	:=	"2"
				Else
					SE1->E1_FRETISS	:=	"1"
				EndIf
			EndIf
			// Tratamento para a cidade de Cascavel-PR Decreto n.╨ 8.230
			If (SF4->(FieldPos ("F4_FRETISS"))>0) .And. (SE1->(FieldPos ("E1_VLMINIS"))>0) 
				SE1->E1_VLMINIS	:=	SF4->(FieldGet (FieldPos ("F4_FRETISS")))
			EndIf
			//
			SE1->E1_FILIAL := xFilial("SE1")
			SE1->E1_PREFIXO:= &(SuperGetMv("MV_1DUPREF"))
			SE1->E1_NUM    := SF2->F2_DOC
			SE1->E1_PARCELA:= cParcela

			SE1->E1_TIPO   := cTipoParc 

			SE1->E1_CLIENTE:= SF2->F2_CLIENTE
			SE1->E1_LOJA   := SF2->F2_LOJA
			SE1->E1_SERIE  := SF2->F2_SERIE
			SE1->E1_PEDIDO := cPedido
			SE1->E1_NOMCLI := If(Empty(SA1->A1_NREDUZ),SA1->A1_NOME,SA1->A1_NREDUZ)
			SE1->E1_EMISSAO:= SF2->F2_EMISSAO
			SE1->E1_VALOR  := nVlrParc
			SE1->E1_SALDO  := SE1->E1_VALOR
			SE1->E1_VLCRUZ := nVlrMoed1
			SE1->E1_LA     := "S"
			SE1->E1_SITUACA:= "0"
			SE1->E1_MOEDA  := nMoeda
			SE1->E1_EMIS1  := dDataBase
			SE1->E1_VENCTO := aVencto[nCntFor][1]
			SE1->E1_VENCORI:= SE1->E1_VENCTO
			SE1->E1_VENCREA:= DataValida(SE1->E1_VENCTO,.T.)
			SE1->E1_STATUS := "A"
			SE1->E1_PORCJUR:= nPerJur
			SE1->E1_VALJUR := Round(SE1->E1_VALOR * (SE1->E1_PORCJUR / 100),2)
			SE1->E1_OCORREN:= CriaVar("E1_OCORREN")
			SE1->E1_DESCFIN:= SE4->E4_DESCFIN
			SE1->E1_DIADESC:= SE4->E4_DIADESC
			If SE1->(FieldPos("E1_FORNISS"))<>0
				SE1->E1_FORNISS:= cFornISS
			EndIf
			SE1->E1_NATUREZ:= &(SuperGetMv("MV_1DUPNAT"))

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁRecalcula os impostos com base na natureza do parametro                 Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If SE1->E1_NATUREZ <> MaFisRet(,"NF_NATUREZA")
				MaFisAlt("NF_NATUREZA",SE1->E1_NATUREZ)
				aTitulo[_VLRIRRF_] := MaFisRet(,"NF_VALIRR")
				aTitulo[_VLRINSS_] := MaFisRet(,"NF_VALINS")
				aTitulo[_VLRINSS_] := MaFisRet(,"NF_VALINA")
				aTitulo[_VLRISS_]  := IIf(cRecISS=="1", MaFisRet(,"NF_VALISS"), 0)
				aTitulo[_VLRPIS_]  := MaFisRet(,"NF_VALPIS")
				aTitulo[_VLRCSLL_] := MaFisRet(,"NF_VALCSL")
				aTitulo[_VLRCOFI_] := MaFisRet(,"NF_VALCOF")
				aTitulo[_VLRFET_]  := MaFisRet(,"NF_VALFET")				
				aTitulo[_VLRFAB_]  := MaFisRet(,"NF_VALFAB") 				
				aTitulo[_VLRFAC_]  := MaFisRet(,"NF_VALFAC")
				//aTitulo[_VLRTPDP_] := MaFisRet(,"NF_VALTPDP")   							
				aImposto := {{0,0},;
					{aTitulo[_VLRIRRF_],0},;
					{aTitulo[_VLRINSS_],0},;
					{aTitulo[_VLRISS_],0},;
					{aTitulo[_VLRPIS_],0},;
					{aTitulo[_VLRCSLL_],0},;
					{aTitulo[_VLRCOFI_],0},;
					{aTitulo[_VLRFET_],0},;
					{aTitulo[_VLRFAB_],0},;
					{aTitulo[_VLRFAC_],0},;
					{0,0},{0,0},{0,0},{0,0},;
					{0,0},{0,0},{0,0},{0,0},;
					{0,0},{0,0},{0,0},;
					{aTitulo[_VLRTPDP_],0}}
			EndIf
			dbSelectArea("SED")
			dbSetOrder(1)
			MsSeek(xFilial("SED")+SE1->E1_NATUREZ)            
			
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁOs Impostos sao calculados apena na primeira parcela                    Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If SED->ED_CALCISS=="S"
			
				If nImpISS == 1 
					SE1->E1_ISS := NoRound(aImposto[_VLRISS_][1],2)
				Else					
					SE1->E1_ISS := NoRound(aImposto[_VLRISS_][1]*nFatorParc,2)
				EndIf 					
					
				aImposto[_VLRISS_][2] += SE1->E1_ISS
				If nCntFor == nImpISS
					SE1->E1_ISS += aImposto[_VLRISS_][1]-aImposto[_VLRISS_][2]
					//Tratamento para alМquotas parciais de retenГЦo ISS -> Campo da tabela SB1 no parБmetro MV_ALISSB1
					If SB1->(FieldPos(cAlIssB1)) > 0
						If SB1->&(cAlIssB1) > 0
							nRetParISS  := SFT->FT_VALCONT * SB1->&(cAlIssB1) / 100
							SE1->E1_ISS := SE1->E1_ISS - nRetParISS
						Endif
					Endif
					//
					aImposto[_VLRISS_][1] := 0
					aImposto[_VLRISS_][2] := 0
				EndIf
			EndIf                 
			
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁEfetua o calculo do IRRF                                                Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If nImpIRRF == 1 
				SE1->E1_IRRF := NoRound(aImposto[_VLRIRRF_][1],2)
			Else 	
				SE1->E1_IRRF := NoRound(aImposto[_VLRIRRF_][1]*nFatorParc,2)
			EndIf 					
			
			If SE1->(FieldPos("E1_BASEIRF")) > 0                    
				If nCntFor == Len(aVencto)
					SE1->E1_BASEIRF := nSaldoIrf
				Else
					SE1->E1_BASEIRF := nBaseIrf * aProp[nCntFor]
					nSaldoIrf -= SE1->E1_BASEIRF
				Endif	
			Endif
 
			aImposto[_VLRIRRF_][2] += SE1->E1_IRRF
			If nCntFor == nImpIRRF
				SE1->E1_IRRF += aImposto[_VLRIRRF_][1]-aImposto[_VLRIRRF_][2]
				aImposto[_VLRIRRF_][1] := 0
				aImposto[_VLRIRRF_][2] := 0
			EndIf             
			
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁEfetua o calculo do INSS                                                Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If nImpINSS == 1 
				SE1->E1_INSS := NoRound(aImposto[_VLRINSS_][1],2)
			Else 			
				SE1->E1_INSS := NoRound(aImposto[_VLRINSS_][1]*nFatorParc,2)
			EndIf 

			If SE1->(FieldPos("E1_BASEINS")) > 0                    
				If nCntFor == Len(aVencto)
					SE1->E1_BASEINS := nSaldoIns
				Else
					SE1->E1_BASEINS := nBaseIns * aProp[nCntFor]
					nSaldoIns -= SE1->E1_BASEINS
				Endif	
			Endif 

			aImposto[_VLRINSS_][2] += SE1->E1_INSS
			If nCntFor == nImpINSS
				SE1->E1_INSS += aImposto[_VLRINSS_][1]-aImposto[_VLRINSS_][2]
				aImposto[_VLRINSS_][1] := 0
				aImposto[_VLRINSS_][2] := 0
			EndIf                                               
			
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁEfetua o calculo do CSLL                                                Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If nImpCSLL == 1 
				SE1->E1_CSLL := NoRound(aImposto[_VLRCSLL_][1],2)
			Else 
				SE1->E1_CSLL := NoRound(aImposto[_VLRCSLL_][1]*nFatorParc,2)
			EndIf 	

			If SE1->(FieldPos("E1_BASECSL")) > 0                    
				If nCntFor == Len(aVencto)
					SE1->E1_BASECSL := nSaldoCsl
				Else
					SE1->E1_BASECSL := nBaseCsl * aProp[nCntFor]
					nSaldoCsl -= SE1->E1_BASECSL
				Endif	
			Endif
				
			aImposto[_VLRCSLL_][2] += SE1->E1_CSLL
			
			If nCntFor == nImpCSLL
				SE1->E1_CSLL += aImposto[_VLRCSLL_][1]-aImposto[_VLRCSLL_][2]
				aImposto[_VLRCSLL_][1] := 0
				aImposto[_VLRCSLL_][2] := 0
			EndIf    

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁEfetua o calculo do CoFins                                              Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If nImpCof == 1
				SE1->E1_COFINS := NoRound(aImposto[_VLRCOFI_][1],2)
			Else	
				SE1->E1_COFINS := NoRound(aImposto[_VLRCOFI_][1]*nFatorParc,2)
			EndIf 	

			If SE1->(FieldPos("E1_BASECOF")) > 0                    
				If nCntFor == Len(aVencto)
					SE1->E1_BASECOF := nSaldoCof
				Else
					SE1->E1_BASECOF := nBaseCof * aProp[nCntFor]
					nSaldoCof -= SE1->E1_BASECOF
				Endif	
			Endif
				
			aImposto[_VLRCOFI_][2] += SE1->E1_COFINS
			
			If nCntFor == nImpCOF
				SE1->E1_COFINS += aImposto[_VLRCOFI_][1]-aImposto[_VLRCOFI_][2]
				aImposto[_VLRCOFI_][1] := 0
				aImposto[_VLRCOFI_][2] := 0
			EndIf 

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁEfetua o calculo do PIS                                                 Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If nImpPIS == 1 
				SE1->E1_PIS := NoRound(aImposto[_VLRPIS_][1]/nImpPIS,2)
			Else
				SE1->E1_PIS := NoRound(aImposto[_VLRPIS_][1]*nFatorParc,2)				
			EndIf 				

			If SE1->(FieldPos("E1_BASEPIS")) > 0                    
				If nCntFor == Len(aVencto)
					SE1->E1_BASEPIS := nSaldoPis
				Else
					SE1->E1_BASEPIS := nBasePis * aProp[nCntFor]
					nSaldoPis -= SE1->E1_BASEPIS
				Endif	
			Endif
				
			aImposto[_VLRPIS_ ][2] += SE1->E1_PIS
			
			If nCntFor == nImpPIS
				SE1->E1_PIS += aImposto[_VLRPIS_][1]-aImposto[_VLRPIS_][2]
				aImposto[_VLRPIS_][1] := 0
				aImposto[_VLRPIS_][2] := 0
			EndIf				
			
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁEfetua o calculo do imposto Fethab                                      Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If lFethab
				If nImpFet == 1
					SE1->E1_FETHAB := NoRound(aImposto[_IMPFET_][1],2)
				Else	
					SE1->E1_FETHAB := NoRound(aImposto[_IMPFET_][1]*nFatorParc,2)
				EndIf 	
				
				aImposto[_IMPFET_][2] += SE1->E1_FETHAB
				If nCntFor == nImpFet
					SE1->E1_FETHAB += aImposto[_IMPFET_][1]-aImposto[_IMPFET_][2]
					aImposto[_IMPFET_][1] := 0
					aImposto[_IMPFET_][2] := 0
				EndIf 
   	      	Endif

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁEfetua o calculo do imposto Fabov                                       Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If lFabov
				If nImpFab == 1
					SE1->E1_FABOV := NoRound(aImposto[_IMPFAB_][1],2)
				Else
					SE1->E1_FABOV := NoRound(aImposto[_IMPFAB_][1]*nFatorParc,2)
				EndIf
				
				aImposto[_IMPFAB_][2] += SE1->E1_FABOV
				If nCntFor == nImpFab
					SE1->E1_FABOV += aImposto[_IMPFAB_][1]-aImposto[_IMPFAB_][2]
					aImposto[_IMPFAB_][1] := 0
					aImposto[_IMPFAB_][2] := 0
				EndIf
			Endif
			
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁEfetua o calculo do imposto Facs                                        Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If lFacs
				If nImpFac == 1
					SE1->E1_FACS := NoRound(aImposto[_IMPFAC_][1],2)
				Else
					SE1->E1_FACS := NoRound(aImposto[_IMPFAC_][1]*nFatorParc,2)
				EndIf
				
				aImposto[_IMPFAC_][2] += SE1->E1_FACS
				If nCntFor == nImpFac
					SE1->E1_FACS += aImposto[_IMPFAC_][1]-aImposto[_IMPFAC_][2]
					aImposto[_IMPFAC_][1] := 0
					aImposto[_IMPFAC_][2] := 0
				EndIf
			Endif
						
			If lM460IREN
				SE1->E1_IRRF := ExecBlock("M460IREN",.F.,.F.,SE1->E1_IRRF)
			EndIf
			If ( aEntry[EP_M460INSS] )
				SE1->E1_INSS := ExecBlock("M460INSS", .F., .F.,SE1->E1_INSS)
			EndIf
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁEfetua a Gravacao dos Vendedores                                        Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			dbSelectArea("SE1")
			cVendedor := "1"
			lTemVend := .F.
			For nVendedor := 1 To nMaxVend
				cConteudo := SF2->(FieldGet(FieldPos("F2_VEND"+cVendedor)))
				If (!Empty(cConteudo))
					lTemVend := .T.
				EndIf
				FieldPut(FieldPos("E1_VEND"+cVendedor),cConteudo)
				If SE1->(FieldPos("E1_ALEMIS"+cVendedor))<>0
					SA3->(dbSetOrder(1))
					SA3->(MsSeek(xFilial("SA3")+cConteudo))
					FieldPut(FieldPos("E1_ALEMIS"+cVendedor),SA3->A3_ALEMISS)
				EndIf
				If SE1->(FieldPos("E1_ALBAIX"+cVendedor))<>0
					SA3->(dbSetOrder(1))
					SA3->(MsSeek(xFilial("SA3")+cConteudo))
					FieldPut(FieldPos("E1_ALBAIX"+cVendedor),SA3->A3_ALBAIXA)
				EndIf
				
				If SF2->(FieldPos("F2_CODRL"+cVendedor))>0 .And. SE1->(FieldPos("E1_CODRL"+cVendedor))>0
					cConteudo := SF2->(FieldGet(FieldPos("F2_CODRL"+cVendedor)))
					FieldPut(FieldPos("E1_CODRL"+cVendedor),cConteudo)
				EndIf				
				cVendedor := Soma1(cVendedor,1)
			Next nVendedor
			//зддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁIntegracao como Financeiro                         Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддды
			aImpOut := {SE1->E1_INSS,SE1->E1_ISS,SE1->E1_PIS,SE1->E1_CSLL,SE1->E1_COFINS}			

			cAnoMes := Left( DToS( SE1->E1_VENCREA ), 6 ) 
         
			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁIndica se o tratamento de valor minimo para retencao (R$ 5.000,00) deve ser aplicado:Ё
			//Ё1 = Aplica o valor minimo                                                            Ё
			//Ё2 = Nao aplica o valor minimo                                                        Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If SE1->(FieldPos("E1_APLVLMN")) > 0
				SE1->E1_APLVLMN := cAplVlMn
			Endif
						
			If lContrAbt

				//зддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Grava o saldo para abatimento                     Ё
				//юддддддддддддддддддддддддддддддддддддддддддддддддддды
				SE1->E1_SABTPIS := SE1->E1_PIS 
				SE1->E1_SABTCOF := SE1->E1_COFINS 			
				SE1->E1_SABTCSL := SE1->E1_CSLL 			

				If cRetCli == "1" 
				
					If cModRet == "1" 
				
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Pesquisa nos valores pagos para verificar se deve reter a parcela                        Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						If !Empty( nScanMes := AScan( aAcumulMes, { |x| x[1] == cAnoMes } ) ) 				
							lAbate := ( aAcumulMes[ nScanMes, 2 ] > nValMinRet )
						Else 
						   lAbate := .T. 
						EndIf 					
					
					ElseIf cModRet == "2"
					
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Verifica os titulos para o mes de referencia, para verificar se atingiu a retencao       Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						
						// Estrutura de aDadosRet 
						// 1-Valor dos titulos 
						// 2-Valor do PIS
						// 3-Valor do COFINS
						// 4-Valor da CSLL 
						// 5-Array contendo os recnos dos titulos 
						
						nVlRetPIS := 0
						nVlRetCOF := 0
						nVlRetCSLL:= 0 
						
						aDadosRet := MaNfsCalRt( If( cTipoData == "2", SE1->E1_VENCTO, SE1->E1_VENCREA ) )
						
						lAbate := .F.
						
						If aDadosRet[ 6 ] > nValMinRet  // PIS 
							lAbate := .T. 
							nVlRetPIS  := aDadosRet[ 2 ] 
						EndIf 

						If aDadosRet[ 7 ] > nValMinRet  // COFINS 
							lAbate := .T. 
							nVlRetCOF  := aDadosRet[ 3 ] 
						EndIf 
      
						If aDadosRet[ 8 ] > nValMinRet  // CSLL
							lAbate := .T. 
							nVlRetCSLL := aDadosRet[ 4 ]
						EndIf 
						
						If lAbate
						
							nVlRetPIS  := aDadosRet[ 2 ] 
							nVlRetCOF  := aDadosRet[ 3 ] 
							nVlRetCSLL := aDadosRet[ 4 ] 											                                        
							
							nTotARet := nVlRetPIS + nVlRetCOF + nVlRetCSLL
							
							nSobra := SE1->E1_VALOR - nTotARet
						
							If nSobra < 0                                                           

								nSavRec := SE1->( Recno() ) 
							
								nFatorRed := 1 - ( Abs( nSobra ) / nTotARet ) 
								
		 						nVlRetPIS  := NoRound( nVlRetPIS * nFatorRed, 2 ) 
		 						nVlRetCOF  := NoRound( nVlRetCOF * nFatorRed, 2 )  						
		 						
		 						nVlRetCSLL := SE1->E1_VALOR - ( nVlRetPIS + nVlRetCOF ) 


								//зддддддддддддддддддддддддддддддддддддддддддддддддддд©
								//Ё Grava o valor de NCC caso a retencao seja maior   Ё
								//Ё que o valor do titulo                             Ё							
								//юддддддддддддддддддддддддддддддддддддддддддддддддддды
								If FindFunction("ADUPCREDRT")
									ADupCredRt(Abs(nSobra),"101",nMoeda)
								Endif	
								
								//зддддддддддддддддддддддддддддддддддддддддддддддддддд©
								//Ё Restaura o registro do titulo original            Ё
								//юддддддддддддддддддддддддддддддддддддддддддддддддддды
								SE1->( MsGoto( nSavRec ) ) 								
								
								Reclock( "SE1", .F. ) 								
							
							EndIf 
							
							//зддддддддддддддддддддддддддддддддддддддддддддддддддд©
							//Ё Grava os novos valores de retencao                Ё
							//юддддддддддддддддддддддддддддддддддддддддддддддддддды
							If !Empty( nVlRetPIS ) 														
								SE1->E1_PIS    := nVlRetPIS 					
							Endif	
							If !Empty( nVlRetCOF ) 																
								SE1->E1_COFINS := nVlRetCOF 										
							Endif	
							If !Empty( nVlRetCSLL )
								SE1->E1_CSLL   := nVlRetCSLL 										
							Endif	
							
					
							nSavRec := SE1->( Recno() ) 
							
							//зддддддддддддддддддддддддддддддддддддддддддддддддддд©
							//Ё Zera os saldos a abater dos demais movimentos     Ё
							//юддддддддддддддддддддддддддддддддддддддддддддддддддды
							aRecnos := aClone( aDadosRet[ 5 ] ) 
	            			
							cPrefOri  := SE1->E1_PREFIXO
							cNumOri   := SE1->E1_NUM
							cParcOri  := SE1->E1_PARCELA
							cTipoOri  := SE1->E1_TIPO
							cCfOri    := SE1->E1_CLIENTE
							cLojaOri  := SE1->E1_LOJA
											
							//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
							//ЁPonto de entrada - permite a alteracao do array aRecnos para atualizacao do SE1   Ё
							//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
							If ExistBlock("M461GRVTAB")						
								aRecnos := ExecBlock("M461GRVTAB", .F., .F., {aRecnos})
							EndIf
							For nLoop := 1 to Len( aRecnos )
							
								SE1->( dbGoto( aRecnos[ nLoop ] ) )
								
								RecLock( "SE1", .F. ) 
								
								SE1->E1_SABTPIS := 0 
								SE1->E1_SABTCOF := 0 						
								SE1->E1_SABTCSL := 0
								
								SE1->( MsUnlock() )  																								

								If AliasIndic("SFQ")									 								
									If nSavRec <> aRecnos[ nLoop ] 
										dbSelectArea("SFQ")
										RecLock("SFQ",.T.)
											SFQ->FQ_FILIAL  := xFilial("SFQ")
											SFQ->FQ_ENTORI  := "SE1"
											SFQ->FQ_PREFORI := cPrefOri
											SFQ->FQ_NUMORI  := cNumOri
											SFQ->FQ_PARCORI := cParcOri
											SFQ->FQ_TIPOORI := cTipoOri										
											SFQ->FQ_CFORI   := cCfOri
											SFQ->FQ_LOJAORI := cLojaOri
											
											SFQ->FQ_ENTDES  := "SE1"
											SFQ->FQ_PREFDES := SE1->E1_PREFIXO
											SFQ->FQ_NUMDES  := SE1->E1_NUM
											SFQ->FQ_PARCDES := SE1->E1_PARCELA                             
											SFQ->FQ_TIPODES := SE1->E1_TIPO
											SFQ->FQ_CFDES   := SE1->E1_CLIENTE
											SFQ->FQ_LOJADES := SE1->E1_LOJA
										MsUnlock()
									Endif								
								Endif					
							Next nLoop 
							
							//зддддддддддддддддддддддддддддддддддддддддддддддддддд©
							//Ё Retorna do ponteiro do SE1 para a parcela         Ё
							//юддддддддддддддддддддддддддддддддддддддддддддддддддды
							SE1->( MsGoto( nSavRec ) ) 
							Reclock( "SE1", .F. ) 
						
						Else 	
							lAbate := .F. 					
						EndIf 				
					
					EndIf
				ElseIf cRetCli == "2"
					lAbate := .T. 
				ElseIf cRetCli == "3"
					lAbate := .F. 
				EndIf				
				
			EndIf				
	
			If !lAbate .And. cModRet == "1"
				aImpOut[3]	:=	 aImpOut[4]	:=	aImpOut[5]	:=	0
				aImposto[_VLRPIS_ ][1]	:=	aImposto[_VLRPIS_ ][2]	:=	0
				If lContrAbt
					SE1->E1_SABTPIS	:=	0
				EndIf
				SE1->E1_BASEPIS	:=	0
				SE1->E1_PIS		:=	0
				aImposto[_VLRCOFI_ ][1]	:=	aImposto[_VLRCOFI_ ][2]	:=	0
				If lContrAbt
					SE1->E1_SABTCOF	:=	0
				EndIf
				SE1->E1_BASECOF	:=	0
				SE1->E1_COFINS	:=	0
				aImposto[_VLRCSLL_ ][1]	:=	aImposto[_VLRCSLL_ ][2]	:=	0
				If lContrAbt
					SE1->E1_SABTCSL	:=	0
				EndIf
				SE1->E1_BASECSL	:=	0
				SE1->E1_CSLL	:=	0
			EndIf

			If SE1->(FieldPos("E1_TPDP"))> 0 
				If ValType(aImposto[_VLRTPDP_][1]) == "A" .And. aImposto[_VLRTPDP_][1][1] > 0
					SE1->E1_TPDP := aImposto[_VLRTPDP_][1][1] * nFatorParc
				ElseIf ValType(aImposto[_VLRTPDP_][1]) == "N" .And. aImposto[_VLRTPDP_][1] > 0
					SE1->E1_TPDP := aImposto[_VLRTPDP_][1] * nFatorParc
				EndIf 
			EndIf
					
            A040DupRec( "MATA460",(nCntFor == 1),aTitulo[_VLRTIT_], lAbate, lGerAbtISS,, aTitulo[_VLRISS_], MaFisRet(,"NF_RECISS"), , aMedicao , aProp[nCntFor] , (nCntFor == Len(aVencto)),,cRetCli)

			If lAtuSldNat
				AtuSldNat(SE1->E1_NATUREZ, SE1->E1_VENCREA, SE1->E1_MOEDA, If(SE1->E1_TIPO$MVRECANT+"/"+MV_CRNEG,"3","2"), "R", SE1->E1_VALOR, SE1->E1_VLCRUZ, If(SE1->E1_TIPO$MVABATIM,"-","+"),,FunName(),"SE1", SE1->(Recno()),0)
			Endif
			
			//
			// Template GEM - Gestao de Empreendimentos Imobiliarios
			//
			// Verifica se a condicao de pagamento tem vinculacao com uma condicao de venda
			//
			If ExistTemplate("GEMLIXPARC")
				ExecTemplate("GEMLIXPARC",.F.,.F.,{SE1->E1_PREFIXO ,SE1->E1_NUM  ,SE1->E1_PARCELA ;
				                                  ,SE1->E1_TIPO    ,SF2->F2_COND ,SE1->E1_VALOR   ;
				                                  ,iIf(Len(aTitCndVnd)>=nCntFor,aTitCndVnd[nCntFor],{}) ; // Detalhes do Titulo a receber(amortizacao,juros,etc)
				                                  } ) 
			
			EndIf
			
			SE1->(MsUnLock())
			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Rotina de Importacao automatica de Titulos entre        Ё
			//Ё	Filial e Matriz (Fa620Auto).                            Ё
			//Ё	Parametros:                                             Ё
			//Ё 1- Recno do Titulo principal.                           Ё
			//Ё	2- Filial destino.                                      Ё
			//Ё	3- Historico.                                           Ё
			//Ё	4- Executa aprovacao automatica. (Logico)               Ё
			//Ё	5- Apresenta mensagens de Erro. (Logico)				Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If SuperGetMv("MV_RETAUTO",,.F.) .And. SF4->(FieldPos('F4_TRAFILI')) > 0
				If SF4->F4_TRAFILI == "1"
					Fa620Auto(SE1->(RECNO()),SuperGetMv("MV_REMATRI", ,""),"TransferЙncia",SuperGetMv("MV_APRAUTO",.F.,.T.),.T.)
				EndIf
	   		EndIf 
			
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁAtualiza o SF2                                                          Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If !Intransact()
				RecLock("SF2")
			EndIf
			SF2->F2_VALFAT  += SE1->E1_VALOR
			SF2->F2_PREFIXO := SE1->E1_PREFIXO
			SF2->F2_DUPL    := SE1->E1_NUM
			SF2->F2_VALIRRF += SE1->E1_IRRF
			SF2->F2_VALINSS += SE1->E1_INSS - aImpOut[1]
//			SF2->F2_VALISS  += SE1->E1_ISS  - aImpOut[2]
			
			If !lContrAbt .Or. Len( aRecnos ) <= 1 
				//зддддддддддддддддддддддддддддддддддддд©
				//Ё Corrige apenas se nao aglutinadora  Ё
				//юддддддддддддддддддддддддддддддддддддды
				SF2->F2_VALPIS  += SE1->E1_PIS  - aImpOut[3]
				SF2->F2_VALCSLL += SE1->E1_CSLL - aImpOut[4]
				SF2->F2_VALCOFI += SE1->E1_COFINS - aImpOut[5]
			EndIf
			
			aCtbRet[1] += SE1->E1_PIS
			aCtbRet[2] += SE1->E1_COFINS
			aCtbRet[3] += SE1->E1_CSLL

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁCalcula a Proxima Parcela                                               Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			cParcela := MaParcela(cParcela)
			nValfun 	:= 0
			Aadd(aRecSe1,SE1->(Recno()))
			Aadd(aRecSE1Adt,SE1->(Recno()))
		Next nCntFor
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁCalcula a Comissao                                                      Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		For nCntFor:= 1 To Len(aRecSe1)
			If ( lComissao .And. lTemVend )
				dbSelectArea("SE1")
				MsGoto(aRecSe1[nCntFor])
				Fa440CalcE("MATA460")
				If lF440Com
					ExecBlock("F440COM",.F.,.F., aRecSE1)
				EndIf
			EndIf
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁCodeBlock de integracao com outros modulos                              Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			Eval(bAtuFin,aRecSe1[nCntFor])
		Next nCntFor
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Grava o valor de retencao do PIS/COFINS/CSLL para contabilizacao  Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If GetNewPar("MV_CTRETNF","1")=="2"
			RecLock("SF2")
			If SF2->(FieldPos("F2_VALPIS"))>0
				SF2->F2_VALPIS := aCtbRet[1]
			EndIf
			If SF2->(FieldPos("F2_VALCOFI"))>0
				SF2->F2_VALCOFI := aCtbRet[2]
			EndIf
			If SF2->(FieldPos("F2_VALCSLL"))>0
				SF2->F2_VALCSLL := aCtbRet[3]
			EndIf
		EndIf		
	EndIf
EndIf

//зддддддддддддддддддддддддддддддддддддддд©
//Ё Atualiza caucao de contrato		      Ё
//юддддддддддддддддддддддддддддддддддддддды
If len(aContrato) > 0
	CtaAbatCauc( 1, aContrato[1], aRecSe1, SF2->F2_CLIENTE, SF2->F2_LOJA, SF2->F2_DOC, SF2->F2_SERIE, NIL, SF2->F2_VALBRUT ) 
EndIf

Return( .T. )

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMaNfsInit Ё Autor ЁEduardo Riera          Ё Data Ё28.08.1999Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁInicializa as variaveis Staticas utilizadas no Programa     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁNenhum                                                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁNenhum                                                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁObservacaoЁUtiliza as variaveis aEntry                                 Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function MaNfsInit()

Local cValid      := ""
Local cReferencia := ""
Local nPosIni     := 0
Local nLen        := 0

If ( Empty(aEntry) )
	aEntry:= Array(37)
	aEntry[EP_M460MKB   ]	:= ExistBlock("M460MKB")
	aEntry[EP_M461IMPF  ]	:= ExistBlock("M461IMPF",,.T.)
	aEntry[EP_SF2460T   ]   := ExistTemplate("SF2460I",,.T.) 
	aEntry[EP_SF2460I   ]   := ExistBlock("SF2460I",,.T.)
	aEntry[EP_M460IPT   ]	:= ExistTemplate("M460IPI") 
	aEntry[EP_M460IPI   ]	:= ExistBlock("M460IPI")
	aEntry[EP_M460ICM   ]   := ExistBlock("M460ICM")
	aEntry[EP_M460SOT   ]   := ExistTemplate("M460SOLI") 
	aEntry[EP_M460SOLI  ]   := ExistBlock("M460SOLI")
	aEntry[EP_MSD2UMT   ]   := ExistTemplate("MSD2UM2") 
	aEntry[EP_MSD2UM2   ]   := ExistBlock("MSD2UM2")
	aEntry[EP_MSD246T   ]   := ExistTemplate("MSD2460") 
	aEntry[EP_MSD2460   ]   := ExistBlock("MSD2460")
	aEntry[EP_MTASF2    ]   := ExistBlock("MTASF2")
	aEntry[EP_F440COM   ]   := ExistBlock("F440COM")
	aEntry[EP_M460IREN  ]   := ExistBlock("M460IREN")
	aEntry[EP_M460ISS   ]   := ExistBlock("M460ISS")
	aEntry[EP_M460VISS  ]   := ExistBlock("M460VISS")
	aEntry[EP_M460ATEC  ]   := ExistBlock("M460ATEC")
	aEntry[EP_M460NITE  ]   := ExistBlock("M460NITE")
	aEntry[EP_M460PROC  ]   := ExistBlock("M460PROC")
	aEntry[EP_M460QRT   ]   := ExistTemplate("M460QRY") 
	aEntry[EP_M460QRY   ]   := ExistBlock("M460QRY")
	aEntry[EP_M460FIT   ]   := ExistTemplate("M460FIL") 
	aEntry[EP_M460FIL   ]   := ExistBlock("M460FIL")
	aEntry[EP_M460RTPD  ]   := ExistBlock("M460RTPD")
	aEntry[EP_M460FIM   ]   := ExistBlock("M460FIM")
	aEntry[EP_M460COND  ]   := ExistBlock("M460COND")
	aEntry[EP_M460INSS  ]   := ExistBlock("M460INSS")
	aEntry[EP_M460ITPD  ]   := ExistBlock("M460ITPD")	
	aEntry[EP_M460ORD   ]   := ExistBlock("M460ORD")
	aEntry[EP_M460MOED  ]   := ExistBlock("M460MOED")
	aEntry[EP_M460RAT   ]   := ExistBlock("M460RAT")		
	aEntry[EP_M461ACRE  ]   := ExistBlock("M461ACRE")			
	aEntry[EP_M460NOTA  ]   := ExistBlock("M460NOTA")
	aEntry[EP_M460ICMT  ]   := ExistTemplate("M460ICM")	
	aEntry[EP_M460QUEB	]   := ExistBlock("M460QUEB")
EndIf

If aFisGet == Nil
	aFisGet	:= {}
	dbSelectArea("SX3")
	dbSetOrder(1)
	MsSeek("SC6")
	While !Eof().And.X3_ARQUIVO=="SC6"
		cValid := UPPER(X3_VALID+X3_VLDUSER)
		If 'MAFISGET("'$cValid
			nPosIni 	:= AT('MAFISGET("',cValid)+10
			nLen		:= AT('")',Substr(cValid,nPosIni,Len(cValid)-nPosIni))-1
			cReferencia := Substr(cValid,nPosIni,nLen)
			aAdd(aFisGet,{cReferencia,X3_CAMPO,MaFisOrdem(cReferencia)})
		EndIf
		If 'MAFISREF("'$cValid
			nPosIni		:= AT('MAFISREF("',cValid) + 10
			cReferencia	:=Substr(cValid,nPosIni,AT('","MT410",',cValid)-nPosIni)
			aAdd(aFisGet,{cReferencia,X3_CAMPO,MaFisOrdem(cReferencia)})
		EndIf
		dbSkip()
	EndDo
	aSort(aFisGet,,,{|x,y| x[3]<y[3]})
EndIf

If aFisGetSC5 == Nil
	aFisGetSC5	:= {}
	dbSelectArea("SX3")
	dbSetOrder(1)
	MsSeek("SC5")
	While !Eof().And.X3_ARQUIVO=="SC5"
		cValid := UPPER(X3_VALID+X3_VLDUSER)
		If 'MAFISGET("'$cValid
			nPosIni 	:= AT('MAFISGET("',cValid)+10
			nLen		:= AT('")',Substr(cValid,nPosIni,Len(cValid)-nPosIni))-1
			cReferencia := Substr(cValid,nPosIni,nLen)
			aAdd(aFisGetSC5,{cReferencia,X3_CAMPO,MaFisOrdem(cReferencia)})
		EndIf
		If 'MAFISREF("'$cValid
			nPosIni		:= AT('MAFISREF("',cValid) + 10
			cReferencia	:=Substr(cValid,nPosIni,AT('","MT410",',cValid)-nPosIni)
			aAdd(aFisGetSC5,{cReferencia,X3_CAMPO,MaFisOrdem(cReferencia)})
		EndIf
		dbSkip()
	EndDo
	aSort(aFisGetSC5,,,{|x,y| x[3]<y[3]})
EndIf


If aRelImp == Nil
	aRelImp := MaFisRelImp("MT100",{"SF2","SD2"})
EndIf
MaFisEnd()

Return( .T. )

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMaNfsEnd  Ё Autor ЁEduardo Riera          Ё Data Ё28.08.1999Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁEncerra as variaveis Staticas utilizadas no Programa        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁNenhum                                                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁNenhum                                                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁObservacaoЁUtiliza a  variavel aEntry                                  Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function MaNfsEnd()

aEntry	   := {}
aFisGet	   := Nil
aFisGetSC5 := Nil
aRelImp	   := Nil
aSavRat    := {}
MaFisEnd()

Return( .T. )

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMaBxCQ2SD2Ё Autor ЁEduardo Riera          Ё Data Ё07.10.1999Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁBaixa do CQ pela movimentacao do SD2.                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁNenhum                                                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpL1: Indica se eh um estorno da movimentacao         (OPC)Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁObservacaoЁO SF2,SD2 e SD1 devem estar posicionados                    Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function MaCQ2SD2(lEstorno)

Local aArea     := GetArea()
Local lRastroL	:= IIf(Rastro(SD2->D2_COD,'S'),.T.,Rastro(SD2->D2_COD, 'L'))
Local lRastroS	:= Rastro(SD2->D2_COD,'S')
Local aMovCQ	:= {}
Local aSD7		:= {}
Local nPos		:= 0
Local nSaldo	:= 0
Local nEstorno  := 0
Local nCntFor	:= 0

Local cSeqSD7	:= ""

DEFAULT lEstorno := .F.

If ( !Empty(SD1->D1_NUMCQ) )
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Tratamento para implantacao do item do documento de saida           Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If !lEstorno
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁVerifica os Movimento Liberados e Rejeitados do CQ                   Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If ( SF2->F2_TIPO $ "DB" )
			aMovCQ := fLibRejCQ(SD2->D2_COD,SD2->D2_NFORI,SD2->D2_SERIORI,SF2->F2_CLIENTE,SF2->F2_LOJA,,SD2->D2_ITEMORI)
		EndIf
		If (nPos := aScan(aMovCQ,{|x|x[1]>0.And.x[2]>=SD2->D2_QUANT.And.x[3]==SD2->D2_LOCAL})) > 0
			nTipoD7  := aMovCQ[nPos, 1]
			cLocalD7 := aMovCQ[nPos, 3]
			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁCalcula a Quantidade a ser estornada do CQ                           Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			dbSelectArea("SD7")
			dbSetOrder(1)
			If ( MsSeek(xFilial("SD7")+SD1->D1_NUMCQ+SD2->D2_COD+SD1->D1_LOCAL,.F.) )
				While ( !Eof() .And.xFilial("SD7")	== SD7->D7_FILIAL .And.;
						SD1->D1_NUMCQ	== SD7->D7_NUMERO .And.;
						SD2->D2_COD		== SD7->D7_PRODUTO.And.;
						SD1->D1_LOCAL	== SD7->D7_LOCAL )

					nSaldo := SD7->D7_SALDO //Sempre esta no Ultimo registro Valido
					cSeqSD7:= SD7->D7_SEQ
					//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//ЁEfetua o Estorno do CQ                                               Ё
					//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If ( SD7->D7_LOCDEST==cLocalD7	.And.;
							Empty(SD7->D7_ESTORNO) 	.And.;
							SD7->D7_TIPO == nTipoD7 .And.;
							IIf(lRastroL,SD7->D7_LOTECTL==SD2->D2_LOTECTL,.T.) .And.;
							IIf(lRastroS,SD7->D7_NUMLOTE==SD2->D2_NUMLOTE,.T.) .And.;
							SD2->D2_QUANT	> nEstorno )

						RecLock('SD7', .F.)
						SD7->D7_ESTORNO := 'S'
						MsUnlock()

						nEstorno += SD7->D7_QTDE

						If ( Empty(aSD7) )
							For nCntFor := 1 To FCount()
								aadd(aSD7,FieldGet(nCntFor))
							Next nCntFor
						EndIf
					EndIf
					dbSelectArea("SD7")
					dbSkip()
				EndDo
				If ( nEstorno > 0 )
					//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//ЁCria o Registro de Estorno do CQ                                     Ё
					//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					cSeqSD7 := Soma1(cSeqSD7,Len(SD7->D7_SEQ))
					RecLock('SD7', .T.)
					For nCntFor := 1 To FCount()
						FieldPut(nCntFor,aSD7[nCntFor])
					Next nCntFor
					SD7->D7_QTDE    := nEstorno
					SD7->D7_TIPO    := nTipoD7 + 2
					SD7->D7_SEQ     := cSeqSD7
					SD7->D7_SALDO   := nSaldo
					MsUnlock()
					//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//ЁCria o Registro da Quantidade nao estornada                          Ё
					//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					cSeqSD7 := Soma1(cSeqSD7,Len(SD7->D7_SEQ))
					If ((nEstorno - SD2->D2_QUANT) > 0)
						RecLock('SD7', .T.)
						For nCntFor := 1 To FCount()
							FieldPut(nCntFor,aSD7[nCntFor])
						Next nCntFor
						SD7->D7_QTDE	:= nEstorno - SD2->D2_QUANT
						SD7->D7_TIPO	:= nTipoD7
						SD7->D7_SEQ     := cSeqSD7
						SD7->D7_SALDO   := nSaldo
						SD7->D7_ESTORNO := ""
						MsUnlock()
					EndIf
				EndIf
			EndIf
		EndIf
	Else
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Tratamento para estorno do item do documento de saida               Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		nSaldo := SD2->D2_QUANT

		dbSelectArea("SD7")
		dbSetOrder(2)
		MsSeek(xFilial("SD7")+SD1->D1_NUMCQ+SD1->D1_COD+SD1->D1_LOCAL)
		While !Eof() .And. xFilial("SD7") == SD7->D7_FILIAL .And.;
				SD1->D1_NUMCQ == SD7->D7_NUMERO .And.;
				SD1->D1_COD == SD7->D7_PRODUTO .And.;
				SD1->D1_LOCAL == SD7->D7_LOCAL .And.;
				nSaldo > 0			

			If SD7->D7_DOC == SD1->D1_DOC .And.;
					SD7->D7_SERIE == SD1->D1_SERIE .And.;
					SD7->D7_FORNECE == SD1->D1_FORNECE .And.;
					SD7->D7_LOJA == SD1->D1_LOJA .And.;
					SD7->D7_ESTORNO == "S" .And.;
					( SD7->D7_TIPO==3 .Or. SD7->D7_TIPO==4 )

				RecLock("SD7")
				SD7->D7_QTDE    := Min(SD7->D7_QTDE,nSaldo)
				SD7->D7_ESTORNO := ""
				SD7->D7_TIPO    -= 2
				MsUnLock()

				nSaldo   -= SD7->D7_QTDE

			EndIf
			dbSelectArea("SD7")
			dbSkip()
		EndDo
	EndIf
EndIf
RestArea(aArea)

Return( .T. )

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддбдддддддбддддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMaPvPrcItЁ Autor ЁEdson Maricate          Ё Data Ё07.10.1999Ё╠╠
╠╠цддддддддддедддддддддадддддддаддддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁRetorna o preco unitario do item.                           Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁNenhum                                                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁNenhum                                                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁObservacaoЁ                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function MaPvPrcIt(aPvlNfs,nx,lReajuste,aRateio,nValNeg,nPerISS,dDataMoe)

Local aVar      := {}
Local nPrTab	:= 0
Local nPrcVen	:= 0
Local nPrUnit	:= 0
Local nAcresFin := 0
Local nTotal	:= 0
Local nDesconto := 0      
Local nTotMdPv  := 0       
Local lAcresDup := ( SuperGetMv("MV_ACRSDUP",.F.,.F.) == .T.)
Local lM461PRCV	:= FindFunction("P_M461PRCV")	//Project Function para alterar preГo de venda
Local lM461UNIT	:= FindFunction("P_M461UNIT")	//Project Function para alterar preГo unita╢rio  

Default dDataMoe := dDataBase

If Empty(dDataMoe)
	dDataMoe := dDatabase
Endif
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁPosiciona Registros                                                     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SC9")
dbSetOrder(1)
MsGoto(aPvlNfs[nx][8])

dbSelectArea("SB1")
dbSetOrder(1)
MsGoto(aPvlNfs[nx][12])

dbSelectArea("SC5")
dbSetOrder(1)
MsGoto(aPvlNfs[nx][9])

dbSelectArea("SC6")
dbSetOrder(1)
MsGoto(aPvlNfs[nx][10])

dbSelectArea("SF4")
dbSetOrder(1)
MsGoto(aPvlNfs[nx][14])
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁInicializa Variaveis                                                    Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If SF4->F4_ISS == "S"  // a funcao AliqICMs trata Excecao Fiscal de ISS tambem
	If ( aEntry[EP_M460ISS] )
		nPerIss := ExecBlock("M460ISS",.f.,.f.,{nX})
	Endif
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁCalculo do Preco de Venda                                               Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
nPrcVen := SC9->C9_PRCVEN
nPrUnit := If(SC6->C6_PRUNIT<>0,SC6->C6_PRUNIT,SC9->C9_PRCVEN)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁA implementaГЦo dos pontos de entrada (P_M461PRCV e P_M461UNIT) e de total responsabilidade do cliente, principalmente sobreЁ
//Ёbase de dados que sera gerada. Para o desenvolvimento dos pontos de entrada deverao ser incluidas, validacoes das           Ё 
//Ёconfiguracoes das TES, pois ao alterar os precos de venda, o sistema perde a referencia de calculo, podendo resultar em     Ё
//Ёvalores incorretos,inclusive de impostos. Outra informacao importante pertinente a utilizacao dos pontos de entrada e que   Ё
//Ёdevem ser validadas, apos implantacao deste novo processo na nota fiscal, as rotinas que geram obrigacoes fiscais.          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
//Calculo do Preco de Venda - Veririfque quadro explicativo acima
If lM461PRCV
	nPrcVen := P_M461PRCV(nX,nPrcVen)
EndIf

//Calculo do Preco Unitario - Veririfque quadro explicativo acima                                               Ё
If lM461UNIT
	nPrUnit := P_M461UNIT(nX,nPrUnit)
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁCalcula o reajuste de preco.                                            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( !Empty(SC5->C5_REAJUST) .And. lReajuste )
	nPrcVen  := Formula(SC5->C5_REAJUST)
	nPrUnit := nPrcVen
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁConverte os valores para a Moeda Corrente(1)                            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If SC5->C5_MOEDA > 1 
	nTotMdPv := nPrcVen	
 	If  ExistBlock("M460PRC")
		aVar     := ExecBlock("M460PRC",.F.,.F.,{nPrcVen,nPrUnit})
		nPrcVen  := aVar[1]
		nPrUnit  := aVar[2]
	Else                   
		nPrcVen  := xMoeda(nPrcVen,SC5->C5_MOEDA,1,dDataMoe,8)
		nPrUnit := xMoeda(nPrUnit,SC5->C5_MOEDA,1,dDataMoe,8)
	Endif	
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁCalculo do Acrescimo Financeiro                                         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( SC5->C5_ACRSFIN <> 0 ) 
	If lAcresDup
		nAcresFin := a410Arred(nPrcVen*SC5->C5_ACRSFIN/100,"D2_PRCVEN")
		nTotMdPv += a410Arred(nTotMdPv*SC5->C5_ACRSFIN/100,"D2_PRCVEN")		
	Else
		If SF4->F4_DUPLIC=="S"	                                        
			nAcresFin := a410Arred(nPrcVen*SC5->C5_ACRSFIN/100,"D2_PRCVEN")		
			nTotMdPv  += a410Arred(nTotMdPv*SC5->C5_ACRSFIN/100,"D2_PRCVEN")			
		Endif
	Endif		
EndIf

If ( aEntry[EP_M461ACRE] )
	nAcresFin := Execblock("M461ACRE",.f.,.f.,{nPrcVen,nPrUnit,nAcresFin})  
Endif	

If SC5->C5_TIPO $ "CIP" .AND. !lM461PRCV
	If ( SC5->C5_MOEDA == 1 )
		nPrcVen := SC6->C6_PRCVEN
	EndIf
Else	
	nPrcVen  := a410Arred(nPrcVen,"D2_PRCVEN")+nAcresFin
	nPrUnit  := a410Arred(nPrUnit,"D2_PRCVEN")
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁCalculo do Preco com ISS                                                Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( SC5->C5_INCISS == "N" .And. SF4->F4_ISS=="S" .And. SC5->C5_TIPO == "N" )
	nPrcVen := a410Arred(nPrcVen/(1-(nPerISS/100)),"D2_PRCVEN")
	nTotMdPv:= a410Arred(nTotMdPv/(1-(nPerISS/100)),"D2_PRCVEN")	
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁCalcula o Valor Total do Item                                           Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( SC5->C5_TIPO$"CIP" .Or. MaTesSel(SC6->C6_TES) .Or.;
		( aPvlNfs[nx][4]==SC6->C6_QTDVEN .And. (SC5->C5_TIPO=="D" .Or. SF4->F4_PODER3=="D") ) )
	If ( SC5->C5_TIPO$"CIP" .Or. MaTesSel(SC6->C6_TES) ) .And. ExistBlock("M460PRC")
		nTotal := nPrcVen
	Else
		If ( SC5->C5_MOEDA <> 1 )
			nTotMdPv := SC6->C6_VALOR
			nTotal   := xMoeda(SC6->C6_VALOR,SC5->C5_MOEDA,1,dDataMoe,TamSX3("C6_PRCVEN")[2])		
		Else
			nTotal   := SC6->C6_VALOR		
		EndIf
	EndIf
Else
	nTotal   := nPrcVen * aPvlNfs[nx][4]
	nTotMdPv *= aPvlNfs[nx][4]
EndIf

nTotal   := a410Arred(nTotal  ,"D2_TOTAL")
nTotMdPv := a410Arred(nTotMdPv,"D2_TOTAL")


If nPrcVen > 0
	aRateio[RT_PDESCON] := IIf(aRateio[RT_PDESCON]>nTotal,nTotal,aRateio[RT_PDESCON])
	If aRateio[RT_PDESCON]+aRateio[RT_DESCONT]>nTotal
		aRateio[RT_PDESCON] := 0
	EndIf
	//Por segurancao nao eh pertido desconto maior que o total do item
Else
	nValNeg := 0
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁCalculo do Desconto                                                     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
nPrTab := nPrUnit
If GetNewPar("MV_NDESCTP",.F.) .And. SC6->C6_VALDESC == 0 .And. SC6->C6_DESCONT==0
	nPrUnit := nPrcVen
EndIf
If ( nPrUnit > nPrcVen .Or. nValNeg > 0 .Or. SC6->C6_VALDESC > 0 )

	nDesconto := (a410Arred(nPrUnit*aPvlNFs[nx][4],"D2_DESCON")-nTotal)+nValNeg
	If nDesconto <= 0
		If SC6->C6_QTDVEN == aPvlNFs[nx][4]
			nDesconto := SC6->C6_VALDESC
		Else
			nDesconto := A410Arred(SC6->C6_VALDESC/SC6->C6_QTDVEN*aPvlNFs[nx][4],"C6_VALDESC")
		EndIf
		nDesconto := xMoeda(nDesconto,SC5->C5_MOEDA,1,dDataMoe,TamSX3("D2_DESCON")[2])
	EndIf
	nDesconto := nDesconto + aRateio[RT_DESCONT] + aRateio[RT_PDESCON]
	nDesconto := Max(0,nDesconto)
Else
	nDesconto := aRateio[RT_DESCONT] + aRateio[RT_PDESCON]
EndIf                               
nPrUnit := nPrTab
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Desconto de Cabecalho so calculado na geracao da NF                    Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
nPrcVen := nPrcVen - A410Arred(((aRateio[RT_DESCONT]+aRateio[RT_PDESCON]) / aPvlNFs[nx][4]),"D2_PRCVEN")
nTotal  := nTotal  -  aRateio[RT_DESCONT] - aRateio[RT_PDESCON]
nTotMdPv-= xMoeda(aRateio[RT_DESCONT]+aRateio[RT_PDESCON],1,SC5->C5_MOEDA,dDataMoe,2)

nAcresFin := nAcresFin * aPvlNfs[nx][4]

Return {nPrcVen,nPrUnit,nTotal,nDesconto,nPerISS,nAcresFin,nTotMdPv}

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддддд©╠╠
╠╠ЁProgram   ЁMATA460B  Ё Autor ЁEduardo Riera          Ё Data Ё26.03.20001	Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁRotina de Geracao das Notas Fiscais de Saida por Carga     	Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpL1: Processamento Ok.                                    	Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁNenhum                                                      	Ё╠╠
╠╠цддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                     	Ё╠╠
╠╠цддддддддддддддбддддддддбддддддбдддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё PROGRAMADOR  Ё DATA   Ё BOPS Ё  MOTIVO DA ALTERACAO                     Ё╠╠
╠╠цддддддддддддддеддддддддеддддддедддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё              Ё        Ё      Ё                                          Ё╠╠
╠╠юддддддддддддддаддддддддаддддддадддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function Mata460B()
Local aHelpPor09:= {'Fatura pedidos com bloqueio ','de WMS',''}
Local aHelpEsp09:= {'©Factura de Pedidos con Bloqueo ','de WMS?',''}
Local aHelpEng09:= {'Invoice orders with WMS blocking?','',''}
Local lContinua := .T.
Local lIntACD	:= SuperGetMV("MV_INTACD",.F.,"0") == "1"
Local cFilSC9   := ""
Local cFilDAK   := ""
Local cQrySC9   := ""
Local cQryDAK   := ""
Local aIndexDAK := {}
Local lFilDAK   := OsVlEntCom()<>1
Local cRetPE    := ""

PRIVATE bFiltraBrw         // Expressao de Filtro
PRIVATE nOrdNFS   := 1     // Ordem de Geracao da Nota Fiscal

PRIVATE aRotina   := {}

If cPaisLoc == "BRA"
	aRotina := {	{ STR0001,"Ma460Pesq", 0 , 1},; //"Pesquisar"
					{ STR0003,"Ma460Nota", 0 , 4},; //"Prep. Doc's"
					{ "Refresh","MarkBRefresh", 0 , 1}}
Else
	aRotina   := {	{ STR0001,"Ma460Pesq", 0 , 1},; //"Pesquisar"
					{ STR0003,"a461Loc"  , 0 , 4},; //"Prep. Doc's"
					{ "Refresh","MarkBRefresh", 0 , 1}}
EndIf
PRIVATE cCadastro := OemToAnsi(STR0005)                  //"Prepara┤└o dos Documentos de Sa║da"
PRIVATE c460Cond  := ""
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁCarga das Variaveis Staticas do Programa                                Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
MaNfsInit()
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁAvalia Ponto de Entrada                                                 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If nModulo == 72
	c460Cond := KEXF730()
EndIf

If ( aEntry[EP_M460MKB] )
	c460Cond := ExecBlock("M460MKB", .F., .F.)
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁMontagem das querys necessarias a fim de otimizar o programa            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
#IFDEF TOP
	TcSrvMap("SB2")
	SB2->(MsGoto(RecNo()))
	TcSrvMap("SB6")
	SB6->(MsGoto(RecNo()))
	TcSrvMap("SC9")
	SC9->(MsGoto(RecNo()))
	TcSrvMap("DAK")
	DAK->(MsGoto(RecNo()))
	TcSrvMap("SF4")
	SF4->(MsGoto(RecNo()))
	TcSrvMap("SED")
	SED->(MsGoto(RecNo()))
	TCInternal(5,"*OFF")
#ENDIF
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVerifica o direito de acesso por parte do usuario                       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( Substr(cAcesso,51,1) <> "S" )
	dbSelectArea("SF2")
	dbSetOrder(3)
	MsSeek(xFilial("SF2")+Space(Len(SF2->F2_ECF))+"z",.T.)
	dbSkip(-1)
	If ( dDataBase < SF2->F2_EMISSAO )
		Help(" ",1,"DATNF")
		lContinua := .F.
	EndIf
	If lContinua
		MsSeek(xFilial("SF2")+"S"+"z",.T.)
		dbSkip(-1)
		If ( dDataBase < SF2->F2_EMISSAO )
			Help(" ",1,"DATNF")
			lContinua := .F.
		EndIf
	EndIf
EndIf
//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁEXECUTAR CHAMADA DE FUNCAO p/ integracao com sistema de Distribuicao - NAO REMOVER Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
//If lContinua .And. GetMV("MV_FATDIST") == "S" // Apenas quando utilizado pelo modulo de Distribuicao
//	lContinua:=D630DiaFat()
//EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVerifica o Ambiente de Processamento.                                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( AMIIn(5,12,39,72) .And. lContinua )
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁVerifica o Fechamento do Estoque                                        Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If ( If(FindFunction("MVUlmes"),MVUlmes(),SuperGetMV("MV_ULMES")) >= dDataBase )
		Help ( " ", 1, "FECHTO" )
		lContinua := .F.
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁVerifica o Fechamento do Fiscal                                         Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If ( !FisChkDt(dDataBase) )
		lContinua := .F.
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica as perguntas MT461B                                 Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Variaveis utilizadas para parametros                         Ё
	//Ё mv_par01     // Filtra j═ emitidas     - Sim/Nao             Ё
	//Ё mv_par02     // Trazer Carga Marcada   - Sim/Nao             Ё
	//Ё mv_par03     // Carga Inicial                                Ё
	//Ё mv_par04     // Carga Final                                  Ё
	//Ё mv_par05     // Caminhao Inicial                             Ё
	//Ё mv_par06     // Caminhao Final                               Ё
	//Ё mv_par07     // Dt de Liberacao Inicial                      Ё
	//Ё mv_par08     // Dt de Liberacao Final                        Ё
	//Ё mv_par09     // Fatura Pedidos c/Bloqueio WMS? Sim/Nao       Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	AjustSX1_B()

	If IntDL()
		PutSx1('MT461B','09','Fatura Pedidos c/Bloqueio WMS?','©Factura de Pedidos con Bloqueo de WMS?','Invoice orders with WMS blocking?','mv_ch9','N', 1, 0, 0,'C','','','','','mv_par09' ,'Sim','Si','Yes','','Nao','No','No')
		PutSX1Help("P.MT461B09.",aHelpPor09,aHelpEng09,aHelpEsp09)
	EndIf

	If ( Pergunte("MT461B",.T.) .And. lContinua )
		If !lFilDAK
			cFilSC9 := "C9_FILIAL='" +xFilial("SC9")+"'"
			cQrySC9 := "SC9.C9_FILIAL='" +xFilial("SC9")+"'"
		Else
			cFilSC9 += " C9_CARGA>='"+MV_PAR03+"'"
			cFilSC9 += ".AND. C9_CARGA<='"+MV_PAR04+"'"
			cQrySC9 := "SC9.C9_FILIAL="+IIf(lFilDAK,OsFilQry("SC9","DAI.DAI_FILPV"),"'"+xFilial("SC9")+"'")
		EndIf
		If !(Empty(MV_PAR03) .And. Upper(MV_PAR04) == Replicate('Z', Len(MV_PAR04)))
			cQrySC9 += " AND SC9.C9_CARGA>='"+MV_PAR03+"'"
			cQrySC9 += " AND SC9.C9_CARGA<='"+MV_PAR04+"'"
		EndIf
		cFilSC9 += ".AND.Dtos(C9_DATALIB)>='"+Dtos(MV_PAR07)+"'"
		cFilSC9 += ".AND.Dtos(C9_DATALIB)<='"+Dtos(MV_PAR08)+"'"
		cQrySC9 += " AND SC9.C9_DATALIB>='"+Dtos(MV_PAR07)+"'"
		cQrySC9 += " AND SC9.C9_DATALIB<='"+Dtos(MV_PAR08)+"'"

		cFilDAK := "DAK_FILIAL='"+xFilial("DAK")+"'"
		cQryDAK := "DAK.DAK_FILIAL='"+xFilial("DAK")+"'"
		If (MV_PAR01 == 1)
			cFilDAK += ".And.DAK_FEZNF<>'1'"
		EndIf
		//-- Seleciona somente cargas que tiveram o servico executado pelo WMS
		If	IntDL() .And. mv_par09 == 2 .And. DAK->(FieldPos('DAK_BLWMS'))>0
			cFilDAK += ".And. DAK_BLWMS $ '05.06.07.  '"
		EndIf
		If !(Empty(MV_PAR03) .And. Upper(MV_PAR04) == Replicate('Z', Len(MV_PAR04)))
			cQryDAK += " AND DAK.DAK_COD>='"+MV_PAR03+"'"
			cQryDAK += " AND DAK.DAK_COD<='"+MV_PAR04+"'"
			cFilDAK += ".And.DAK_COD>='"+MV_PAR03+"'"
			cFilDAK += ".And.DAK_COD<='"+MV_PAR04+"'"
		EndIf
		If !(Empty(MV_PAR05) .And. Upper(MV_PAR06) == Replicate('Z', Len(MV_PAR06)))
			cQryDAK += " AND DAK.DAK_CAMINH>='"+MV_PAR05+"'"
			cQryDAK += " AND DAK.DAK_CAMINH<='"+MV_PAR06+"'"
			cFilDAK += ".And.DAK_CAMINH>='"+MV_PAR05+"'"
			cFilDAK += ".And.DAK_CAMINH<='"+MV_PAR06+"'"
		EndIf
		cQryDAK += " AND DAK.DAK_COD=SC9.C9_CARGA"
		cQryDAK += " AND DAK.DAK_SEQCAR=SC9.C9_SEQCAR"
		cQryDAK += " AND DAK.D_E_L_E_T_=' '"

		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Pontos de Entrada                                                      Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If ( aEntry[EP_M460QRT] )
			cQrySC9 := ExecTemplate("M460QRY",.F.,.F.,{ cQrySC9 , 1 })
		EndIf
		If nModulo == 72
			cQrySC9:= KEXF750(cQrySC9, 1)
		EndIf
		If ( aEntry[EP_M460QRY] )
			cQrySC9 := ExecBlock("M460QRY",.F.,.F.,{ cQrySC9 , 1 })
		EndIf

		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Chamada para integracao com o modulo ACD - Faz filtro do PV na geracao da nota. Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If lIntACD .And. FindFunction("CBM460FIL")
			cFilSC9 += ".And."+CBM460FIL()
		EndIf
		
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Pontos de Entrada                                                      Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If ( aEntry[EP_M460FIT] )
			cFilSC9 += ".And."+ExecTemplate("M460FIL",.F.,.F.)
		EndIf
		
		If ( aEntry[EP_M460FIL] )
			cFilSC9 += ".And."+ExecBlock("M460FIL",.F.,.F.)
		EndIf
		
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Pontos de Entrada para filtrar carga                                   Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If ExistBlock("M461QRYDAK")
			cRetPE := ExecBlock("M461QRYDAK",.F.,.F.,{ cQryDAK })
			cQryDAK  := If(ValType(cRetPE)=="C", cRetPE, cQryDAK )
		EndIf

		If ExistBlock("M461FILDAK")
			cRetPE := ExecBlock("M461FILDAK",.F.,.F.,{ cFilDAK })
			If ValTYpe(cRetPE)=="C"
				cFilDAK   += ".And."+cRetPE
			EndIf
		EndIf

		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁEXECUTAR CHAMADA DE FUNCAO p/ integracao com sistema de Distribuicao - NAO REMOVER Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		//		If GetMV("MV_FATDIST") == "S" // Apenas quando utilizado pelo modulo de Distribuicao
		//			D460LibCg(@cFilSC9,@cQrySC9)
		//		EndIf
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁRealiza a Filtragem                                                     Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		bFiltraBrw := {|x| If(x==Nil,FilBrowse("DAK",@aIndexDAK,@cFilDAK),{cFilSC9,cQrySC9,cFilDAK,cQryDAK,aIndexDak}) }		

		Eval(bFiltraBrw)
		DAK->(MsSeek(xFilial()))
		MarkBrow("DAK","DAK_OK","A461Avalia()",,MV_PAR02==1,GetMark(,"DAK","DAK_OK"))

		dbSelectArea("DAK")
		RetIndex("DAK")
		dbClearFilter()
		aEval(aIndexDAK,{|x| Ferase(x[1]+OrdBagExt())})

	Else
		lContinua := .F.
	EndIf

	SetKey(VK_F12,Nil)
Else
	lContinua := .F.
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁAnula as variaveis staticas criadas pela funcao manfsinit               Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
MaNfsEnd()

Return( lContinua )
/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMa461EstorЁ Autor ЁEduardo Riera          Ё Data Ё29.08.1999Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁEstorno da liberacao dos pedidos de venda                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpL1: Indica se o estorno foi efetuado com sucesso         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁNenhum                                                      Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function Ma461Estor()

Local aArea      := GetArea()
Local nTpEstorno := 0
Local lRetorno   := .T.

Pergunte("MT461A",.F.)

nTpEstorno := MV_PAR02

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Valida o tipo de estorno de liberacao cujo SC9 esta posicionado        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If nTpEstorno == 1
	If SC9->C9_FILIAL <> xFilial("SC9")
		Help(" ",1,"A000FI")
		lRetorno := .F.
	ElseIf (SC9->C9_BLEST == "10" .And. SC9->C9_BLCRED == "10") .OR. (SC9->C9_BLEST == "ZZ" .And. SC9->C9_BLCRED == "ZZ")
		Help(" ",1,"NFEMITIDA")
		lRetorno := .F.
	ElseIf  IntDL(SC9->C9_PRODUTO)                                                                                                            
	   If ! WmsChkSDB()
			Aviso('SIGAWMS',STR0047, {'Ok'})  //"Este documento esta com atividade de WMS em andamento"
			lRetorno := .F.
	   EndIf
	EndIf
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Solicita confirmacao do estorno                                        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRetorno
	If nTpEstorno == 1
		If MsgYesNo(OemToAnsi(STR0023),OemToAnsi(STR0022))		//"Confirma o Estorno da Libera┤└o?"###"Aten┤└o"
			If Empty(c460Cond) .Or. &(c460Cond)
				Begin Transaction
				a460Estorna()
				End Transaction 	
			EndIf
		EndIf
	Else
		If MsgYesNo(OemToAnsi(STR0024),OemToAnsi(STR0022))		//"Confirma o Estorno da Libera┤└o para todos os itens selecionados ?"###"Aten┤└o"
			Processa({|lEnd| Ma461Est2(@lEnd)},,,.T.)
		EndIf
	EndIf
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Restaura a integridade da rotina                                       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
RestArea(aArea)

Return( lRetorno )
/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMa461Est2 Ё Autor ЁEduardo Riera          Ё Data Ё29.08.1999Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁEstorno da liberacao dos pedidos de venda - Processamento   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpL1: Indica se o estorno foi efetuado com sucesso         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁNenhum                                                      Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function Ma461Est2(lEnd)

Local aArea      := GetArea()

Local lRetorno   := .T.
Local lQuery     := .F.
Local lValido    := .F.
Local lInverte   := ThisInv()
Local cMarca     := ThisMark()

Local cAliasSC9  := "SC9"
Local cMensagem  := RetTitle("C6_NUM")

#IFDEF TOP
	Local aFiltro    := Eval(bFiltraBrw,1)
	Local cDbMs 	 := ""	
	Local cQuery     := ""	
#ENDIF	

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Inicializa a regua                                                     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
ProcRegua(SC9->(LastRec()))
#IFDEF TOP           
	cDbMs := UPPER(TcGetDb())
	If ( TcSrvType()<>"AS/400" .And. cDbMs <> "POSTGRES" )	
		lQuery    := .T.
		cAliasSC9 := "MA461ESTOR"

		cQuery := "SELECT R_E_C_N_O_ SC9RECNO,C9_PEDIDO,C9_ITEM "
		cQuery += "FROM "+RetSqlName("SC9")+" SC9 "
		cQuery += "WHERE SC9.C9_FILIAL='"+xFilial("SC9")+"' AND "
		If ( lInverte )
			cQuery += "SC9.C9_OK<>'"+cMarca+"' AND "
		Else
			cQuery += "SC9.C9_OK='"+cMarca+"' AND "
		EndIf
		cQuery += "SC9.C9_BLEST<>'10' AND "
		cQuery += "SC9.C9_BLEST<>'ZZ' AND "
		cQuery += "SC9.C9_BLCRED<>'10' AND "
		cQuery += "SC9.C9_BLCRED<>'ZZ' AND "		
		cQuery += "SC9.D_E_L_E_T_=' ' "
		cQuery += "AND "+aFiltro[2]

		cQuery := ChangeQuery(cQuery)

		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSC9,.T.,.T.)
	Else			
#ENDIF
	dbSelectArea("SC9")
	MsSeek(xFilial("SC9"))			
	#IFDEF TOP
	EndIf
	#ENDIF
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Inicializa o processamento                                             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea(cAliasSC9)
While !Eof()
	lValido := .T.
	If !lQuery
		If  Empty(SC9->C9_BLEST) .And. Empty(SC9->C9_BLCRED)
			If ((SC9->C9_FILIAL <> xFilial("SC9")) .And.;
					((SC9->C9_BLEST == "10" .And. SC9->C9_BLCRED == "10").Or.(SC9->C9_BLEST == "ZZ" .And. SC9->C9_BLCRED == "ZZ"))) .Or.;
					!((SC9->C9_OK <> cMarca .And. lInverte) .Or.;
					(SC9->C9_OK == cMarca .And. !lInverte))
				lValido := .F.
			EndIf
		Else
			lValido := .F.
		EndIf
	EndIf
	If lValido
		If lQuery
			dbSelectArea("SC9")
			MsGoto((cAliasSC9)->SC9RECNO)
		EndIf
		dbSelectArea("SC9")
		If Empty(c460Cond) .Or. &(c460Cond)
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Verifica ponto de entrada                                              Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If ExistBlock("MA461EST")
				lValido := ExecBlock("MA461EST",.F.,.F.)
			EndIf
			If lValido
				Begin Transaction
					a460Estorna()
				End Transaction
			EndIf
		EndIf
	EndIf
	dbSelectArea(cAliasSC9)
	dbSkip()
	IncProc(cMensagem+"..:"+(cAliasSC9)->C9_PEDIDO+"/"+(cAliasSC9)->C9_ITEM)
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Controle de cancelamento do usuario                                    Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If lEnd
		Exit
	EndIf	
EndDo
If lQuery
	dbSelectArea(cAliasSC9)
	dbCloseArea()
	dbSelectArea("SC9")
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Restaura a integridade da rotina                                       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
RestArea(aArea)

Return( lRetorno )

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁA461AvaliaЁ Autor ЁPatricia A. Salomao    Ё Data Ё26.10.2001Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁTratamento das Cores da markbrowse                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpL1: Indica a Cor                                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁNenhum                                                      Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/

Function A461Avalia()
Local lRet	:= .F.

lRet := ( DAK_FEZNF<>'1')
If ExistBlock("M461AVAL")
	lRet := ExecBlock("M461AVAL",.F.,.F.,{lRet})
EndIf

Return( !lRet )
/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMaNfs2Nfs Ё Autor ЁEduardo Riera          Ё Data Ё20.02.2002Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁRotina de preparacao do documento de saida atraves de outro Ё╠╠
╠╠Ё          Ёdocumento de saida.                                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpC1: Numero do documento preparado                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpC1: Serie do Documento de Origem                         Ё╠╠
╠╠Ё          ЁExpC2: Numero do Documento de Origem                        Ё╠╠
╠╠Ё          ЁExpC3: Cliente/Fornecedor do documento do origem            Ё╠╠
╠╠Ё          ЁExpC4: Loja do Documento de origem                          Ё╠╠
╠╠Ё          ЁExpC5: Serie do Documento a ser gerado                      Ё╠╠
╠╠Ё          ЁExpL6: Mostra Lct.Contabil                             (OPC)Ё╠╠
╠╠Ё          ЁExpL7: Aglutina Lct.Contabil                           (OPC)Ё╠╠
╠╠Ё          ЁExpL8: Contabiliza On-Line                             (OPC)Ё╠╠
╠╠Ё          ЁExpL9: Contabiliza Custo On-Line                       (OPC)Ё╠╠
╠╠Ё          ЁExpLA: Reajuste de preco na nota fiscal                (OPC)Ё╠╠
╠╠Ё          ЁExpNB: Tipo de Acrescimo Financeiro                    (OPC)Ё╠╠
╠╠Ё          ЁExpNC: Tipo de Arredondamento                          (OPC)Ё╠╠
╠╠Ё          ЁExpLD: Atualiza Amarracao Cliente x Produto            (OPC)Ё╠╠
╠╠Ё          ЁExplE: Cupom Fiscal                                    (OPC)Ё╠╠
╠╠Ё          ЁExpBF: CodeBlock de Selecao do SD2                     (OPC)Ё╠╠
╠╠Ё          Ё       Parametros do codeblock                              Ё╠╠
╠╠Ё          Ё       ExpC1: Alias do arquivo SD2                          Ё╠╠
╠╠Ё          Ё       ExpC2: Alias do arquivo SF4                          Ё╠╠
╠╠Ё          ЁExpBG: CodeBlock a ser executado para o SD2            (OPC)Ё╠╠
╠╠Ё          Ё       Parametros do codeblock                              Ё╠╠
╠╠Ё          Ё       ExpN1:[1] Apos a copia do item do documento de saida Ё╠╠
╠╠Ё          Ё             [2] Apos a checagem da atualizacoes anteriores Ё╠╠
╠╠Ё          Ё       ExpA2:Array com o conteudo dos campos do SD2         Ё╠╠
╠╠Ё          Ё       ExpC3:Alias do SD2                              (OPC)Ё╠╠
╠╠Ё          Ё       ExpC4:Alias do SF4                              (OPC)Ё╠╠
╠╠Ё          Ё       ExpC5:Alias do SB1                              (OPC)Ё╠╠
╠╠Ё          ЁExpBH: CodeBlock a ser executado para o SF2            (OPC)Ё╠╠
╠╠Ё          Ё       ExpN1:[1] Apos a copia do item do documento de saida Ё╠╠
╠╠Ё          Ё             [2] Apos a checagem da atualizacoes anteriores Ё╠╠
╠╠Ё          ЁExpBI: CodeBlock a ser executado no final da transacao (OPC)Ё╠╠
╠╠Ё          ЁExpAJ: Array com os Recnos do SF2                      (OPC)Ё╠╠
╠╠Ё          Ё       Deve possuir o mesmo tamanho da ExpAl           (OPC)Ё╠╠
╠╠Ё          ЁExpAL: Array com os itens do SD2                       (OPC)Ё╠╠
╠╠Ё          Ё       [1] Item do SD2                                 (OPC)Ё╠╠
╠╠Ё          Ё       [2] Conteudo dos campos na ordem da estrutura   (OPC)Ё╠╠
╠╠Ё          ЁExpAM: Array com os dados do SF2                       (OPC)Ё╠╠
╠╠Ё          Ё       [n] Conteudo posicional do campo                    )Ё╠╠
╠╠Ё          Ё       Somente И necessario se nЦo houver um documento de   Ё╠╠
╠╠Ё          Ё       origem.                                              Ё╠╠
╠╠Ё          ЁExpAN: Calculo Fiscal                                  (OPC)Ё╠╠
╠╠Ё          Ё       Desabilita o calculo fiscal pois as informacoes ja   Ё╠╠
╠╠Ё          Ё       foram passadas nos campos do SD2 e SF2.              Ё╠╠
╠╠Ё          ЁExpAO: Codigo do cliente de Entrega para calculo dos impos- Ё╠╠
╠╠Ё          Ё       tos.                                                 Ё╠╠
╠╠Ё          ЁExpAP: Codigo da loja de Entrega para calculo dos impostos  Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function MaNfs2Nfs(cSerOri,cNumORI,cClieFor,cLoja,cSerieNFS,lMostraCtb,lAglutCtb,lCtbOnLine,lCtbCusto,lReajusta,nCalAcrs,nArredPrcLis,lAtuSA7,lECF,bFilSD2,bSD2,bSF2,bTTS,aDocOri,aItemOri,aSF2,lNoFiscal,bFiscalSF2,bFiscalSD2,bFatSE1,cNumNFS)

Static lM460Num

Local aArea    := GetArea()
Local cArquivo := ""
Local nHdlPrv  := 0
Local nLctTotal:= 0
Local lLct610  := .F.
Local lLct620  := .F.
Local lIntACD  := SuperGetMV("MV_INTACD",.F.,"0") == "1"
Local cTpNrNfs := SuperGetMV("MV_TPNRNFS")
Local aLancCtb := {}

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Inicializa os parametros DEFAULT                                       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
DEFAULT lM460Num     := ExistBlock("M460NUM",.F.,.F.)
DEFAULT lMostraCtb   := .F.
DEFAULT lAglutCtb    := .F.
DEFAULT lCtbOnLine   := .F.
DEFAULT lCtbCusto    := .F.
DEFAULT lReajusta    := .F.
DEFAULT nCalAcrs     := 1
DEFAULT nArredPrcLis := 1
DEFAULT lAtuSA7      := .F.
DEFAULT lECF         := .F.
DEFAULT bSD2         := {|| .T.}
DEFAULT bFilSD2      := {|| .T.}
DEFAULT bSF2         := {|| .T.}
DEFAULT bTTS         := {|| .T.}
DEFAULT aDocOri      := {}
DEFAULT aItemOri     := {}
DEFAULT lNoFiscal    := .F.
DEFAULT bFatSE1      := {|| .T. }
DEFAULT cNumNFS		 := ""

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁCarga das Variaveis Staticas do Programa                                Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If Len(aEntry) == 0
	MaNfsInit()
Else
	MaFisEnd()
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVerificacao do numero do Documento de Saida                             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
// Se lMudouNum for .T. significa que o usuario alterou o numero da nota em MV_TPNRNFS == "3"
// e o sistema deve respeitar o novo numero contido em cNumero
If Type("lMudouNum") == "U"
	Private lMudouNum := .F.	
EndIf
If lMudouNum .And. (cTpNrNfs == "3"  .Or. cTpNrNfs == "2")
	cNumNFS  := cNumero
	// Se alterou o numero, sistema ir arespeitar novo numero informado para primeira nota, porem,
	// a partir da segunda nota o sistema buscara a numeracao normal a partir do SXE/SXF
	If cTpNrNfs == "2"
		lMudouNum := .F.
	EndIf
Elseif Empty(cNumNFS)
	cNumNFS  := IIf(!lECF,NxtSX5Nota( cSerieNFS,.T.,cTpNrNfs),"")
EndIf	

If lM460Num
	cNumero := cNumNFS
	PRIVATE cSerie  := cSerieNFS
	ExecBlock("M460NUM",.F.,.F.)
	cNumNFS   := cNumero
	cSerieNFS := cSerie
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVerifica os Lancamentos contabeis                                       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( lCtbOnLine )
	lLct610 := VerPadrao("610")
	lLct620 := VerPadrao("620")
EndIf
If ( lLct610 .Or. lLct620 )
	PRIVATE cLote
	LoteCont("FAT")
	nHdlPrv :=HeadProva(cLote,"MATA460",cUserName,@cArquivo)
EndIf
//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Inicializa a gravacao dos lancamentos do SIGAPCO          Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PcoIniLan("000101") 

Begin Transaction
	// Obtem numero do documento dentro da transacao
	If cTpNrNfs == "3"
		If AliasIndic("SD9") .And. (!lM460Num .Or. Empty(cNumNFS))
			cNumNFS:=MA461NumNf(.T.,cSerieNFS,cNumNFs,lECF)
		EndIf
	EndIf	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁInicio da Transacao                                                     Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If MaNfs2Nfs2(cSerOri,cNumOri,cClieFor,cLoja,cSerieNFS,cNumNfs,lLct610,lLct620,@nLctTotal,@nHdlPrv,lReajusta,nCalAcrs,nArredPrcLis,lAtuSA7,lECF,bFilSD2,bSD2,bSF2,aDocOri,aItemOri,aSF2,lNoFiscal,bFiscalSF2,bFiscalSD2,bFatSE1,@aLancCtb)
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁTermino da Transacao                                                    Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		Eval(bTTS)
	Else
		cNumNFS := ""
	EndIf
End Transaction
While __lSx8
	ConfirmSx8()
EndDo
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁContabiliza os Lancamentos Contabeis                                    Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( nLctTotal <> 0 )
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Envia para Lancamento Contabil, se gerado arquivo    Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
	Begin Transaction
		RodaProva(nHdlPrv,nLctTotal)
		cA100Incl(cArquivo,nHdlPrv,3,cLote,lMostraCtb,lAglutCtb,,,,aLancCtb)
	End Transaction
EndIf
//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Finaliza a gravacao dos lancamentos do SIGAPCO            Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PcoFinLan("000101")

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Integracao com o modulo ACD - Analisa a rotina e o tipo da NF para verificar se faz o	Ё
//Ё	acerto das tabelas para devolucao ou para NF normal		  								Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lIntACD .And. FindFunction("CBM460FIM")
	CBM460FIM()
EndIf

If ( ExistTemplate("M460FIM") )
   ExecTemplate("M460FIM",.F.,.F.)
EndIf

If aEntry[EP_M460FIM]
	ExecBlock("M460FIM",.F.,.F.)
EndIf

RestArea(aArea)

Return( cNumNFS )
/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMaNfs2Nfs2Ё Autor ЁEduardo Riera          Ё Data Ё28.08.1999Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁRotina de preparacao do documento de saida atraves de outro Ё╠╠
╠╠Ё          Ёdocumento de saida.                                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpC1: Serie do Documento de Origem                         Ё╠╠
╠╠Ё          ЁExpC2: Numero do Documento de Origem                        Ё╠╠
╠╠Ё          ЁExpC3: Cliente/Fornecedor do documento do origem            Ё╠╠
╠╠Ё          ЁExpC4: Loja do Documento de origem                          Ё╠╠
╠╠Ё          ЁExpC5: Serie do Documento a ser gerado                      Ё╠╠
╠╠Ё          ЁExpC6: Numero do documento a ser gerado                     Ё╠╠
╠╠Ё          ЁExpL7: Lancamento padrao 610                           (OPC)Ё╠╠
╠╠Ё          ЁExpL8: Lancamento padrao 620                           (OPC)Ё╠╠
╠╠Ё          ЁExpN9: Controle do Total Contabilizado                 (OPC)Ё╠╠
╠╠Ё          ЁExpNA: Handle do arquivo de contabilizacao             (OPC)Ё╠╠
╠╠Ё          ЁExpLB: Reajuste de preco na nota fiscal                (OPC)Ё╠╠
╠╠Ё          ЁExpNC: Tipo de Acrescimo Financeiro                    (OPC)Ё╠╠
╠╠Ё          ЁExpND: Tipo de Arredondamento                          (OPC)Ё╠╠
╠╠Ё          ЁExpLE: Atualiza Amarracao Cliente x Produto            (OPC)Ё╠╠
╠╠Ё          ЁExplF: Cupom Fiscal                                    (OPC)Ё╠╠
╠╠Ё          ЁExpBG: CodeBlock a ser executado para o SD2            (OPC)Ё╠╠
╠╠Ё          ЁExpBH: Filtragem do SD2                                (OPC)Ё╠╠
╠╠Ё          ЁExpBI: CodeBlock a ser executado para o SF2            (OPC)Ё╠╠
╠╠Ё          ЁExpAJ: Array com os Recnos do SF2                      (OPC)Ё╠╠
╠╠Ё          Ё       Deve possuir o mesmo tamanho da ExpAl           (OPC)Ё╠╠
╠╠Ё          ЁExpAL: Array com os itens do SD2                       (OPC)Ё╠╠
╠╠Ё          Ё       [1] Item do SD2                                 (OPC)Ё╠╠
╠╠Ё          Ё       [2] Conteudo dos campos na ordem da estrutura   (OPC)Ё╠╠
╠╠Ё          ЁExpAN: Calculo Fiscal                                  (OPC)Ё╠╠
╠╠Ё          Ё       Desabilita o calculo fiscal pois as informacoes ja   Ё╠╠
╠╠Ё          Ё       foram passadas nos campos do SD2 e SF2.              Ё╠╠
╠╠Ё          ЁExpAO: Codigo do cliente de Entrega para calculo dos impos- Ё╠╠
╠╠Ё          Ё       tos.                                                 Ё╠╠
╠╠Ё          ЁExpAP: Codigo da loja de Entrega para calculo dos impostos  Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function MaNfs2Nfs2(cSerie,cNumero,cClieFor,cLoja,cSerieNFS,cNumNFS,lLct610,lLct620,nLctTotal,nHdlPrv,lReajusta,nCalAcrs,nArredPrcLis,lAtuSA7,lECF,bFilSD2,bSD2,bSF2,aDocOri,aItemOri,aSF2,lNoFiscal,bFiscalSF2,bFiscalSD2,bFatSE1,aLancCtb)

Local aArea      := GetArea()
Local aAreaSF2   := SF2->(GetArea())
Local aAreaSD2   := SD2->(GetArea())
Local aStruSD2   := SD2->(dbStruct())
Local aStruSF2   := SF2->(dbStruct())
Local aSD2       := {}
Local aRegSD2    := {}
Local aTitulo    := { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0, 0, 0, 0}
Local aLockSF2   := {}
Local aLockSB2   := {}
Local aLockSA1   := {}
Local aLockSA2   := {}
Local aVldSF2    := {}
Local cBanco     := ""
Local nMoeda     := 1
Local cAliasSB1  := "SB1"
Local cAliasSD2  := "SD2"
Local cAliasSF4  := "SF4"
Local cAliasSE1  := "SE1"
Local cAliasSB6  := "SB6"
Local cItemSD2   := ""
Local cEstado    := ""
Local lQuery     := .F.
Local lFirst     := .F.
Local lRetorno   := .F.
Local lValido    := .F.
Local nItemNf    := IIf(FUNNAME() != "TMSA200", a460NumIt(cSerieNFS) , 99 )  //Caso venha da rotina de calculo de frete(TMS), pega valor DEFAULT do parametro (99)
Local nX         := 0
Local nY         := 0
Local nZ         := 0
Local nItensSD2  := 0
Local nSldSB6    := 0
Local nQtdSB6    := 0
Local nDedICM    := 0
Local nPItem	 := aScan(aStruSD2,{|x| AllTrim(x[1]) == "D2_ITEM"  })
Local nPDescon   := aScan(aStruSD2,{|x| AllTrim(x[1]) == "D2_DESCON"})
Local nPQuant    := aScan(aStruSD2,{|x| AllTrim(x[1]) == "D2_QUANT"})
Local nPPrcVen   := aScan(aStruSD2,{|x| AllTrim(x[1]) == "D2_PRCVEN"})
Local nPTotal    := aScan(aStruSD2,{|x| AllTrim(x[1]) == "D2_TOTAL"})
Local nPQtSegum  := aScan(aStruSD2,{|x| AllTrim(x[1]) == "D2_QTSEGUM"})
Local nPIdentB6  := aScan(aStruSD2,{|x| AllTrim(x[1]) == "D2_IDENTB6"})
Local nPLoteCtl  := aScan(aStruSD2,{|x| AllTrim(x[1]) == "D2_LOTECTL"})
Local nPNumLote  := aScan(aStruSD2,{|x| AllTrim(x[1]) == "D2_NUMLOTE"})
Local nPDtValid  := aScan(aStruSD2,{|x| AllTrim(x[1]) == "D2_DTVALID"})
Local nPPotenc   := aScan(aStruSD2,{|x| AllTrim(x[1]) == "D2_POTENCI"})
Local nPCliente  := aScan(aStruSD2,{|x| AllTrim(x[1]) == "D2_CLIENTE"})
Local nPLoja     := aScan(aStruSD2,{|x| AllTrim(x[1]) == "D2_LOJA"})
Local nPTipo     := aScan(aStruSD2,{|x| AllTrim(x[1]) == "D2_TIPO"})
Local nPDoc      := aScan(aStruSD2,{|x| AllTrim(x[1]) == "D2_DOC"})
Local nPSerie    := aScan(aStruSD2,{|x| AllTrim(x[1]) == "D2_SERIE"})
Local nPProduto  := aScan(aStruSD2,{|x| AllTrim(x[1]) == "D2_COD"})
Local nPNumSeq   := Ascan(aStruSD2,{|x| AllTrim(x[1]) == "D2_NUMSEQ"})
Local nPLocal    := aScan(aStruSD2,{|x| AllTrim(x[1]) == "D2_LOCAL"})
Local nPTES      := aScan(aStruSD2,{|x| AllTrim(x[1]) == "D2_TES"})
Local nPEstDest  := Ascan(aStruSD2,{|x| AllTrim(x[1]) == "D2_EST"})
Local nPEstado   := Ascan(aStruSF2,{|x| AllTrim(x[1]) == "F2_EST"})
Local nItemNF2   := 1
Local cMV_B1M996 :=	GetNewPar ("MV_B1M996", "")
Local cB1M996	 :=	""
Local cB1FRETISS := ""
Local cTpNrNfs   := SuperGetMV("MV_TPNRNFS")
Local aTransp    := {"",""}
Local lCliDes    := ( SF2->(FieldPos('F2_CLIENT'))>0 .And. SF2->(FieldPos('F2_LOJENT'))>0 )
Local lMvAtuComp := SuperGetMV("MV_ATUCOMP",,.F.)
Local lIntTms    := SuperGetMV("MV_INTTMS",,.F.) 
Local lLeiTran		:= SD2->(FieldPos("D2_TOTIMP"))> 0 .And. SF2->(FieldPos("F2_TOTIMP"))> 0 .And. SF2->(FieldPos("F2_TIPIMP"))>0  //Verifica se existem os campos para utilizaГЦo da Lei da transparЙncia
Local nAlqLeiTr		:= 0											// valor da  aliquota retornado pela funГЦo fiscal (Lei transparЙncia)
Local nTotAlq		:= 0                                            // valor total da  aliquota a ser gravada no campo D2_TOTIMP
Local cMvFisCTrb 	:= SuperGetMv("MV_FISCTRB",.F.,"1")             // mИtodo de consulta do percentual de carga tributАria.Informe 1 para tratamento legado ou 2 alМquotas da Nota Fiscal e CGA/CGB - #conteudo gravado no campo D2_TIPIMP
Local cMvFisAlCT   	:= SuperGetMv("MV_FISALCT",.F.,"3")            // Informar qual o mИtodo de composiГЦo da carga tributАria quando MV_FISCTRB = 2. 
Local lMvFisFRas    := SuperGetMv("MV_FISFRAS",.F.,.F.)            // Indica se utilizara a rastreabilidade no faturamento para preenchimento dos campos que necessitam desta funcionalidade 
Local nTotCargT	    := 0 
  
#IFDEF TOP
	Local aStruSB6   := {}
	Local aStruSE1   := {}
	Local cDbMs 	 := ""	
	Local cQuery     := ""	
#ENDIF

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Inicializa os parametros DEFAULT                                       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
DEFAULT lLct610      := .F.
DEFAULT lLct620      := .F.
DEFAULT nLctTotal    := 0
DEFAULT lReajusta    := .F.
DEFAULT nCalAcrs     := 1
DEFAULT nArredPrcLis := 1
DEFAULT lAtuSA7      := .F.
DEFAULT lECF         := .F.
DEFAULT bSD2         := {|| .T.}
DEFAULT bFilSD2      := {|| .T.}
DEFAULT bSF2         := {|| .T.}
DEFAULT aDocOri      := {}
DEFAULT aItemOri     := {}
DEFAULT aSF2         := {}
DEFAULT lNoFiscal    := .F.
DEFAULT bFatSE1      := {|| .T. }
DEFAULT aLancCtb     := {}

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Analisa os itens do documento - Origem                                 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды	
If Empty(aItemOri)	
	nY := 0
	dbSelectArea("SD2")
	dbSetOrder(3)
	#IFDEF TOP
		lQuery    := .T.
		cAliasSD2 := "MANFS2NFS"

		cQuery := ""
		For nX := 1 To Len(aStruSD2)
				cQuery += ","+aStruSD2[nX][1]
		Next nX
		cQuery := "SELECT SF2.R_E_C_N_O_ SF2RECNO,F2_REAJUST "+cQuery+" "
		cQuery += "FROM "+RetSqlName("SD2")+" SD2,"
		cQuery += RetSqlName("SF2")+" SF2 "
		cQuery += "WHERE SF2.F2_FILIAL='"+xFilial("SF2")+"' AND "
		cQuery += "SF2.F2_SERIE='"+cSerie+"' AND "
		cQuery += "SF2.F2_DOC='"+cNumero+"' AND "
		cQuery += "SF2.F2_CLIENTE='"+cClieFor+"' AND "
		cQuery += "SF2.F2_LOJA='"+cLoja+"' AND "
		cQuery += "SF2.D_E_L_E_T_=' ' AND "
		cQuery += "SD2.D2_FILIAL='"+xFilial("SD2")+"' AND "
		cQuery += "SD2.D2_SERIE=SF2.F2_SERIE AND "
		cQuery += "SD2.D2_DOC=SF2.F2_DOC AND "
		cQuery += "SD2.D2_CLIENTE=SF2.F2_CLIENTE AND "
		cQuery += "SD2.D2_LOJA=SF2.F2_LOJA AND "
		cQuery += "SD2.D_E_L_E_T_=' ' "			
		cQuery += "ORDER BY "+SqlOrder(SD2->(IndexKey()))

		cQuery := ChangeQuery(cQuery)

		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD2,.T.,.T.)

		For nX := 1 To Len(aStruSD2)
			If aStruSD2[nX][2]<>"C"
				TcSetField(cAliasSD2,aStruSD2[nX][1],aStruSD2[nX][2],aStruSD2[nX][3],aStruSD2[nX][4])
			EndIf
		Next nX
	#ELSE
		MsSeek(xFilial("SD2")+cNumero+cSerie+cClieFor+cLoja)
	#ENDIF
	While !Eof() .And. xFilial("SD2") == (cAliasSD2)->D2_FILIAL .And.;
			cNumero == (cAliasSD2)->D2_DOC .And.;
			cSerie == (cAliasSD2)->D2_SERIE .And.;
			cClieFor == (cAliasSD2)->D2_CLIENTE .And.;
			(cAliasSD2)->D2_LOJA == cLoja
		
		dbSelectArea("SF4")
		dbSetOrder(1)
		MsSeek(xFilial("SF4")+(cAliasSD2)->D2_TES)

		dbSelectArea("SB1")
		dbSetOrder(1)
		MsSeek(xFilial("SB1")+(cAliasSD2)->D2_COD)
		
		If !lQuery
			dbSelectArea("SF2")
			dbSetOrder(1)
			MsSeek(xFilial("SF2")+(cAliasSD2)->D2_DOC+(cAliasSD2)->D2_SERIE+(cAliasSD2)->D2_CLIENTE+(cAliasSD2)->D2_LOJA)				
		EndIf
		If Eval(bFilSD2,cAliasSD2,"SF4","SB1",Iif(lQuery,(cAliasSD2)->F2_REAJUST,SF2->F2_REAJUST) )
			nY++
			aadd(aDocOri,IIf(lQuery,(cAliasSD2)->SF2RECNO,SF2->(RecNo())))
			aadd(aItemOri,{})
			For nX := 1 To Len(aStruSD2)
				aadd(aItemOri[nY],(cAliasSD2)->(FieldGet(FieldPos(aStruSD2[nX][1]))))
			Next nX
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Chamada do CodeBlock para alteracao do SD2                             Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			Eval(bSD2,1,@aItemOri[nY],cAliasSD2,cAliasSF4,cAliasSB1)
		EndIf
		dbSelectArea(cAliasSD2)
		dbSkip()
	EndDo
	If lQuery
		dbSelectArea(cAliasSD2)
		dbCloseArea()
		dbSelectArea("SD2")
	EndIf
EndIf	
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ordena os Itens do documento por: Tipo+Cliente+Loja+Serie+Documento    Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
aItemOri := aSort(aItemOri,,,{|x,y| x[nPTipo]+x[nPCliente]+x[nPLoja]+x[nPSerie]+x[nPDoc]+x[nPItem] < ;
	y[nPTipo]+y[nPCliente]+y[nPLoja]+y[nPSerie]+y[nPDoc]+y[nPItem]})
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Tratamento para Dead-Lock                                              Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
For nX := 1 To Len(aItemOri)
	If aScan(aLockSB2,aItemOri[nX][nPProduto]+aItemOri[nX][nPLocal])==0
		If lIntTms .And. nModulo == 43 .And. nPTES > 0
			SF4->(DbSetOrder(1))
			If SF4->(DbSeek(xFilial("SF4")+aItemOri[nx][nPTES])) .And. SF4->F4_ESTOQUE == "S"
				aadd(aLockSB2,aItemOri[nX][nPProduto]+aItemOri[nX][nPLocal])
			EndIf
		Else
			aadd(aLockSB2,aItemOri[nX][nPProduto]+aItemOri[nX][nPLocal])		
		EndIf
	EndIf
	If aScan(aLockSF2,aItemOri[nX][nPDoc]+aItemOri[nX][nPSerie]+aItemOri[nX][nPCliente]+aItemOri[nX][nPLoja])==0
		aadd(aLockSF2,aItemOri[nX][nPDoc]+aItemOri[nX][nPSerie]+aItemOri[nX][nPCliente]+aItemOri[nX][nPLoja])
	EndIf

	If aItemOri[nX][nPTipo]$"DB"
		If aScan(aLockSA2,aItemOri[nX][nPCliente]+aItemOri[nX][nPLoja])==0
			aadd(aLockSA2,aItemOri[nX][nPCliente]+aItemOri[nX][nPLoja])
		EndIf
	Else
		If aScan(aLockSA1,aItemOri[nX][nPCliente]+aItemOri[nX][nPLoja])==0
			aadd(aLockSA1,aItemOri[nX][nPCliente]+aItemOri[nX][nPLoja])
		EndIf
	EndIf
Next nX
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Tratamento para Dead-Lock                                              Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If Iif(!GetNewPar("MV_NFS_JOB",.F.),MultLock("SB2",aLockSB2,1), .T.) .And. If(Len(aLockSA1) > 1,MultLock("SA1",aLockSA1,1),.T.) .And. If(Len(aLockSA2) > 1,MultLock("SA2",aLockSA2,1),.T.) .And. If(Len(aLockSF2) > 1,MultLock("SF2",aLockSF2,3),.T.)

	For nItensSD2 := 1 To Len(aItemOri)
		aadd(aSD2,aClone(aItemOri[nItensSD2]))
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Verifica-se a Quebra do documento Fiscal                               Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		nX := nItensSD2+1
		nY := nItensSD2
		If nX > Len(aItemOri) .Or. aItemOri[nX][nPTipo]+;
				aItemOri[nX][nPCliente]+aItemOri[nX][nPLoja]+;
				aItemOri[nX][nPDoc]+aItemOri[nX][nPSerie]<>;
				aItemOri[nY][nPTipo]+;
				aItemOri[nY][nPCliente]+aItemOri[nY][nPLoja]+;
				aItemOri[nY][nPDoc]+aItemOri[nY][nPSerie]
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Posiciona no Documento de Origem                                       Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If (aDocOri[nItensSD2]) <> 0
				SF2->(MsGoto(aDocOri[nItensSD2]))
				If !Empty(SF2->F2_NEXTDOC)
					If aScan(aVldSF2,aDocOri[nItensSD2]) <> 0
						lValido := .T.
					Else
						lValido := .F.
					EndIf
				Else
					lValido := .T.
					aadd(aVldSF2,aDocOri[nItensSD2])
				EndIf
			Else
				lValido := .T.
			EndIf
			If lValido
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Atualiza o Documento com o Numero do Proximo Documento de Saida        Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды					
				If Empty(cNumNFS)
					// Obtem numero do documento dentro da transacao
					SX3->(dbSetOrder(1))
					If (SX3->(dbSeek("SD9"))) .And. cTpNrNfs == "3"
						cNumNFS:=MA461NumNf(.T.,cSerieNFS,NIL,lECF)
					Else
						cNumNFS  := NxtSX5Nota( cSerieNFS,.T.,cTpNrNfs)
					EndIf
				EndIf
				If aDocOri[nItensSD2] <> 0
					RecLock("SF2")
					If Empty(SF2->F2_NEXTDOC)
						SF2->F2_NEXTDOC := cNumNFS
						SF2->F2_NEXTSER := cSerieNFS
					Else
						SF2->F2_NEXTDOC := Repl("X",Len(cNumNFS))
						SF2->F2_NEXTSER := Repl("X",Len(cSerieNFS))
					EndIf
					MsUnLock()
				EndIf
			EndIf
		EndIf
		If lValido .And. (nX > Len(aItemOri) .Or. aItemOri[nX][nPTipo]+;
				aItemOri[nX][nPCliente]+aItemOri[nX][nPLoja]<>;
				aItemOri[nY][nPTipo]+;
				aItemOri[nY][nPCliente]+aItemOri[nY][nPLoja])
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Inicia a gravacao dos documentos de saida                              Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			cItemSD2 := StrZero(1,Len(SD2->D2_ITEM))
			nX       := 1
			nItemNF2 := 1						
			While nX <= Len(aSD2)
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Analise do Documento de Origem                                         Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If Empty(cItemSD2) .Or. nItemNF2 == 1				
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Inicializa a numeracao dos itens do documento de saida                 Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					cItemSD2 := StrZero(1,Len(SD2->D2_ITEM))
					If Empty(cNumNFS)
						// Obtem numero do documento dentro da transacao
						SX3->(dbSetOrder(1))
						If (SX3->(dbSeek("SD9"))) .And. cTpNrNfs == "3"
							cNumNFS:=MA461NumNf(.T.,cSerieNFS,NIL,lECF)
						Else	
							cNumNFS  := NxtSX5Nota( cSerieNFS,.T.,cTpNrNfs)
						EndIf	
					EndIf
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Posiciona no Documento de Origem                                       Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If aDocOri[nItensSD2] <> 0
						SF2->(MsGoto(aDocOri[nItensSD2]))					
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Verificando os titulos a receber                                       Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						If !Empty(SF2->F2_DUPL)
							dbSelectArea("SE1")
							dbSetOrder(2)
							#IFDEF TOP
								cDbMs := UPPER(TcGetDb())							
								If ( TcSrvType()<>"AS/400" .And. cDbMs<>"POSTGRES" )							
									aStruSE1 := SE1->(dbStruct())
									cAliasSE1:= "MANFS2NFS_SE1"
	
									lQuery := .T.
									cQuery := "SELECT SE1.*,SE1.R_E_C_N_O_ SE1RECNO "
									cQuery += "FROM "+RetSqlName("SE1")+" SE1 "
									cQuery += "WHERE SE1.E1_FILIAL='"+xFilial("SE1")+"' AND "
									cQuery += "SE1.E1_PREFIXO='"+SF2->F2_PREFIXO+"' AND "
									cQuery += "SE1.E1_NUM='"+SF2->F2_DUPL+"' AND "
									cQuery += "SE1.E1_CLIENTE='"+cClieFor+"' AND "
									cQuery += "SE1.E1_LOJA='"+cLoja+"' AND "
									cQuery += "SE1.D_E_L_E_T_=' ' "
	
									cQuery := ChangeQuery(cQuery)
	
									dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSE1,.T.,.T.)
	
									For nY := 1 To Len(aStruSE1)
										If aStruSE1[nY][2] <> "C"
											TcSetField(cAliasSE1,aStruSE1[nY][1],aStruSE1[nY][2],aStruSE1[nY][3],aStruSE1[nY][4])
										EndIf
									Next nY
								Else
							#ENDIF
								MsSeek(xFilial("SE1")+cClieFor+cLoja+SF2->F2_PREFIXO+SF2->F2_DUPL)
								#IFDEF TOP
								EndIf
								#ENDIF
							dbSelectArea(cAliasSE1)
							While ( !Eof() .And. xFilial("SE1") == (cAliasSE1)->E1_FILIAL .And.;
									cClieFor == (cAliasSE1)->E1_CLIENTE .And.;
									cLoja == (cAliasSE1)->E1_LOJA .And.;				
									SF2->F2_PREFIXO == (cAliasSE1)->E1_PREFIXO .And.;
									SF2->F2_DUPL == (cAliasSE1)->E1_NUM )
								If (cAliasSE1)->E1_TIPO $ MVNOTAFIS
									cBanco := (cAliasSE1)->E1_PORTADO
									nMoeda := (cAliasSE1)->E1_MOEDA
									Exit
								EndIf
								dbSelectArea(cAliasSE1)
								dbSkip()
							EndDo
							If lQuery
								dbSelectArea(cAliasSE1)
								dbCloseArea()
								dbSelectArea("SE1")
							EndIf
						EndIf					
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Inicia a Gravacao do Cabecalho - SF2                                   Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						aSF2 := {}
						For nY := 1 To Len(aStruSF2)
							aadd(aSF2,SF2->(FieldGet(FieldPos(aStruSF2[nY][1]))))
						Next nY
						RecLock("SF2",.T.)
						For nY := 1 To Len(aStruSF2)
							FieldPut(nY,aSF2[nY])
						Next nY
					Else
						RecLock("SF2",.T.)
						For nY := 1 To Len(aStruSF2)
							FieldPut(nY,aSF2[nY])
						Next nY
						cEstado := aSF2[nPEstado]
					EndIf
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//ЁPosiciona Registros                                                     Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If  ( SF2->F2_TIPO $ "DB" )
						dbSelectArea("SA2")
						dbSetOrder(1)
						MsSeek(xFilial("SA2")+SF2->F2_CLIENTE+SF2->F2_LOJA)
						If Empty(cEstado)
						    If SF2->F2_CLIENTE+SF2->F2_LOJA == aSD2[nX][nPCliente]+aSD2[nX][nPLoja]
								cEstado := SA2->A2_EST
                            Else
								cEstado := aSD2[nX][nPEstDest]
                            EndIf
						EndIf
					Else
						dbSelectArea("SA1")
						dbSetOrder(1)
						MsSeek(xFilial("SA1")+SF2->F2_CLIENTE+SF2->F2_LOJA)
						If Empty(cEstado)
						    If SF2->F2_CLIENTE+SF2->F2_LOJA == aSD2[nX][nPCliente]+aSD2[nX][nPLoja]
								cEstado := SA1->A1_EST
                            Else
								cEstado := aSD2[nX][nPEstDest]
                            EndIf
						EndIf
					EndIf
					dbSelectArea("SA4")
					dbSetOrder(1)
					If SA4->(dbSeek(xFilial("SA4")+SF2->F2_TRANSP))
						aTransp[01] := SA4->A4_EST
						aTransp[02] := Iif(SA4->(FieldPos("A4_TPTRANS")) > 0,SA4->A4_TPTRANS,"")
					Endif
					SF2->F2_NFORI   := SF2->F2_DOC
					SF2->F2_SERIORI := SF2->F2_SERIE
					SF2->F2_DOC     := cNumNFS
					SF2->F2_SERIE   := cSerieNFS
					SF2->F2_CLIENTE := aSD2[nX][nPCliente]
					SF2->F2_LOJA    := aSD2[nX][nPLoja]
					SF2->F2_TIPO    := aSD2[nX][nPTipo]
					SF2->F2_CARGA   := ""
					SF2->F2_SEQCAR  := ""
					SF2->F2_EST     := cEstado
					SF2->F2_EMISSAO := dDataBase
					SF2->F2_ESPECIE := A460Especie(cSerieNFS)
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Complemento da gravacao do SF2                                         Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					Eval(bSF2,1)				
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//ЁInicializa cabecalho da funcao fiscal                                   Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					MaFisSave()
					MaFisEnd()
					MaFisIni(SF2->F2_CLIENTE,SF2->F2_LOJA,IIF(SF2->F2_TIPO$'DB',"F","C"),SF2->F2_TIPO,SF2->F2_TIPOCLI,aRelImp,,,,'MATA461',,,,,,IIf(lCliDes,SF2->F2_CLIENT,""),IIf(lCliDes,SF2->F2_LOJENT,""),aTransp,,,,,,,,SF2->F2_TPFRETE)
					If !Empty(SF2->F2_EST)
						If SF2->F2_TIPO$"DB"
							MaFisAlt("NF_UFORIGEM",SF2->F2_EST)
						Else
							MaFisAlt("NF_UFDEST",SF2->F2_EST)
						EndIf
					EndIf
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Carrega os valores da funcao fiscal (Total)                            Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					dbSelectArea("SF2")
					For nY := 1 To Len(aRelImp)
						If aRelImp[nY][1] == "SF2"
							MaFisLoad(aRelImp[nY][3],SF2->(FieldGet(FieldPos(aRelImp[nY][2]))))
						EndIf
					Next nY					

				Else
					cItemSD2 := Soma1(cItemSD2)
				EndIf

				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Executa code block para tratamento do fiscal.                          Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды				
				If bFiscalSF2 <> NIL
					Eval(bFiscalSF2)
				EndIf

				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Inicia a Gravacao do Cabecalho - SD2                                   Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				aSD2[nX,nPNumSeq] := SF4->(ProxNum())
				aSD2[nX,nPDoc]    := cNumNFS
				aSD2[nX,nPSerie]  := cSerieNFS
				aSD2[nX,nPItem]   := cItemSD2
				RecLock("SD2",.T.)
				For nY := 1 To Len(aSD2[nX])
					FieldPut(nY,aSD2[nX][nY])
				Next nY
				SD2->D2_IDENTB6 := IIf(SD2->D2_TIPO$"CIP",SD2->D2_IDENTB6,"")
				SD2->D2_EMISSAO := dDataBase				
				//Tratamento para grava o percentual da comissЦo para TMS
                If nModulo == 43
					If !Empty(SA1->A1_VEND)
						If !Empty(SA1->A1_COMIS)				
							SD2->D2_COMIS1 := SA1->A1_COMIS
						Else
							SD2->D2_COMIS1 := Posicione("SA3", 1, xFilial("SA3") + SA1->A1_VEND, "A3_COMIS")
						EndIf
					Endif
				EndIf

				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Verifica o Poder de terceiros                                          Ё
				//Ё                                                                        Ё
				//Ё Neste ponto sera realizado o FIFO do poder de terceiro caso nao seja   Ё
				//Ё informado a rotina qual identificador deve ser utilizado para o retornoЁ
				//Ё do material                                                            Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If Empty(SD2->D2_IDENTB6)
					dbSelectArea("SF4")
					dbSetOrder(1)
					MsSeek(xFilial("SF4")+SD2->D2_TES)
					If SF4->F4_PODER3=="D"
						nSldSB6    := 0
						nQtdSB6    := SD2->D2_QUANT
						lFirst     := .T.

						dbSelectArea("SB6")
						dbSetOrder(2)
						#IFDEF TOP
							lQuery    := .T.
							cAliasSB6 := "MANFS2NFS_SB6"
							aStruSB6  := SB6->(dbStruct())

							cQuery := "SELECT * "
							cQuery += "FROM "+RetSqlName("SB6")+" SB6 "
							cQuery += "WHERE SB6.B6_FILIAL='"+xFilial("SB6")+"' AND "
							cQuery += "SB6.B6_PRODUTO='"+SD2->D2_COD+"' AND "
							cQuery += "SB6.B6_CLIFOR='"+SD2->D2_CLIENTE+"' AND "
							cQuery += "SB6.B6_LOJA='"+SD2->D2_LOJA+"' AND "
							cQuery += "SB6.B6_PODER3='R' AND "
							cQuery += "SB6.B6_TPCF='"+IIf(SD2->D2_TIPO$"DB","F","C")+"' AND "
							cQuery += "SB6.D_E_L_E_T_=' ' "
							cQuery += "ORDER BY "+SqlOrder(SB6->(IndexKey()))

							cQuery := ChangeQuery(cQuery)

							dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSB6,.T.,.T.)

							For nZ := 1 To Len(aStruSB6)
								If aStruSB6[nZ][2]<>"C"
									TcSetField(cAliasSB6,aStruSB6[nZ][1],aStruSB6[nZ][2],aStruSB6[nZ][3],aStruSB6[nZ][4])
								EndIf
							Next nZ
						#ELSE
							MsSeek(xFilial("SB6")+SD2->D2_COD+SD2->D2_CLIENTE+SD2->D2_LOJA+"R")
						#ENDIF
						While !Eof() .And. (cAliasSB6)->B6_FILIAL == xFilial("SB6") .And.;
								(cAliasSB6)->B6_PRODUTO == SD2->D2_COD .And.;
								(cAliasSB6)->B6_CLIFOR == SD2->D2_CLIENTE .And.;
								(cAliasSB6)->B6_LOJA == SD2->D2_LOJA .And.;
								(cAliasSB6)->B6_PODER3 == 'R' .And. nQtdSB6 > 0

							If (cAliasSB6)->B6_TPCF == IIf(SD2->D2_TIPO$"DB","F","C")

								//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
								//Ё Verifica o saldo o poder de terceiro                                   Ё
								//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды										
								nSldSB6 := Min((cAliasSB6)->B6_SALDO - (cAliasSB6)->B6_QULIB,nQtdSB6)

								If nSldSB6 > 0
									//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
									//Ё Posiciona Registros                                                    Ё
									//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
									dbSelectArea("SD1")
									dbSetOrder(4)
									MsSeek(xFilial("SD1")+(cAliasSB6)->B6_IDENT)
									//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
									//Ё Ajusta o Documento de Saida para a quantidade em poder de terceiro     Ё
									//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды							
									If lFirst
										SD2->D2_DESCON  := A410Arred(SD1->D1_VALDESC/SD1->D1_QUANT*nSldSB6,"D2_DESCON")
										SD2->D2_QUANT   := nSldSB6
										SD2->D2_PRCVEN  := A410Arred((SD1->D1_TOTAL-SD1->D1_VALDESC)/SD1->D1_QUANT,"D2_PRCVEN")
										SD2->D2_TOTAL   := A410Arred(SD2->D2_QUANT*SD2->D2_PRCVEN,"D2_TOTAL")
										SD2->D2_QTSEGUM := SF4->(ConvUm(SD2->D2_COD,SD2->D2_QUANT,0,2))
										SD2->D2_IDENTB6 := (cAliasSB6)->B6_IDENT
										SD2->D2_NFORI   := SD1->D1_DOC
										SD2->D2_SERIORI := SD1->D1_SERIE
										SD2->D2_ITEMORI := SD1->D1_ITEM
										SD2->D2_LOCAL   := (cAliasSB6)->B6_LOCAL
										SD2->D2_LOTECTL := SD1->D1_LOTECTL
										SD2->D2_NUMLOTE := SD1->D1_NUMLOTE
										SD2->D2_DTVALID := SD1->D1_DTVALID
										SD2->D2_POTENCI := SD1->D1_POTENCI

										nQtdSB6 -= SD2->D2_QUANT
										lFirst := .F.
									Else
										aadd(aSD2,aClone(aSD2[nX]))
										aSD2[Len(aSD2)][nPDescon ] := A410Arred(SD1->D1_VALDESC/SD1->D1_QUANT*nSldSB6,"D2_DESCON")
										aSD2[Len(aSD2)][nPQuant  ] := nSldSB6
										aSD2[Len(aSD2)][nPTotal  ] := A410Arred(aSD2[Len(aSD2)][nPQuant]*aSD2[Len(aSD2)][nPPrcVen],"D2_TOTAL")
										aSD2[Len(aSD2)][nPQtSegum] := SF4->(ConvUm(SD2->D2_COD,aSD2[Len(aSD2)][nPQuant],0,2))
										aSD2[Len(aSD2)][nPIdentB6] := (cAliasSB6)->B6_IDENT
										aSD2[Len(aSD2)][nPLoteCtl] := SD1->D1_LOTECTL
										aSD2[Len(aSD2)][nPNumLote] := SD1->D1_NUMLOTE
										aSD2[Len(aSD2)][nPDtValid] := SD1->D1_DTVALID
										aSD2[Len(aSD2)][nPPotenc]  := SD1->D1_POTENCI											

										nQtdSB6 -= aSD2[Len(aSD2)][nPQuant]
									EndIf
								EndIf
							EndIf
							dbSelectArea(cAliasSB6)
							dbSkip()
						EndDo
						If lQuery
							dbSelectArea(cAliasSB6)
							dbCloseArea()
							dbSelectArea("SB6")
						EndIf				
					EndIf
				EndIf
				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Atualiza CAT/83										    Ё
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If SD2->(FieldPos("D2_CODLAN")) > 0 .And. SF4->(FieldPos("F4_CODLAN")) > 0 .And. SuperGetMV("MV_CAT8309",,.T.)
					SD2->D2_CODLAN := IIF(SD2->D2_TES == SF4->F4_CODIGO,SF4->F4_CODLAN,Posicione("SF4",1,xFilial("SF4")+SD2->D2_TES,"F4_CODLAN"))
				EndIf
			   
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Complemento da gravacao do SD2                                         Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				Eval(bSD2,2,aSD2)
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Carga do Funcao fiscal para o Item                                     Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If Alltrim(SD2->D2_TIPO) == "D" 
					dbSelectArea("SD1")
					dbSetOrder(1)
					If ( MsSeek(xFilial()+SD2->D2_NFORI+SD2->D2_SERIORI+SD2->D2_CLIENTE+SD2->D2_LOJA+SD2->D2_COD) )
						MaFisIniLoad(nItemNf2,{Space(Len(SD2->D2_COD)), ,,0,,,0,0,SD1->(RecNo()),,},.T.)  
					EndIf
				Else       
					MaFisIniLoad(nItemNf2,Nil,.T.)				
				EndIf
				For nZ := 1 To Len(aRelImp)
					If aRelImp[nZ][1] == "SD2"
						MaFisLoad(aRelImp[nZ][3],SD2->(FieldGet(FieldPos(aRelImp[nZ][2]))),nItemNF2)						
					EndIf
				Next nZ
				MaFisEndLoad(nItemNf2,2)  
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁTratamento para LegislaГЦo de Carga TributАria - Lei n╨ 12.741/2012 (Lei da TransparЙncia)        Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If lLeiTran .And. FindFunction("AlqLei2741")
				    If SF2->F2_TIPOCLI == "F"  // LegislaГЦo aplicada apenas para cliente consumidor final
					 	// FunГЦo Fiscal para retorno da carga trubutАria
						nAlqLeiTr := AlqLei2741(SB1->B1_POSIPI,SB1->B1_EX_NCM,SB1->B1_CODISS,SF2->F2_EST,SA1->A1_COD_MUN,SC9->C9_PRODUTO,nItemNF2,SC9->C9_NUMLOTE,SC9->C9_LOTECTL,cMvFisCTrb, cMvFisAlCT,lMvFisFRas)
						nTotAlq := (nAlqLeiTr / 100) * SD2->D2_VALBRUT
						SD2->D2_TOTIMP := nTotAlq
						nTotCargT += SD2->D2_TOTIMP
					EndIf	
				EndIf				
				aadd(aRegSD2,SD2->(RecNo()))
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Verifica a quebra de nota fiscal                                       Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If ( aEntry[EP_M460NITE] )
					nItemNf := ExecBlock("M460NITE",.F.,.F.,{Len(aSD2),aSD2})
				EndIf					
				If nX == Len(aSD2) .Or. nItemNF2 >= nItemNF				
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Complemento da gravacao do SF2                                         Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					Eval(bSF2,2)
					
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Posiciona registros                                                    Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If SF2->F2_TIPO$"DB"
						dbSelectArea("SA2")
						dbSetOrder(1)
						MsSeek(xFilial("SA2")+SF2->F2_CLIENTE+SF2->F2_LOJA)
					Else
						dbSelectArea("SA1")
						dbSetOrder(1)
						MsSeek(xFilial("SA1")+SF2->F2_CLIENTE+SF2->F2_LOJA)
					EndIf
					dbSelectArea("SE4")
					dbSetOrder(1)
					MsSeek(xFilial("SE4")+SF2->F2_COND)

					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Regrava os itens da nota fiscal de saida apos alteracao                Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					For nY := 1 To Len(aRegSD2)	
						SD2->(MsGoto(aRegSD2[nY]))
						RecLock("SD2",.F.)						
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Posiciona registros                                                    Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды	
						dbSelectArea("SB1")
						dbSetOrder(1)
						MsSeek(xFilial("SB1")+SD2->D2_COD)

						dbSelectArea("SB2")
						dbSetOrder(1)
						MsSeek(xFilial("SB2")+SD2->D2_COD+SD2->D2_LOCAL)

						dbSelectArea("SF4")
						dbSetOrder(1)
						MsSeek(xFilial("SF4")+SD2->D2_TES)

						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Atualiza os dados fiscais                                              Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						If MaFisRet(nY,"IT_TES")==SD2->D2_TES
							MaFisAlt("IT_TES","",nY)
						EndIf
						MaFisAlt("IT_TES",SD2->D2_TES,nY)

						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Executa code block para tratamento do fiscal.                          Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды				
						If bFiscalSD2 <> NIL
							Eval(bFiscalSD2)
						EndIf

						SF4->(MaFisWrite(2,"SD2",nY))
						SD2->D2_VALICM  := SF4->(MaFisRet(nY,'IT_VALICM')+MaFisRet(nY,'IT_VALISS'))
						SD2->D2_BASEICM := SF4->(MaFisRet(ny,'IT_BASEICM')+MaFisRet(nY,'IT_BASEISS'))
						SD2->D2_PICM    := SF4->(If(SF4->F4_ISS=="S",MaFisRet(nY,'IT_ALIQISS'),MaFisRet(nY,'IT_ALIQICM')))
						SD2->D2_DESCZFR := SF4->(MaFisRet(nY,'IT_DESCZF'))
						SD2->D2_TOTAL	 := SD2->D2_TOTAL - SD2->D2_DESCON - IIf(SF4->F4_AGREG$"R", MaFisRet(nY,"IT_DEDICM") , 0)
						SD2->D2_PRCVEN  := A410Arred(SD2->D2_TOTAL/IIf(SD2->D2_QUANT==0,1,SD2->D2_QUANT),"D2_PRCVEN")
 
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Desconta o Valor do ICMS DESONERADO do valor do Item D2_PRCVEN         Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						If SF4->F4_AGREG$"R"
							nDedICM += MaFisRet(nY,'IT_DEDICM')
		    			EndIf

						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Pontos de Entrada                                                      Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						If ( aEntry[EP_MSD2UMT] )
							SD2->D2_QTSEGUM := ExecTemplate("MSD2UM2",.F.,.F.,0)
						EndIf
						If ( aEntry[EP_MSD2UM2] )
							SD2->D2_QTSEGUM := ExecBlock("MSD2UM2",.F.,.F.,0)
						EndIf
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//ЁCalculo dos Impostos Financeiros                                        Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						If ( SF4->F4_DUPLIC=="S" )
							aTitulo[_VLRTIT_]  += MaFisRet(nY,'IT_BASEDUP')
							aTitulo[_VLRIRRF_] += MaFisRet(nY,'IT_VALIRR')
							aTitulo[_VLRINSS_] += MaFisRet(nY,'IT_VALINS')
							aTitulo[_VLRINSS_] += MaFisRet(nY,'IT_VALINA')
							aTitulo[_VLRISS_]  += MaFisRet(nY,'IT_VALISS')
							aTitulo[_VLRPIS_]  += MaFisRet(nY,'IT_VALPIS')
							aTitulo[_VLRCSLL_] += MaFisRet(nY,'IT_VALCSL')
							aTitulo[_VLRCOFI_] += MaFisRet(nY,'IT_VALCOF')
							aTitulo[_VLRFET_]  += MaFisRet(nY,'IT_VALFET')
							aTitulo[_VLRFAB_]  += MaFisRet(nY,'IT_VALFAB')							
							aTitulo[_VLRFAC_]  += MaFisRet(nY,'IT_VALFAC')
							aTitulo[_VLRTPDP_] += MaFisRet(nY,'IT_VALTPDP')									
						EndIf			
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Atualiza os acumulados do SD2                                          Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						MaAvalSD2(,,lAtuSA7,nY)
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Contabilizacao dos itens                                               Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						If ( lLct610 )
							nLctTotal += DetProva(nHdlPrv,"610","MATA460",cLote)
						EndIf
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Grava os lancamentos nas contas orcamentarias SIGAPCO    Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						PcoDetLan("000101","01","MATA461")
						If (SB1->(FieldPos(cMV_B1M996))>0) .And. cB1M996 <> "1"
							cB1M996	:=	SB1->(FieldGet(FieldPos(cMV_B1M996)))
						EndIf						
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//ЁAtendimento ao DECRETO 5.052, DE 08/01/2004 para o municipio de ARARAS. Ё
						//ЁMais especificamente o paragrafo unico do Art 2.                        Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						If (SB1->(FieldPos("B1_FRETISS"))>0) .And. cB1FRETISS <> "2"
							cB1FRETISS	:=	SB1->B1_FRETISS
						EndIf
					Next nY
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Regrava o Cabecalho da Nota Fiscal de Saida                            Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					MaFisWrite(,"SF2")
					MaAvalSF2(lNoFiscal)

					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//ЁTratamento para LegislaГЦo de Carga TributАria - Lei n╨ 12.741/2012 (Lei da TransparЙncia)        Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If lLeiTran .And. FindFunction("AlqLei2741")
						SF2->F2_TOTIMP := nTotCargT
						SF2->F2_TIPIMP := cMvFisCTrb
					EndIf
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Desconta o Valor do ICMS DESONERADO do valor do Item D2_PRCVEN         Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If nDedICM > 0
						SF2->F2_VALMERC -= nDedICM 
					EndIf
			
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Gravacao do Financeiro                                                 Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If aTitulo[_VLRTIT_] > 0
						lFatSE1 := Eval(bFatSE1)
						If nModulo == 43 .And. SuperGetMv("MV_TMSMFAT") == "2" .And. !lFatSE1
							SF2->F2_VALFAT := aTitulo[_VLRTIT_]
						Else
							If nModulo == 43 .And. SF2->(FieldPos("F2_MOEDA")) > 0 //-- CRT - Conhecimento Transporte Internacional
								nMoeda:= SF2->F2_MOEDA
							EndIf
							MaNfs2Fin(aTitulo,nMoeda,cBanco,,,,, MaFisRet(,"NF_RECISS"), cB1M996, cB1FRETISS )
						EndIf
					EndIf
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Gravacao do Fiscal                                                     Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					if !empty(SF2->F2_PDV)
						//Chama a "MaFisAtuSF3" de forma diferenciada para gravar tambem os campos F3_PDV e FT_PDV
						MaFisAtuSF3(1,"S",SF2->(Recno()),"SF2",NIL,NIL,"LOJA701")
					else
						MaFisAtuSF3(1,"S",SF2->(RecNo()))
					endif
					
					MAFISCDA(,2)	//Gravacao dos lancamentos fiscais
					
					//зддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Atualiza dados dos complementos SPED automaticamente
					//зддддддддддддддддддддддддддддддддддддддддддддддддддд©
					If lMvAtuComp
						AtuComp(SF2->F2_DOC,SF2->F2_SERIE,SF2->F2_ESPECIE,SF2->F2_CLIENTE,SF2->F2_LOJA,"S",SF2->F2_TIPO)
					EndIf
					
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Termino da Gravacao                                                    Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//ЁPara a localizacao Mexico, sera processada a funcao do ponto de entrada SF2460I no padrao.Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If cPaisLoc == "MEX"
						RcFatMex()
					Endif
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Pontos de Entrada                                                      Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If aEntry[EP_SF2460T]
						ExecTemplate("SF2460I",.F.,.F.)
					EndIf
					
					If nModulo == 72
						KEXF990()
					EndIf  
					
					If aEntry[EP_SF2460I]
						ExecBlock("SF2460I",.F.,.F.)
					EndIf       
					
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Contabilizacao do Cabecalho                                            Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды					
					If ( llCt620 )
						nLctTotal += DetProva(nHdlPrv,"620","MATA460",cLote)
						aLancCtb := {{"F2_DTLANC",dDataBase,"SF2",SF2->(Recno()),0,0,0}}
					EndIf
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Grava os lancamentos nas contas orcamentarias SIGAPCO    Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					PcoDetLan("000101","02","MATA461")
					
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Restaura a pilha da funcao fiscal                                      Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					lRetorno := .T.
					cItemSD2 := ""
					cNumNFS  := ""
					MaFisEnd()
					MaFisRestore()
					nItemNF2 := 0
					aRegSD2  := {}
					aTitulo  := { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0, 0 }
				EndIf
				nX++
				nItemNF2++				
			EndDo
			aSD2    := {}
			aRegSD2 := {}
		EndIf
	Next nItensSD2
Else
	ConOut("WARNING: DEADLOCK CONTROL IS ON")
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Restaura a integridade da rotina                                       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
RestArea(aAreaSD2)
RestArea(aAreaSF2)
RestArea(aArea)

Return( lRetorno )

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMaAvalSF2 Ё Autor ЁEduardo Riera          Ё Data Ё28.08.1999Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁRotina de atualizacao dos acumulados do SF2                 Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ                                                            Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function MaAvalSF2(lNoFiscal)

Local cEstado     := SF2->F2_EST
Local lTMSUFPAG   := SuperGetMv("MV_TMSUFPG",.F.,.F.) //-- Define se grava o estado do pagador do frete.
Default lNoFiscal := .F.

//здддддддддддддддддддддддддддддддд©
//ЁEfetua a gravacao dos Impostos  Ё
//юдддддддддддддддддддддддддддддддды
If !lNoFiscal
	MaFisWrite(2,"SF2")
	SF2->F2_VALMERC    := MaFisRet(,"NF_VALMERC")-MaFisRet(,"NF_DESCONTO")
	SF2->F2_VALIRRF    := 0
	If lTMSUFPAG .And. !Empty(MaFisRet(,"NF_PNF_UF")) .And. ("CTR"$SF2->F2_ESPECIE .Or. "NFST"$SF2->F2_ESPECIE .Or. "CTE"$SF2->F2_ESPECIE .Or. "RPS"$SF2->F2_ESPECIE)
		SF2->F2_EST	:= MaFisRet(,"NF_PNF_UF")
	Else
		SF2->F2_EST := Iif(Empty(cEstado),SF2->F2_EST,cEstado)
	EndIf
EndIf

If ( aEntry[EP_MTASF2] )
	Execblock("MTASF2",.F.,.F.)
EndIf

Return( .T. )

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMaAvalSD2 Ё Autor ЁEduardo Riera          Ё Data Ё28.08.1999Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁRotina de atualizacao dos acumulados do SD2                 Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpN1: Numero do evento                                (OPC)Ё╠╠
╠╠Ё          ЁExpC2: Ponteiro do SD2                                 (OPC)Ё╠╠
╠╠Ё          ЁExpL3: Atualiza amarracao ProdutoxCliente              (OPC)Ё╠╠
╠╠Ё          ЁExpN4: Item da funcao fiscal                                Ё╠╠
╠╠Ё          ЁExpL5: Forca a atualizacao de estoque                  (OPC)Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function MaAvalSD2(nEvento,cAliasSD2,lAtuSA7,nItem,lForceEst)

Local aArea     := GetArea("SD2")
Local aAreaSF4  := SF4->(GetArea("SF4"))
Local aEnvCus   := {}
Local aCusto    := {}
Local nCntFor   := 0   
Local nPrecoSa7 := 0
Local lSa7Lista := (SuperGetMv("MV_PRCAMAR",.F.,"1") == "1")
Local lIntePms  := (SuperGetMv("MV_INTPMS") = "S")
Local cNFNAmar  := SuperGetMv("MV_NFNAMAR",.F.,"DB") //Tipos de notas fiscais que NAO deverao atualizar amarracao
Local lTMSUFPAG := SuperGetMv("MV_TMSUFPG",.F.,.F.) //-- Define se grava o estado do pagador do frete.
Local lAtuSB3   := .T. // variavel utilizada no PE M461SB3
Local lM461SB3  := ExistBlock("M461SB3")
Local lIntACD	:= SuperGetMV("MV_INTACD",.F.,"0") == "1"
Local aDadosCfo := {}

DEFAULT nEvento   := 1
DEFAULT cAliasSD2 := "SD2"
DEFAULT lAtuSA7   := .F.
DEFAULT lForceEst := !(GetNewPar("MV_NFS_JOB",.F.) .And. SC9->(FieldPos("C9_NUMSEQ"))<>0)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁTrava o SD2 corrente                                                    Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If cAliasSD2=="SD2"
	RecLock("SD2")
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁPesquisando o Pagador do Frete                                          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If nItem > 0
	If lTMSUFPAG .And. !Empty(MaFisRet(,"NF_PNF_UF")) .And. ("CTR"$SF2->F2_ESPECIE.Or."NFST"$SF2->F2_ESPECIE .Or. "CTE"$SF2->F2_ESPECIE .Or. "RPS"$SF2->F2_ESPECIE)
	   SD2->D2_EST	:= MaFisRet(,"NF_PNF_UF")
	Else
		SD2->D2_EST	:= MaFisRet(,"NF_UFDEST")
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁPosiciona Registros                                                     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SF4")
If xFilial("SF4")+(cAliasSD2)->D2_TES<>SF4->F4_FILIAL+SF4->F4_CODIGO
	dbSelectArea("SF4")
	dbSetOrder(1)
	MsSeek(xFilial("SF4")+(cAliasSD2)->D2_TES)
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVerifica o Poder de Terceiro para analisar a necessidade de troca da TESЁ
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !Empty(SD2->D2_IDENTB6) .And. SF4->F4_PODER3=="N"
	SD2->D2_TES := SF4->F4_TESP3
	SF4->(MsSeek(xFilial("SF4")+SF4->F4_TESP3))

 	Aadd(aDadosCfo,{"OPERNF"  ,"S"})
 	Aadd(aDadosCfo,{"TPCLIFOR",SF2->F2_TIPOCLI})
 	Aadd(aDadosCfo,{"UFDEST"  ,IIf(SF2->F2_TIPO$"DB",SA2->A2_EST,SA1->A1_EST)})
 	Aadd(aDadosCfo,{"INSCR"   ,IIf(SF2->F2_TIPO$"DB",SA2->A2_INSCR,SA1->A1_INSCR)})
	If SA1->(FieldPos("A1_CONTRIB")) > 0 .And. !(SF2->F2_TIPO$"DB")
		Aadd(aDadosCfo,{"CONTR",SA1->A1_CONTRIB})
	EndIf	
	SD2->D2_CF := MaFisCfo(,SF4->F4_CF,aDadosCfo)
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁAtualiza Estoque                                                        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( SF4->F4_ESTOQUE == "S" )
	If nItem > 0
		If (cAliasSD2)->D2_TIPO == "D" .And. (cAliasSD2)->D2_QUANT == SD1->D1_QUANT //Devolucao Total
			aEnvCus:={MaFisRet(nItem,'IT_TOTAL')-MaFisRet(nItem,'IT_VALIPI'),;
				SD1->D1_VALIPI,;
				SD1->D1_VALICM-SD1->D1_ICMSCOM,;
				SF4->F4_CREDIPI,;
				SF4->F4_CREDICM,;
				MaFisRet(nItem,'IT_NFORI'),;
				MaFisRet(nItem,'IT_SERORI'),;
				SD2->D2_COD,;
				SD2->D2_LOCAL,;
				SD2->D2_QUANT,;
				If(SF4->F4_IPI=='R',SD1->D1_IPI,0),;
				SF4->F4_CREDST,;
				SD1->D1_ICMSRET,;
				SF4->F4_PISCOF,;
				SF4->F4_PISCRED,;
				MaFisRet(nItem,"IT_VALPS2") }
		Else
			aEnvCus:={MaFisRet(nItem,'IT_TOTAL')-MaFisRet(nItem,'IT_VALIPI'),;
				MaFisRet(nItem,'IT_VALIPI'),;
				MaFisRet(nItem,'IT_VALICM'),;
				SF4->F4_CREDIPI,;
				SF4->F4_CREDICM,;
				MaFisRet(nItem,'IT_NFORI'),;
				MaFisRet(nItem,'IT_SERORI'),;
				SD2->D2_COD,;
				SD2->D2_LOCAL,;
				SD2->D2_QUANT,;
				If(SF4->F4_IPI=='R',MaFisRet(nItem,'IT_VALIPI'),0),;
				SF4->F4_CREDST,;
				MaFisRet(nItem,"IT_VALSOL"),;
				SF4->F4_PISCOF,;
				SF4->F4_PISCRED,;
				MaFisRet(nItem,"IT_VALPS2") }
		EndIf
		SD2->(FkCommit(.T.))
		aCusto := PegaCMAtu((cAliasSD2)->D2_COD,(cAliasSD2)->D2_LOCAL,If(SF4->F4_PODER3=="D".Or.SF4->F4_QTDZERO=="1","D",(cAliasSD2)->D2_TIPO),aEnvCus, (If(SF4->F4_PODER3=="D","D",(cAliasSD2)->D2_TIPO)=="D" ) )		
		
		If ExistBlock("M460CUST")
			aCusto := ExecBlock("M460CUST",.F.,.F.,{aCusto})
		EndIf
		
		aCusto := GravaCusD2(aCusto,If(SF4->F4_PODER3=="D".Or.SF4->F4_QTDZERO=="1","D",(cAliasSD2)->D2_TIPO))
		If ExistBlock("M460GCUS")
			aCusto := ExecBlock("M460GCUS",.F.,.F.,{aEnvCus})
		EndIf
	EndIf
	If lForceEst
		If nItem > 0
			If !Empty((cAliasSD2)->D2_PEDIDO)
				B2AtuComD2(aCusto,,{ {(cAliasSD2)->D2_PEDIDO,(cAliasSD2)->D2_ITEMPV,SC9->C9_SEQUEN,(cAliasSD2)->D2_QUANT,(cAliasSD2)->D2_QTSEGUM} })
			Else
				B2AtuComD2(aCusto,,,.F.)
			EndIf
		Else
			B2AtuComD2({SD2->D2_CUSTO1,SD2->D2_CUSTO2,SD2->D2_CUSTO3,SD2->D2_CUSTO4,SD2->D2_CUSTO5},,{ {SD2->D2_PEDIDO,SD2->D2_ITEMPV,SC9->C9_SEQUEN,SD2->D2_QUANT,SD2->D2_QTSEGUM} })
		EndIf

		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁEfetua a Atualizacao da Assistencia Tecnica                             Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If ( SF4->F4_ATUTEC=="S" )
			If !( Localiza((cAliasSD2)->D2_COD) )
				If ( !Empty((cAliasSD2)->D2_NUMSERI) )
					AtTrfEqpto((cAliasSD2)->D2_CODFAB,(cAliasSD2)->D2_LOJAFA,(cAliasSD2)->D2_COD,(cAliasSD2)->D2_NUMSERI,(cAliasSD2)->D2_CLIENTE,(cAliasSD2)->D2_LOJA)
					If ( aEntry[EP_M460ATEC] )
						ExecBlock("M460ATEC",.F.,.F.)
					EndIf
				EndIf
			Else
				dbSelectArea("SDB")
				dbSetOrder(1)
				If ( MsSeek(xFilial("SDB")+(cAliasSD2)->D2_COD+(cAliasSD2)->D2_LOCAL+(cAliasSD2)->D2_NUMSEQ+(cAliasSD2)->D2_DOC+(cAliasSD2)->D2_SERIE+(cAliasSD2)->D2_CLIENTE+(cAliasSD2)->D2_LOJA) )
					dbEval({||  AtTrfEqpto((cAliasSD2)->D2_CODFAB,(cAliasSD2)->D2_LOJAFA,(cAliasSD2)->D2_COD,SDB->DB_NUMSERI,(cAliasSD2)->D2_CLIENTE,(cAliasSD2)->D2_LOJA) ,;
						If(aEntry[EP_M460ATEC],ExecBlock("M460ATEC",.F.,.F.),Nil) },;
						{|| !Empty(SDB->DB_NUMSERI)},;
						{||   xFilial("SDB") == SDB->DB_FILIAL .And.;
						(cAliasSD2)->D2_COD    == SDB->DB_PRODUTO .And.;
						(cAliasSD2)->D2_LOCAL  == SDB->DB_LOCAL .And.;
						(cAliasSD2)->D2_NUMSEQ == SDB->DB_NUMSEQ .And.;
						(cAliasSD2)->D2_DOC    == SDB->DB_DOC .And.;
						(cAliasSD2)->D2_SERIE  == SDB->DB_SERIE .And.;
						(cAliasSD2)->D2_CLIENTE== SDB->DB_CLIFOR .And.;
						(cAliasSD2)->D2_LOJA   == SDB->DB_LOJA },,,.T.)
				EndIf
			EndIf
		EndIf
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Atualiza Demandas                                                      Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Ponto de entrada - Verifica se deve ou nao atualizar o consumo mensal "SB3" Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If lM461SB3
			lAtuSB3 := ExecBlock("M461SB3", .F., .F. , {})
			If ValType(lAtuSB3) <> "L"
				lAtuSB3 := .T. // por padrao atualizara a "SB3"
			EndIf
		EndIf

		If (cAliasSD2)->D2_TIPO $ "NB" .And. SF4->F4_PODER3 $ " |R|N" .And. lAtuSB3
			dbSelectArea("SB3")
			dbSetOrder(1)
			If ( MsSeek(xFilial("SB3")+(cAliasSD2)->D2_COD) )
				RecLock("SB3")
			Else
				RecLock("SB3",.T.)
				SB3->B3_FILIAL := xFilial("SB3")
				SB3->B3_COD    := (cAliasSD2)->D2_COD
			EndIf
			FieldPut(FieldPos("B3_Q"+StrZero(Month((cAliasSD2)->D2_EMISSAO),2)),(cAliasSD2)->D2_QUANT+FieldGet(FieldPos("B3_Q"+StrZero(Month((cAliasSD2)->D2_EMISSAO),2))))
			SB3->B3_MES := (cAliasSD2)->D2_EMISSAO
			MsUnLock()
		EndIf
	EndIf
EndIf
If lForceEst
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁAtualiza Poder de Terceiro                                              Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If SF4->F4_PODER3<>"N" .And. cAliasSD2=="SD2"
		RecLock("SD2")
		MaAtuSB6("SD2",3)
	EndIf
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁAtualiza os arquivos de gerenciamento de Projetos                       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lIntePms 
	SF4->(PmsWriteD2(1,"SD2"))
Endif
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Atualizacao da amarracao cliente x Produto                             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( lAtuSA7 ) .And. !((cAliasSD2)->D2_TIPO $ cNFNAmar) 

	nPrecoSA7 := Iif(lSa7Lista,(cAliasSD2)->D2_PRUNIT,(cAliasSD2)->D2_PRCVEN)

	dbSelectArea("SA7")
	dbSetOrder(1)
	If !(MsSeek(xFilial("SA7")+(cAliasSD2)->D2_CLIENTE+(cAliasSD2)->D2_LOJA+(cAliasSD2)->D2_COD))
		Reclock("SA7",.T.)
		SA7->A7_FILIAL := xFilial("SA7")
		SA7->A7_PRODUTO:= (cAliasSD2)->D2_COD
		SA7->A7_CLIENTE:= (cAliasSD2)->D2_CLIENTE
		SA7->A7_LOJA   := (cAliasSD2)->D2_LOJA
		SA7->A7_PRECO01:= nPrecoSa7
		SA7->A7_DTREF01:= (cAliasSD2)->D2_EMISSAO
		MsUnlock()
	Else
		Reclock("SA7",.F.)
		For nCntFor := 1 To 12
			If ( FieldGet(FieldPos("A7_DTREF"+StrZero(nCntFor,2))) == (cAliasSD2)->D2_EMISSAO .And.;
					FieldGet(FieldPos("A7_PRECO"+StrZero(nCntFor,2))) == nPrecoSA7 )					
				lAtuSA7 := .F.
				nCntFor := 13
			EndIf
		Next nCntFor
		If lAtuSA7
			If ( SA7->A7_PRECO12 <> 0 )
				For nCntFor := 2 To 12
					FieldPut(FieldPos("A7_PRECO"+StrZero(nCntFor-1,2)),FieldGet(FieldPos("A7_PRECO"+StrZero(nCntFor,2))))
					FieldPut(FieldPos("A7_DTREF"+StrZero(nCntFor-1,2)),FieldGet(FieldPos("A7_DTREF"+StrZero(nCntFor,2))))
				Next nCntFor
				SA7->A7_PRECO12 := 0
			EndIf
			For nCntFor := 1 To 12
				If ( FieldGet(FieldPos("A7_PRECO"+StrZero(nCntFor,2))) == 0 )
					FieldPut(FieldPos("A7_PRECO"+StrZero(nCntFor,2)),nPrecoSA7)					
					FieldPut(FieldPos("A7_DTREF"+StrZero(nCntFor,2)),(cAliasSD2)->D2_EMISSAO)
					nCntFor := 13
				EndIf
			Next nCntFor
		EndIf
		MsUnLock()
	EndIf
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁGrava informacoes sobre devolucao de compra                             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( SF2->F2_TIPO=="D" )
	dbSelectArea("SF1")
	dbSetOrder(1)
	MsSeek(xFilial("SF1")+(cAliasSD2)->D2_NFORI+(cAliasSD2)->D2_SERIORI+SF2->F2_CLIENTE+SF2->F2_LOJA)

	dbSelectArea("SD1")
	dbSetOrder(1)
	If ( MsSeek(xFilial("SD1")+(cAliasSD2)->D2_NFORI+(cAliasSD2)->D2_SERIORI+SF2->F2_CLIENTE+SF2->F2_LOJA+SC9->C9_PRODUTO+(cAliasSD2)->D2_ITEMORI) )
		RecLock("SD1",.F.)
		SD1->D1_QTDEDEV += (cAliasSD2)->D2_QUANT
		SD1->D1_VALDEV  += (cAliasSD2)->D2_TOTAL
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Atualiza os dados de Rastreabilidade                                   Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If ( Rastro(SC6->C6_PRODUTO) .And. SF4->F4_ESTOQUE == "S" .AND. !(SF2->F2_TIPO) $ "CIP" )
			SD1->D1_NUMLOTE := (cAliasSD2)->D2_NUMLOTE
			SD1->D1_LOTECTL := (cAliasSD2)->D2_LOTECTL
			SD1->D1_DTVALID := (cAliasSD2)->D2_DTVALID
			SD1->D1_POTENCI := (cAliasSD2)->D2_POTENCI
		EndIf
		MsUnLock()
	EndIf
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Chamada para integracao com o modulo ACD		  Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддды
If lIntACD .And. FindFunction("CBMSD2460")
	CBMSD2460()
EndIf

If ( ExistTemplate("MSD2460")  )
	ExecTemplate("MSD2460",.F.,.F.,{cAliasSD2,lForceEst})
EndIf

If nModulo == 72
	KEXF840(cAliasSD2,lForceEst)
EndIf

If ( ExistBlock("MSD2460") )
	ExecBlock("MSD2460",.F.,.F.,{cAliasSD2,lForceEst})
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Restaura a Integridade da Rotina                                       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
RestArea(aAreaSF4)
RestArea(aArea)

Return( .T. )

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё a461Loc    Ё Autor Ё Guilherme C. Leal   Ё Data Ё 04.05.01 Ё╠╠
╠╠цддддддддддеддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Monta TRB para para utilizar A468Fatura pelo OMS           Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё      			                                          Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function a461Loc()
Local aCargas 	:= {}
Local lGerRem	:=.F.
Local aNFs	 	:= {}
Local aRems	 	:= {}
Local aPedidos	:=	{}
Local aLockSC5	:=	{}
Local lContinua :=	.T.
Local lFechou	:=	.T.
Local nX        := 0
Local nPar02Bkp :=	mv_par02
Local nNumLoc   := SuperGetMv("MV_NUMLOCS") // Numero de registros parta travamento na funcao MayIUseCode

PRIVATE cMarcaSC9   := ""
PRIVATE lInverte    := .F.
PRIVATE cCadastro   := OemToAnsi(STR0005)    //"Prepara┤└o da Nota Fiscal"
Private lSeqEspecie:= GetMV("MV_SEQESPE",,.F.)	

SetMaxCodes( nNumLoc)  // funcao para acertar o numero de locs 

cMarcaDAK := ThisMark()
DbSelectArea("DAK")
MsSeek(xFilial())
While !EOF().And.xFilial()==DAK_FILIAL
	If Ismark("DAK_OK")
		aAdd(aCargas,DAK->DAK_COD)
	Endif
	DbSkip()
Enddo
aSort(aCargas)

If Len(aCargas) == 0
	Return
Endif	

If ( ExistBlock("M460BLOC") )
	ExecBlock("M460BLOC",.F.,.F.,{aCargas})
EndIf

SC6->(DbSetOrder(1))
SC5->(DbSetOrder(1))
DbSelectArea("SC9")
DbSetorder(5)

cMarcaSC9 := GetMark(,'SC9','C9_OK')

SetInvert(.F.) 	
//Carragar array dos SC9s que irao gerar Nota fiscal e dos SC9s que irao gerar remito
DbSelectArea("SC9")
MsSeek(xFilial()+aCargas[1] )
While !Eof().And. xFilial('SC9') == C9_FILIAL .And. C9_CARGA <= aCargas[Len(aCargas)]
	lContinua	:=	A461LckSC9(cMarcaSC9,@aNFs,@aRems,@aPedidos,lContinua)
	DbSkip()
Enddo

SC5->(DbSetOrder(1))

lContinua	:=	A461LckSC5(aPedidos,@aNFs,@aRems,@aLockSC5,lContinua)

If Len(aREMS) == 0 .And. Len(aNFs) == 0
	DbSelectArea('DAK')
	Return
Endif

If !lContinua
	lContinua := MsgYesNo(STR0028+Chr(13)+Chr(10)+; //"Uno o mas pedidos no pueden ser facturados/remitidos, si lo desea puede facturarlos/remitirlos en otro momento."
		STR0029,OemToAnsi(STR0020)) //"Confirma facturacion/remision ?"
Endif

If lContinua
	MsAguarde({|| GeraRemFac(@aRems,@lGerRem,@cMarcaSC9,@aNFs)},'Preparando documentos de la carga')
	//Tira os locks do SC5
	//Os locks do SC9 sao tirados dentro das rotinas de faturamento e remito, na medida que vao sendo atualizados
	For nX:=1 To Len(aLockSC5)
		SC5->(MsGoto(aLockSC5[nX]))
		SC5->(MsUnLock())
	Next nX
	//Atualiza o DAK soh se foram faturados/remitidos todos os itens da carga.
	For nX := 1 To Len(aCargas)
		dbSelectArea("SC9")
		dbSetOrder(5)
		MsSeek(xFilial()+aCargas[nX])
		While !EOF().And.SC9->C9_FILIAL+SC9->C9_CARGA == xFilial('SC9')+aCargas[nX]
			//Se algum pedido desta carga nao foi remitido/faturado, o DAK_FEZNF nao e atualizado
			If Empty(SC9->C9_NFISCAL+SC9->C9_REMITO)
				lFechou	:=	.F.
				Exit
			EndIf
			DbSkip()
		Enddo
		If lFechou				
			dbSelectArea("DAK")
			dbSetOrder(1)
			MsSeek(xFilial("DAK")+aCargas[nX])
			RecLock("DAK")
			DAK->DAK_FEZNF := "1"
			MsUnlock()
		EndIf
		lFechou := .T.
	Next nX
Endif	
mv_par02 := nPar02Bkp

SetMaxCodes(20)  // funcao para acertar o numero de locs 

SetInvert(mv_par02==1)

Return( .T. )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁGeraRemFac╨Autor  ЁBruno Sobieski      ╨Fecha Ё  10/10/01   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     ЁGera remitos e notas fiscais para as cargas selecionadas    ╨╠╠
╠╠╨          Ё                                                            ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё AP5                                                        ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function GeraRemFac(aRems,lGerRem,cMarcaSC9,aNFs)
Local aParams	:=	{}
AjustaSx1()
If Len(aREMS) > 0 .And. Pergunte('MT462R',.T.)
	aParams	:=	{mv_par01,mv_par02,mv_par03,mv_par04,mv_par05,mv_par06}
   // Verifica moeda
   
	If  aParams[05] ==2 .and. Recmoeda(dDatabase,aParams[06])<=0
		MsgAlert(OemToAnsi(STR0037))
		Return .F.
	EndIf
	lGerRem	:=	.T.
	SetInvert(.F.) 	
	MsProcTxt(STR0025+RetTitle('D2_REMITO')) //'Generando '
	a462ANGera(Nil,cMarcaSC9,.T.,aRems,.T.,aParams)
Endif
//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Faz a geracao das Facturas, se houver.					   Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

If Len(aNfs) > 0
	cMarcaSC9 := ThisMark()
	//	MsProcTxt(STR0026) //'Generando facturas'
	AlteraSX1()  // criar perguntas pela moeda
	If Pergunte('MT468C',.T.)
		aParams	:=	{	SPACE(Len(SC9->C9_PEDIDO))	,Replicate('z',Len(SC9->C9_PEDIDO)),; //Pedido de - ate
			SPACE(Len(SA1->A1_COD))		,Replicate('z',Len(SA1->A1_COD)),; //Cliente de - ate
			SPACE(Len(SA1->A1_LOJA))	,Replicate('z',Len(SA1->A1_LOJA)),; //Loja de - ate
			SPACE(Len(SB1->B1_GRUPO))	,Replicate('z',Len(SB1->B1_GRUPO)),; //Grupo de - ate
			SPACE(Len(SA1->A1_AGREG))	,Replicate('z',Len(SA1->A1_AGREG)),; //Agregador de - ate
			mv_par01	,mv_par02, mv_par03,; //lDigita # lAglutina # lGeraLanc
			2			,mv_par04,	mv_par05	,; //lInverte# lAtuaSC7  # nSepara
			0			,  	   2,; //nValorMin # factura proforma
			SPACE(Len(SC5->C5_TRANSP))		,Replicate('z',Len(SC5->C5_TRANSP)),; //Trasnportadora de - ate
			2,	mv_par06,	mv_par07,mv_par08} //Reajusta na mesma nota #   Fatura Pedido pela   # Moeda para faturamento # Contabiliza por?
		If  aParams[22] ==2 .and. Recmoeda(dDatabase,aParams[23])<=0
			MsgAlert(OemToAnsi(STR0037))
			Return .F.
		EndIf
			
		MsAguarde({|| a468nFatura("SC9",aParams,@aNFs,,.T.)},STR0027,STR0026,.F.) //'Preparando documentos de la carga'###'Generando facturas'

	Endif
Endif

Return

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁAjustSX1_AЁ Autor ЁPatricia A. Salomao    Ё Data Ё 25/10/01 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Deleta Pergunta criada para o Modulo TMS (Transporte)      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё MT461A                                                     Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
STATIC FUNCTION AjustSX1_A()

Local aArea	:=	GetArea()

dbSelectArea("SX1")
dbSetOrder(1)
If MsSeek("MT461A13") .And. X1_F3 == "M6"
	RecLock("SX1",.F.)
	dbDelete()
	MsUnlock()
EndIf

RestArea(aArea)

Return

/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё  AjustSX1_B  Ё Autor ЁPatricia A. Salomao    Ё Data Ё 25/10/01 Ё╠╠
╠╠цддддддддддеддддддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё  Deleta Pergunta criada para o Modulo TMS (Transporte)         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё MT461B                                                         Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function AjustSX1_B()

Local aArea	:=	GetArea()

dbSelectArea("SX1")
dbSetOrder(1)
If MsSeek("MT461B09") .And. X1_F3 == "M6"
	RecLock("SX1",.F.)
	dbDelete()
	MsUnlock()
EndIf

RestArea(aArea)

Return

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMa461QIsOkЁ Autor ЁWilson Godoy           Ё Data Ё21.06.2002Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁAnalisa da quantidade liberada                              Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpL1: Quantidade valida                                    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpA1: Array aPlvNfs                                        Ё╠╠
╠╠Ё          ЁExpC2: Alias do SC6                                         Ё╠╠
╠╠Ё          ЁExpC3: Alias do SC9                                         Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function Ma461QIsOk(aItens,cAliasSC6,cAliasSC9)

Static lLibAcim

Local nX        := 0
Local nSaldo    := 0
Local lRetorno  := .T.

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁInicializa variaveis                                                    Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
DEFAULT lLibAcim := SuperGetMv("MV_LIBACIM")
If lLibAcim
	nSaldo    := (cAliasSC6)->C6_QTDVEN-(cAliasSC6)->C6_QTDENT-C9_QTDLIB
	lRetorno  := nSaldo >= 0
	If lRetorno	
		For nX := 1 to Len(aItens)
			If (cAliasSC9)->C9_PEDIDO == aItens[nX,1] .And. (cAliasSC9)->C9_ITEM == aItens[nX,2] .And. (cAliasSC9)->C9_PRODUTO == aItens[nX,6]
				nSaldo -= aItens[nX,4]
				If nSaldo < 0
					lRetorno := .F.
					Exit
				EndIf
			EndIf
		Next nX
	EndIf
EndIf
If lRetorno
	LogMov(cAliasSC9,.F.,.T.,(cAliasSC9)->C9_PRODUTO,(cAliasSC9)->C9_LOCAL,.T.)
EndIf

Return( lRetorno )

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁA461LckSC9Ё Autor ЁBruno Sobieski         Ё Data Ё02.08.2002Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁLocka os registros do SC9 , separa em dois arrays os que de-Ё╠╠
╠╠Ё          Ёvem gerar nota fiscal e os que devem gerar remitos.         Ё╠╠
╠╠Ё          ЁTambem marca o SC9 e carrega em um array os pedidos envolvi-Ё╠╠
╠╠Ё          Ёdos.                                                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpL1: Consegui LOCKAR.                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpC1: Marca para o SC9                                     Ё╠╠
╠╠Ё          ЁExpA2: Array com os RECNOS do SC9 que devem gerar NF        Ё╠╠
╠╠Ё          ЁExpA3: Array com os RECNOS do SC9 que devem gerar REMITO    Ё╠╠
╠╠Ё          ЁExpA4: Array com os PEDIDOS E RECNOS DO SC9 envolvidos      Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
FUNCTION A461LckSC9(cMarcaSC9,aNFs,aRems,aPedidos,lContinua)
Local nPosPed	:=	0
DEFAULT aRems	:=	{}
DEFAULT aNFs 	:=	{}

If Empty(C9_BLEST+C9_BLCRED)
	SC5->(MsSeek(xFilial()+SC9->C9_PEDIDO ))
	If (SC5->C5_DOCGER $ "13" )
		SC6->(MsSeek(xFilial()+SC9->C9_PEDIDO+SC9->C9_ITEM))
		If SC6->C6_GERANF $ "S " .And. Empty(C9_NFISCAL)
			If SC9->(MsRlock())
				AAdd(aNFs,RECNO())
				SC9->C9_OK	:=	cMarcaSC9
				nPosPed	:=	Ascan(aPedidos,SC9->C9_PEDIDO)
				If nPosPed == 0
					AAdd(aPedidos,{SC9->C9_PEDIDO,{SC9->(Recno())}})
				Else
					AAdd(aPedidos[nPosPed][2],SC9->(Recno()))
				Endif
			Else
				lContinua	:=	.F.
			Endif	
		Endif
	ElseIf (SC5->C5_DOCGER $ "2 " ).And. Empty(C9_REMITO)
		If MsRLock()
			AAdd(aREMS,RECNO())
			SC9->C9_OK := cMarcaSC9
			nPosPed	:=	Ascan(aPedidos,SC9->C9_PEDIDO)
			If nPosPed == 0
				AAdd(aPedidos,{SC9->C9_PEDIDO,{SC9->(Recno())}})
			Else
				AAdd(aPedidos[nPosPed][2],SC9->(Recno()))
			Endif
		Else
			lContinua	:=	.F.
		Endif	
	Endif
Endif

Return( lContinua )
/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁA461LckSC5Ё Autor ЁBruno Sobieski         Ё Data Ё02.08.2002Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁLocka os registros do SC5 , e tira dos array dos RECNOS     Ё╠╠
╠╠Ё          Ёque devem gerar nota fiscal e os que devem gerar remitos os Ё╠╠
╠╠Ё          Ёpedidos que nao conseguiram ser lockados.                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpL1: Consegui LOCKAR.                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpA1: Array com os PEDIDOS E RECNOS DO SC9 envolvidos      Ё╠╠
╠╠Ё          ЁExpA2: Array com os RECNOS do SC9 que devem gerar NF        Ё╠╠
╠╠Ё          ЁExpA3: Array com os RECNOS do SC9 que devem gerar REMITO    Ё╠╠
╠╠Ё          ЁExpA5: Array com os RECNOS do SC5 LOCKADOS                  Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function A461LckSC5(aPedidos,aNFs,aRems,aLockSC5,lContinua)
Local nX	    := 0
Local nY        := 0
Local nPosPed   := 0
DEFAULT aRems	:= {}
DEFAULT aNFs 	:= {}
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁTenta lockear o SC5, se nao consegue, tira o Lock dos registros do SC9Ё
//Ёque jА tinham sido lockeados.                                         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
For nX:=	1	To Len(aPedidos)
	If SC5->(MsSeek(xFilial()+aPedidos[nX][1]))
		If !SC5->(MsRLock())
			lContinua	:=	.F.
			For	nY	:=	1	To	Len(aPedidos[nX][nY])
				nPosPed	:=	AScan(aRems,{|x| x == aPedidos[nX][nY]})
				If nPosPed > 0
					aDel(aRems,nPosPed)
					aSize(aRems,Len(aRems)-1)
				Endif
				nPosPed	:=	AScan(aNFs,{|x| x == aPedidos[nX][nY]})
				If nPosPed > 0
					aDel(aNfs,nPosPed)
					aSize(aNFs,Len(aNFs)-1)
				Endif
			Next
		Else
			AAdd(aLockSC5,SC5->(Recno()))
		Endif			
	Endif				
Next

Return( lContinua )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMA461View Ё Autor ЁSergio Silveira        Ё Data Ё29/01/2003Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁChama a visualizacao do documento de saida a partir da      Ё╠╠
╠╠Ё          Ёliberacao                                                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁExpL1:= MA461View( ExpC1, ExpN1, ExpN2 )                    Ё╠╠ 
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpL1: .T.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpC1: Alias                                                Ё╠╠
╠╠Ё          ЁExpN1: Numero do registro                                   Ё╠╠
╠╠Ё          ЁExpN2: Opcao                                                Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/

Function Ma461View( cAlias, nRecno, nOpcx ) 

Local aArea    := GetArea() 
Local aAreaSC9 := SC9->( GetArea() ) 
Local aRotBack := AClone( aRotina ) 

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se este item de liberacao gerou documento de saida            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !Empty( SC9->C9_NFISCAL )
	SF2->( dbSetOrder( 1 ) ) 
 	If SF2->( MsSeek( xFilial( "SF2" ) + SC9->C9_NFISCAL + SC9->C9_SERIENF + SC9->C9_CLIENTE + SC9->C9_LOJA )) 
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁCria um aRotina para compatibilizar com a visualizacao do documento     Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		aRotina := { { STR0033, "Mc090visual", 0, 2 } } //"Visualiza Doc."
		Mc090Visual( "SF2", SF2->( recno() ), 1 )
	EndIf 
Else 
	Aviso( STR0034, STR0035, {STR0036}, 2 )  //"Atencao !"###"Este item de liberacao nao gerou documento de saida. "###"Ok"
EndIf 
                                      
RestArea( aAreaSC9 )                          
RestArea( aArea ) 

aRotina := AClone( aRotBack ) 

Return( .T. ) 


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  Ё AlteraSX1╨ Autor Ё Paulo Augusto      ╨Fecha Ё  15/05/03   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     Ё Criar pergunta para compatibilizar com o MATA468N          ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё MATA461                                                    ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/

Static Function AlteraSX1()
Local aArea := GetArea()
Local aKey  := {{"MT468C","06"},;
				{"MT468C","07"},;	
				{"MT468C","08"}}
Local nI := 0 
Local aHelpPor:= {}
Local aHelpEng:= {}
Local aHelpSpa:= {}				
				
DbSelectArea("SX1")
DbSetOrder(1)
For nI := 1 To Len(aKey)
	If !DbSeek(aKey[nI][1]+aKey[nI][2]) 
		
		If aKey[nI][1]+aKey[nI][2]  == "MT468C06"  
			PutSx1( aKey[nI][1], aKey[nI][2],"Fatura Pedido pela ?","Factura Pedido por ?","Invoice order by   ?","mv_ch6","N",1,0,1,"C","","","","",;
			"mv_par06","Moeda Ped.","Moneda Pedido ","Order Currency","","Moneda Seleccionada","Moeda Sel.","Selected Currency","","","","","","","","","")
			aHelpPor:= {}
			aHelpEng:= {}
			aHelpSpa:= {}				
			aAdd(aHelpEng,"Select the currency to be used  ")
			aAdd(aHelpEng,"by the outflow document. ")
			aAdd(aHelpPor,"Selecione em qual moeda sera ")
			aAdd(aHelpPor,"gerado o documento de saida.")
			aAdd(aHelpSpa,"Seleccione en que moneda se ")
			aAdd(aHelpSpa,"generara el documento de salida.")
			PutSX1Help("P.MT468C06.",aHelpPor,aHelpEng,aHelpSpa)	 

		ElseIf aKey[nI][1]+aKey[nI][2] == "MT468C07" 	
			PutSx1( aKey[nI][1], aKey[nI][2],"Fatura pela Moeda  ?","Fatura pela Moeda  ?","Fatura pela Moeda  ?","mv_ch7","N",1,0,1,"C","","","","",;
			"mv_par07","Moeda 1   ","Moneda 1   ","Currency 1 ","","Moeda 2   ","Moneda 2   ","Currency 2","Moeda 3","Moneda 3","Currency 3","Moeda 4","Moneda 4","Currency 4","Moeda 5","Moneda 5","Currency 5","","","","")	
			aHelpPor:= {}
			aHelpEng:= {}
			aHelpSpa:= {}				
			aAdd(aHelpEng,"Select the currency. ")
			aAdd(aHelpPor,"Selecione a moeda  ")
			aAdd(aHelpSpa,"Seleccione la moneda ")
		
			PutSX1Help("P.MT468C07.",aHelpPor,aHelpEng,aHelpSpa)	 
	ElseIf aKey[nI][1]+aKey[nI][2] == "MT468C08"  // Contabiliza por (Pedidos)
				
		PutSx1( aKey[nI][1], aKey[nI][2],"Record by ?","Contabiliza por ?","Contabiliza por   ?","mv_ch8","N",1,0,1,"C","","","","",;
		"mv_par08","Nota ","Factura","Invoice","","Total Notas","Total Facturas","Total Invoices","","","","","","","","","")
			aHelpPor:= {}
			aHelpEng:= {}
			aHelpSpa:= {}				
			aAdd(aHelpEng,"Select how record of invoice ")
			aAdd(aHelpEng,"by the outflow document. ")
			aAdd(aHelpPor,"Selecione como sera feita a ")
			aAdd(aHelpPor,"contabilizacao das notas.")
			aAdd(aHelpSpa,"Seleccione como se ")
			aAdd(aHelpSpa,"contabilizaran las facturas.")
			PutSX1Help("P.MT468C08.",aHelpPor,aHelpEng,aHelpSpa)	   
		EndIf
	EndIf
Next nI
RestArea(aArea)

Return


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  Ё AjustaSX1╨ Autor Ё Paulo Augusto      ╨Fecha Ё  10/06/03   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     Ё Criar pergunta para compatibilizar com o MATA468N          ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё MATA461	                                                  ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/

Static Function AjustaSX1(lP21)
Local aArea := GetArea()
Local aKey  := {{"MT462R","05"},;
				{"MT462R","06"}	}
Local nI := 0	
Local cPerg   := "MT460A"			
Local aHelpPor:= {}
Local aHelpEng:= {}
Local aHelpSpa:= {}				
  
Default lP21 := .F. 				

DbSelectArea("SX1")
DbSetOrder(1)     
If cPaisLoc=="BRA"

	//Deixa o parБmetro com data base, para nЦo gerar nota fiscal com cotaГЦo errada. 
	If SX1->(DbSeek("MT460A    21")) .And. !Empty(SX1->X1_CNT01)
	    lP21 := .T.
		RecLock("SX1",.F.)
		Replace SX1->X1_CNT01 	With ""
		SX1->(MsUnLock())
	Endif

	//Adiciona a opcao DAV no MV_PAR16 (para clientes com obrigacao PAF-ECF)
	If SX1->(dbSeek(Padr(cPerg,len(SX1->X1_GRUPO))+"16")) .and. LjNfPafEcf(SM0->M0_CGC)
		RecLock("SX1",.F.)
		SX1->X1_DEF03 		:= "DAV"
		SX1->X1_DEFSPA3 	:= "DAV"
		SX1->X1_DEFENG3		:= "DAV"
		SX1->(msUnlock())
	EndIf	 	
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁGera Guia de Recolhimento ou Titulo ICMS no Contas a pagar quando nao for do mesmo Estado Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	//Inclusao de novas perguntas para que o usuario tenha a opcao de recolhe a guia e gerar o titulo na Documentacao de Entrada
	aHelpPor:= {}
	aHelpEng:= {}
	aHelpSpa:= {}				
	Aadd( aHelpPor, "Informe se deverА ser gerado o tМtulo ")
	Aadd( aHelpPor, "a pagar do ICMS SubstituiГЦo TributАria ") 
	Aadd( aHelpPor, "quando este for calculado no documento e")
	Aadd( aHelpPor, " a UF de destino for diferente da UF que")
	Aadd( aHelpPor, " estА emitindo o documento.")
	Aadd( aHelpEng, "Informe se deverА ser gerado o tМtulo ")
	Aadd( aHelpEng, "a pagar do ICMS SubstituiГЦo TributАria ") 
	Aadd( aHelpEng, "quando este for calculado no documento e")
	Aadd( aHelpEng, " a UF de destino for diferente da UF que")
	Aadd( aHelpEng, " estА emitindo o documento.")
	Aadd( aHelpSpa, "Informe se deverА ser gerado o tМtulo ")
	Aadd( aHelpSpa, "a pagar do ICMS SubstituiГЦo TributАria ") 
	Aadd( aHelpSpa, "quando este for calculado no documento e")
	Aadd( aHelpSpa, " a UF de destino for diferente da UF que")
	Aadd( aHelpSpa, " estА emitindo o documento.")

	PutSx1(cPerg,"17","Gera Titulo ?"           ,"©Genera Titulo ? "           ,"Generate Bill ? "           ,"mv_chh","N",01,0,2,"C","","","","","mv_par17","Sim","Si","Yes","","Nao","No","No","","","","","","","","","",aHelpPor,aHelpEng,aHelpSpa)
	
	aHelpPor:= {}
	aHelpEng:= {}
	aHelpSpa:= {}				
	Aadd( aHelpPor, "Informe se deverА ser gerada uma Guia ")
	Aadd( aHelpPor, "de Recolhimento do ICMS SubstituiГЦo ")
	Aadd( aHelpPor, "TributАria quando este for calculado ")
	Aadd( aHelpPor, "no documento e a UF de destino for ")
	Aadd( aHelpPor, "diferente da UF que estА emitindo o ") 
	Aadd( aHelpPor, "documento. O sistema irА apresentar ")
	Aadd( aHelpPor, "uma tela para que as informaГУes ")
	Aadd( aHelpPor, "necessАrias a geraГЦo da Guia sejam ")
	Aadd( aHelpPor, "preenchidas.")
	Aadd( aHelpEng, "Informe se deverА ser gerada uma Guia ")
	Aadd( aHelpEng, "de Recolhimento do ICMS SubstituiГЦo ")
	Aadd( aHelpEng, "TributАria quando este for calculado ")
	Aadd( aHelpEng, "no documento e a UF de destino for ")
	Aadd( aHelpEng, "diferente da UF que estА emitindo o ") 
	Aadd( aHelpEng, "documento. O sistema irА apresentar ")
	Aadd( aHelpEng, "uma tela para que as informaГУes ")
	Aadd( aHelpEng, "necessАrias a geraГЦo da Guia sejam ")
	Aadd( aHelpEng, "preenchidas.")
	Aadd( aHelpSpa, "Informe se deverА ser gerada uma Guia ")
	Aadd( aHelpSpa, "de Recolhimento do ICMS SubstituiГЦo ")
	Aadd( aHelpSpa, "TributАria quando este for calculado ")
	Aadd( aHelpSpa, "no documento e a UF de destino for ")
	Aadd( aHelpSpa, "diferente da UF que estА emitindo o ") 
	Aadd( aHelpSpa, "documento. O sistema irА apresentar ")
	Aadd( aHelpSpa, "uma tela para que as informaГУes ")
	Aadd( aHelpSpa, "necessАrias a geraГЦo da Guia sejam ")
	Aadd( aHelpSpa, "preenchidas.")
	PutSx1(cperg,"18","Gera guia recolhimento ?","©Genera form. de pago ? "    ,"Generate tax payment form ?","mv_chi","N",01,0,2,"C","","","","","mv_par18","Sim","Si","Yes","","Nao","No","No","","","","","","","","","",aHelpPor,aHelpEng,aHelpSpa)
   	aHelpPor:= {}
	aHelpEng:= {}
	aHelpSpa:= {}				
	Aadd( aHelpPor, "Informe se deverА ser gerado o tМtulo ")
	Aadd( aHelpPor, "a pagar do ICMS PrСprip quando") 
	Aadd( aHelpPor, "este for calculado no documento e")
	Aadd( aHelpPor, "a UF de destino for diferente da UF que")
	Aadd( aHelpPor, "estА emitindo o documento.")
	Aadd( aHelpEng, "Informe se deverА ser gerado o tМtulo ")
	Aadd( aHelpEng, "a pagar do ICMS PrСprip quando") 
	Aadd( aHelpEng, "este for calculado no documento e")
	Aadd( aHelpEng, "a UF de destino for diferente da UF que")
	Aadd( aHelpEng, "estА emitindo o documento.")
	Aadd( aHelpSpa, "Informe se deverА ser gerado o tМtulo ")
	Aadd( aHelpSpa, "a pagar do ICMS PrСprip quando") 
	Aadd( aHelpSpa, "este for calculado no documento e")
	Aadd( aHelpSpa, "a UF de destino for diferente da UF que")
	Aadd( aHelpSpa, "estА emitindo o documento.")
	PutSx1(cPerg,"19","Gera Titulo ICMS PrСprio ?" ,"Gera Titulo ICMS PrСprio ?","Gera Titulo ICMS PrСprio ?" ,"mv_chj","N",01,0,2,"C","","","","","mv_par19","Sim","Si","Yes","","Nao","No","No","","","","","","","","","",aHelpPor,aHelpEng,aHelpSpa)
   	
     
    aHelpPor:= {}
	aHelpEng:= {}
	aHelpSpa:= {}				
	Aadd( aHelpPor, "Informe se deverА ser gerada uma  ")
	Aadd( aHelpPor, "Guia de Recolhimento do ICMS PrСprio ")
	Aadd( aHelpPor, "quando este for calculado no ")
	Aadd( aHelpPor, "documento e a UF de destino for ")
	Aadd( aHelpPor, "diferente da UF que estА emitindo o ") 
	Aadd( aHelpPor, "documento. O sistema irА apresentar ")
	Aadd( aHelpPor, "uma tela para que as informaГУes ")
	Aadd( aHelpPor, "necessАrias a geraГЦo da Guia sejam ")
	Aadd( aHelpPor, "preenchidas.")
	Aadd( aHelpEng, "Informe se deverА ser gerada uma  ")
	Aadd( aHelpEng, "Guia de Recolhimento do ICMS PrСprio ")
	Aadd( aHelpEng, "quando este for calculado no ")
	Aadd( aHelpEng, "documento e a UF de destino for ")
	Aadd( aHelpEng, "diferente da UF que estА emitindo o ") 
	Aadd( aHelpEng, "documento. O sistema irА apresentar ")
	Aadd( aHelpEng, "uma tela para que as informaГУes ")
	Aadd( aHelpEng, "necessАrias a geraГЦo da Guia sejam ")
	Aadd( aHelpEng, "preenchidas.")
	Aadd( aHelpSpa, "Informe se deverА ser gerada uma  ")
	Aadd( aHelpSpa, "Guia de Recolhimento do ICMS PrСprio ")
	Aadd( aHelpSpa, "quando este for calculado no ")
	Aadd( aHelpSpa, "documento e a UF de destino for ")
	Aadd( aHelpSpa, "diferente da UF que estА emitindo o ") 
	Aadd( aHelpSpa, "documento. O sistema irА apresentar ")
	Aadd( aHelpSpa, "uma tela para que as informaГУes ")
	Aadd( aHelpSpa, "necessАrias a geraГЦo da Guia sejam ")
	Aadd( aHelpSpa, "preenchidas.")
	PutSx1(cperg,"20","Gera Guia ICMS PrСprio?","Gera Guia ICMS PrСprio?","Gera Guia ICMS PrСprio?","mv_chl","N",01,0,2,"C","","","","","mv_par20","Sim","Si","Yes","","Nao","No","No","","","","","","","","","",aHelpPor,aHelpEng,aHelpSpa)
Else
	For nI := 1 To Len(aKey)
		If !DbSeek(aKey[nI][1]+aKey[nI][2]) 
			
			If aKey[nI][1]+aKey[nI][2]  == "MT462R05"  
				PutSx1( aKey[nI][1], aKey[nI][2],"Gera " + GetDescRem()+ " pela ?","Genera " + GetDescRem()+ " por ?","Gera " + GetDescRem()+ " By ?","mv_ch5","N",1,0,1,"C","","","","",;
				"mv_par05","Moeda " + GetDescRem() + " .","Moneda " + GetDescRem()+ " ." ,  GetDescRem() + "Currency .","","Moeda Selecionada.","Moneda Seleccionada.","Selected Currency.","","","","","","","","","")
				aHelpPor:= {}
				aHelpEng:= {}
				aHelpSpa:= {}				
				aAdd(aHelpEng,"Select the currency to be used  ")
				aAdd(aHelpPor,"Selecione em qual moeda sera ")
				aAdd(aHelpPor,"gerado .")
				aAdd(aHelpSpa,"Seleccione en que moneda se  ")
				aAdd(aHelpSpa,"generara .")
				PutSX1Help("P.MT462R05.",aHelpPor,aHelpEng,aHelpSpa)	 
			ElseIf aKey[nI][1]+aKey[nI][2] == "MT462R06" 	
				PutSx1( aKey[nI][1], aKey[nI][2],"Fatura pela Moeda  ?","Factura pela Moneda  ?","Fatura pela Moeda  ?","mv_ch6","N",1,0,1,"C","","","","",;
				"mv_par06","Moeda 1   ","Moneda 1   ","Currency 1 ","","Moeda 2   ","Moneda 2   ","Currency 2","Moeda 3","Moneda 3","Currency 3","Moeda 4","Moneda 4","Currency 4","Moeda 5","Moneda 5","Currency 5","","","","")	
				aHelpPor:= {}
				aHelpEng:= {}
				aHelpSpa:= {}				
				aAdd(aHelpEng,"Select the currency. ")
				aAdd(aHelpPor,"Selecione a moeda  ")
				aAdd(aHelpSpa,"Seleccione la moneda ")
				PutSX1Help("P.MT462R06.",aHelpPor,aHelpEng,aHelpSpa)	 
			EndIf
		EndIf
	Next nI
EndIf
RestArea(aArea)

Return


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁA461Saldo Ё Autor ЁRodrigo de A Sartorio  Ё Data Ё06/07/2004Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁAvalia o saldo do item do pedido para nao permitir que seja Ё╠╠
╠╠Ё          Ёfaturado um item indisponivel em estoque.                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁLogico    - .T. item do pedido sera faturado, .F. nao sera  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁcPedido   - Numero do pedido analisado                      Ё╠╠
╠╠Ё          ЁcItem     - Item do pedido analisado                        Ё╠╠
╠╠Ё          ЁcProduto  - Produto do pedido analisado                     Ё╠╠
╠╠Ё          ЁcLocal    - Armazem do pedido analisado                     Ё╠╠
╠╠Ё          ЁnQuant    - Quantidade do pedido analisado                  Ё╠╠
╠╠Ё          ЁnQuant2UM - Quantidade do pedido analisado na segunda UM    Ё╠╠
╠╠Ё          ЁcLoteCtl  - Lote do pedido analisado                        Ё╠╠
╠╠Ё          ЁcNumLote  - Sub-Lote do pedido analisado                    Ё╠╠
╠╠Ё          ЁaTravas   - Array com os Recno travados                     Ё╠╠
╠╠Ё          ЁlSemSaldo - Indica que nao existe saldo para o produto      Ё╠╠
╠╠Ё          ЁlEstoque  - Indica se atualiza estoque                      Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function A461Saldo(cPedido,cItem,cProduto,cLocal,nQuant,nQuant2UM,cLoteCtl,cNumLote,aTravas,lSemSaldo,lAtuEst)
Local lRet     := .T.
Local aArray   := {}
Local aArea    := {}
Local nCnt     := 0
Local nCnt2    := 0
Local nSaldo   := 0
Local lEstNeg  := SuperGetMV("MV_ESTNEG",.F.,'N')=='S'
Local lRastro  := Rastro(cProduto) 
Local lLocaliza:= Localiza(cProduto)
Local lM461ADT := ExistBlock("M461ADT")
Local lM461SLD := ExistBlock("M461SLD") .And. ExecBlock("M461SLD",.F.,.F.)

Default aTravas   := {}
Default lSemSaldo := .F.
Default lAtuEst   := .F.

// Checa o saldo do lote/Endereco
If !lEstNeg .And. !lM461SLD .And. lAtuEst .And. ( lRastro .Or. lLocaliza )
	aArea :=GetArea()
    aArray:=SldPorLote(cProduto,cLocal,nQuant,nQuant2UM,cLoteCtl,cNumLote,NIL,NIL,@aTravas,NIL,NIL,NIL,NIL,NIL,dDatabase,,,.T.)
	If lRet .And. lRastro
		nSaldo := 0
		For nCnt:=1 to Len(aArray)
			For nCnt2:=1 to Len(aArray[nCnt,10])
				nSaldo+=aArray[nCnt,10,nCnt2,2]
			Next nCnt2
		Next nCnt
		lRet:=QtdComp(nSaldo) >= QtdComp(nQuant)
	EndIf
	If lRet .And. lLocaliza	
		nSaldo := 0
		For nCnt:=1 to Len(aArray)
			nSaldo+=aArray[nCnt,5]
		Next nCnt
		lRet:=QtdComp(nSaldo) >= QtdComp(nQuant)
	EndIf	
	RestArea(aArea)
	If !lRet
		lSemSaldo := .T.
	EndIf	
EndIf          

If lRet
	If lM461ADT
		lRet := ExecBlock("M461ADT",.F.,.F.,{cPedido, cItem})
	EndIf	
Endif	

Return( lRet )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMaNfsCalRtЁ Autor ЁSergio Silveira        Ё Data Ё05/08/2004Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁEfetua o calculo do valor de titulos financeiros que        Ё╠╠
╠╠Ё          Ёcalcularam a retencao do PIS / COFINS / CSLL e nao          Ё╠╠
╠╠Ё          Ёcriaram os titulos de abatimento                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁExpA1 := MaNfsCalRt( ExpD1 )                                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpA1 -> Array com os seguintes elementos                   Ё╠╠
╠╠Ё          Ё       1 - Valor dos titulos                                Ё╠╠
╠╠Ё          Ё       2 - Valor do PIS                                     Ё╠╠
╠╠Ё          Ё       3 - Valor do COFINS                                  Ё╠╠
╠╠Ё          Ё       4 - Valor da CSLL                                    Ё╠╠
╠╠Ё          Ё       5 - Array contendo os recnos dos registos processadosЁ╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpD1 - Data de referencia                                  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function MaNfsCalRt( dReferencia ) 

Local aAreaSE1  := SE1->( GetArea() ) 
Local aAreaSA1  := {} 
Local aDadosRef := Array( 8 )    
Local aRecnos   := {}                     

Local cCliente  := SE1->E1_CLIENTE
Local cLoja     := SE1->E1_LOJA 	     
Local cModTot   := GetNewPar( "MV_MT10925", "1" ) 
Local cTipoData := GetNewPar( "MV_TD10925", "1" ) 
Local cCNPJ     := ""

Local dIniMes   := FirstDay( dReferencia ) 
Local dFimMes   := LastDay( dReferencia ) 

Local cLojaAtu  := GetNewPar( "MV_LJ10925", "1" )
Local lM461RTFI := ExistBlock( "M461RTFI" ) 
Local lProcessa := .T.
Local lBaseImp  := ( SuperGetMv("MV_BS10925",.F.,"1") == "1")
Local lAplVlMn	:= SE1->(FieldPos("E1_APLVLMN")) > 0
Local lTodasFil	:= ExistBlock("F040FRT")
Local aFil10925	:= {}
Local cFilAtu	:= cFilAnt //Alterado, pois algumas integracoes podem alterar a var. cFilAnt ficando diferente do SM0->M0_CODFIL
Local nFil      := 0

Local nLoop     := 0
Local nVlDevolv := 0
Local nVlDevPro := 0
//--- Tratamento Gestao Corporativa
Local lGestao   := Iif( FindFunction("FWCodFil"), FWSizeFilial() > 2, .F. )	// Indica se usa Gestao Corporativa
Local lSE1Comp  := FWModeAccess("SE1",3)== "C" // Verifica se SE1 И compartilhada
Local aFilAux	  := {}
#IFDEF TOP 
	Local aCampos   := {} 
	Local aStruct   := {} 
	
	Local cAliasQry := "" 	
	Local cQuery    := "" 	
	Local cSepNeg   := If("|"$MV_CRNEG,"|",",")
	Local cSepProv  := If("|"$MVPROVIS,"|",",")
	Local cSepRec   := If("|"$MVRECANT,"|",",")

#ELSE	
	Local aLojas    := {}	
	
	Local bWhileSE1 := { || .T. }
	Local bCondSE1  := { || .T. }

#ENDIF    

#IFNDEF TOP 
	If !(cLojaAtu == "1")
		aAreaSA1 := SA1->( GetArea() ) 	
	EndIf 		            
#ENDIF 
        
If cLojaAtu == "3"
	SA1->( dbSetOrder( 1 ) ) 
	If SA1->( dbSeek( xFilial( "SA1" ) + cCliente + cLoja ) )
		cCNPJ := Left( SA1->A1_CGC, 8 )
    EndIf
EndIf

AFill( aDadosRef, 0 ) 

If lTodasFil
	aFil10925 := ExecBlock( "F040FRT", .F., .F. ) 
Else
	aFil10925 := { cFilAnt }  				     
Endif

For nFil := 1 to Len(aFil10925)
	
	dbSelectArea("SE1")
	cFilAnt := aFil10925[nFil]
	
	//Se SE1 for compartilhada e ja passou pela mesma Empresa e Unidade, pula para a proxima filial
	If lGestao .and. lSE1Comp .and.  Ascan(aFilAux, {|x| x == xFilial("SE1")}) > 0
		Loop
	EndIf
	
	
	#IFDEF TOP
		
		aCampos := { "E1_VALOR","E1_PIS","E1_COFINS","E1_CSLL","E1_SABTPIS","E1_SABTCOF","E1_SABTCSL","E1_MOEDA","E1_VENCREA"}
		aStruct := SE1->( dbStruct() )
		
		SE1->( dbCommit() )
		
		cAliasQry := GetNextAlias()
		
		cQuery := "SELECT E1_VALOR,E1_PIS,E1_COFINS,E1_CSLL,E1_SABTPIS,E1_SABTCOF,E1_SABTCSL, "
		cQuery += "E1_PREFIXO,E1_NUM,E1_PARCELA,E1_TIPO,E1_CLIENTE,E1_LOJA,E1_NATUREZ,E1_MOEDA,E1_VENCREA,SE1.R_E_C_N_O_ RECNO "
		
		If SE1->(FieldPos("E1_MSFIL")) > 0
			cQuery += ",E1_MSFIL "
		EndIf
		
		If SE1->(FieldPos("E1_BASEPIS")) > 0 .And. SE1->(FieldPos("E1_BASECOF")) > 0 .And. SE1->(FieldPos("E1_BASECSL")) > 0
			cQuery += ",E1_BASEPIS,E1_BASECOF,E1_BASECSL "
			Aadd(aCampos,"E1_BASEPIS")
			Aadd(aCampos,"E1_BASECOF")
			Aadd(aCampos,"E1_BASECSL")
		Endif
		
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁVerifica o valor minimo para retencao. Se nao verificar, nao deve entrar       Ё
		//Ёno montante dos R$ 5.000,00 para retencao - devera reter sempre (Lei 11.196/05)Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If lAplVlMn
			cQuery += ",E1_APLVLMN "
			aAdd(aCampos,"E1_APLVLMN")
		Endif
		cQuery += "FROM "+RetSqlName( "SE1" ) + " SE1 "
		
		If clojaAtu == "3"
			cQuery	+= ", "+RetSqlName( "SA1" ) + " SA1 "
		EndIf
		
		cQuery += "WHERE "
		cQuery += "E1_FILIAL='"     + xFilial("SE1")       + "' AND "
		
		If clojaAtu <> "3"
			cQuery += "E1_CLIENTE='"    + cCliente             + "' AND "
		EndIf
		
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Filtra apenas a loja atual                                             Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If clojaAtu == "1"
			cQuery += "E1_LOJA='"       + cLoja                + "' AND "
		EndIf
		
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Filtra pela raiz do CNPJ                                               Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If clojaAtu == "3"
			cQuery += "SA1.A1_FILIAL='" + xFilial("SA1") + "' AND "
			cQuery += "SUBSTRING(SA1.A1_CGC,1,8)='"+ cCNPJ + "' AND "
			cQuery += "SA1.A1_COD=SE1.E1_CLIENTE AND "
			cQuery += "SA1.A1_LOJA=SE1.E1_LOJA AND "
			cQuery += "SA1.D_E_L_E_T_=' ' AND "
		EndIf
		
		If cTipoData == "1"
			cQuery += "E1_VENCREA>='"  + DToS( dIniMes )      + "' AND "
			cQuery += "E1_VENCREA<='"  + DToS( dFimMes )      + "' AND "
		Else
			cQuery += "E1_VENCTO>='"  + DToS( dIniMes )      + "' AND "
			cQuery += "E1_VENCTO<='"  + DToS( dFimMes )      + "' AND "
		EndIf
		
		cQuery += "E1_TIPO NOT IN " + FormatIn(MVABATIM,"|") + " AND "
		cQuery += "E1_TIPO NOT IN " + FormatIn(MV_CRNEG,cSepNeg)  + " AND "
		cQuery += "E1_TIPO NOT IN " + FormatIn(MVPROVIS,cSepProv) + " AND "
		cQuery += "E1_TIPO NOT IN " + FormatIn(MVRECANT,cSepRec)  + " AND "
		If lAplVlMn
			cQuery += "E1_APLVLMN <> '2' AND "
		Endif
		cQuery += "SE1.D_E_L_E_T_=' '"
		
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Ponto de entrada - Permite alterar a query de selecao do titulos de retencao PIS/COFINS/CSL  Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If ExistBlock("M461RTQY")
			cQuery := ExecBlock("M461RTQY",.F.,.F.,{cQuery})
		EndIf
		cQuery := ChangeQuery( cQuery )
		
		dbUseArea( .T., "TOPCONN", TcGenQry(,,cQuery), cAliasQry, .F., .T. )
		
		For nLoop := 1 To Len( aStruct )
			If !Empty( AScan( aCampos, AllTrim( aStruct[nLoop,1] ) ) ) .And. aStruct[nLoop][2]<>"C"
				TcSetField( cAliasQry, aStruct[nLoop,1], aStruct[nLoop,2],aStruct[nLoop,3],aStruct[nLoop,4])
			EndIf
		Next nLoop
		
		While !( cAliasQRY )->( Eof())
			
			If lM461RTFI
				lProcessa := ExecBlock( "M461RTFI", .F., .F.,{ ( cAliasQRY )->RECNO } )
			Else
				lProcessa := .T.
			EndIf
			
			If lProcessa
				
				If cModTot == "1"
					//Obtenho o valor das devolucoes efetuadas para o titulo dentro do periodo
					nVlDevolv := Baixas((cAliasQRY)->E1_NATUREZ,(cAliasQRY)->E1_PREFIXO,(cAliasQRY)->E1_NUM, ;
					(cAliasQRY)->E1_PARCELA,(cAliasQRY)->E1_TIPO,(cAliasQRY)->E1_MOEDA,"R",;
					(cAliasQRY)->E1_CLIENTE,(cAliasQRY)->E1_VENCREA,(cAliasQRY)->E1_LOJA,,  ;
					dIniMes,dFimMes)[13]
					
					aDadosRef[1] += ( cAliasQRY )->E1_VALOR - nVlDevolv
					
					If SE1->(FieldPos("E1_BASEPIS")) > 0 .And. SE1->(FieldPos("E1_BASECOF")) > 0 .And. SE1->(FieldPos("E1_BASECSL")) > 0 .And. lBaseImp
						
						If ( cAliasQRY )->E1_BASEPIS  > 0 .Or. ( cAliasQRY )->E1_BASECOF > 0 .Or. ( cAliasQRY )->E1_BASECSL  > 0
							If ( cAliasQRY )->E1_BASEPIS == ( cAliasQRY )->E1_VALOR
								aDadosRef[6] += ( cAliasQRY )->E1_BASEPIS - nVlDevolv
							Else
								nVlDevPro := nVlDevolv * Round(( cAliasQRY )->E1_BASEPIS / ( cAliasQRY )->E1_VALOR,6)
								aDadosRef[6] += ( cAliasQRY )->E1_BASEPIS - nVlDevPro
							EndIf
							If ( cAliasQRY )->E1_BASECOF == ( cAliasQRY )->E1_VALOR
								aDadosRef[7] += ( cAliasQRY )->E1_BASECOF - nVlDevolv
							Else
								nVlDevPro := nVlDevolv * Round(( cAliasQRY )->E1_BASECOF / ( cAliasQRY )->E1_VALOR,6)
								aDadosRef[7] += ( cAliasQRY )->E1_BASECOF - nVlDevPro
							EndIf
							If ( cAliasQRY )->E1_BASECSL == ( cAliasQRY )->E1_VALOR
								aDadosRef[8] += ( cAliasQRY )->E1_BASECSL - nVlDevolv
							Else
								nVlDevPro := nVlDevolv * Round(( cAliasQRY )->E1_BASECSL / ( cAliasQRY )->E1_VALOR,6)
								aDadosRef[8] += ( cAliasQRY )->E1_BASECSL - nVlDevPro
							EndIf
						Else
							aDadosRef[6] += ( cAliasQRY )->E1_VALOR - nVlDevolv
							aDadosRef[7] += ( cAliasQRY )->E1_VALOR - nVlDevolv
							aDadosRef[8] += ( cAliasQRY )->E1_VALOR - nVlDevolv
						EndIf
						
					Else
						aDadosRef[6] += ( cAliasQRY )->E1_VALOR - nVlDevolv
						aDadosRef[7] += ( cAliasQRY )->E1_VALOR - nVlDevolv
						aDadosRef[8] += ( cAliasQRY )->E1_VALOR - nVlDevolv
					EndIf
					
				EndIf
				
				If ( !Empty( ( cAliasQRY )->E1_PIS ) .Or. !Empty( ( cAliasQRY )->E1_COFINS ) .Or. !Empty( ( cAliasQRY )->E1_CSLL ) )
					
					If cModTot == "2"
						//Obtenho o valor das devolucoes efetuadas para o titulo dentro do periodo
						nVlDevolv := Baixas((cAliasQRY)->E1_NATUREZ,(cAliasQRY)->E1_PREFIXO,(cAliasQRY)->E1_NUM, ;
						(cAliasQRY)->E1_PARCELA,(cAliasQRY)->E1_TIPO,(cAliasQRY)->E1_MOEDA,"R",;
						(cAliasQRY)->E1_CLIENTE,(cAliasQRY)->E1_VENCREA,(cAliasQRY)->E1_LOJA,,  ;
						dIniMes,dFimMes)[13]
						
						aDadosRef[1] += ( cAliasQRY )->E1_VALOR - nVlDevolv
						
						If SE1->(FieldPos("E1_BASEPIS")) > 0 .And. SE1->(FieldPos("E1_BASECOF")) > 0 .And. SE1->(FieldPos("E1_BASECSL")) > 0 .And. lBaseImp
							
							If ( cAliasQRY )->E1_BASEPIS  > 0 .Or. ( cAliasQRY )->E1_BASECOF > 0 .Or. ( cAliasQRY )->E1_BASECSL  > 0
								If ( cAliasQRY )->E1_BASEPIS == ( cAliasQRY )->E1_VALOR
									aDadosRef[6] += ( cAliasQRY )->E1_BASEPIS - nVlDevolv
								Else
									nVlDevPro := nVlDevolv * Round(( cAliasQRY )->E1_BASEPIS / ( cAliasQRY )->E1_VALOR,6)
									aDadosRef[6] += ( cAliasQRY )->E1_BASEPIS - nVlDevPro
								EndIf
								If ( cAliasQRY )->E1_BASECOF == ( cAliasQRY )->E1_VALOR
									aDadosRef[7] += ( cAliasQRY )->E1_BASECOF - nVlDevolv
								Else
									nVlDevPro := nVlDevolv * Round(( cAliasQRY )->E1_BASECOF / ( cAliasQRY )->E1_VALOR,6)
									aDadosRef[7] += ( cAliasQRY )->E1_BASECOF - nVlDevPro
								EndIf
								If ( cAliasQRY )->E1_BASECSL == ( cAliasQRY )->E1_VALOR
									aDadosRef[8] += ( cAliasQRY )->E1_BASECSL - nVlDevolv
								Else
									nVlDevPro := nVlDevolv * Round(( cAliasQRY )->E1_BASECSL / ( cAliasQRY )->E1_VALOR,6)
									aDadosRef[8] += ( cAliasQRY )->E1_BASECSL - nVlDevPro
								EndIf
							Else
								aDadosRef[6] += ( cAliasQRY )->E1_VALOR - nVlDevolv
								aDadosRef[7] += ( cAliasQRY )->E1_VALOR - nVlDevolv
								aDadosRef[8] += ( cAliasQRY )->E1_VALOR - nVlDevolv
							EndIf
							
						Else
							aDadosRef[6] += ( cAliasQRY )->E1_VALOR - nVlDevolv
							aDadosRef[7] += ( cAliasQRY )->E1_VALOR - nVlDevolv
							aDadosRef[8] += ( cAliasQRY )->E1_VALOR - nVlDevolv
						EndIf
						
					EndIf
					
					If ( !Empty( ( cAliasQRY )->E1_SABTPIS ) .Or. !Empty( ( cAliasQry )->E1_SABTCOF ) .Or. !Empty( ( cAliasQry )->E1_SABTCSL ) )
						aDadosRef[2] += ( cAliasQRY )->E1_SABTPIS
						aDadosRef[3] += ( cAliasQRY )->E1_SABTCOF
						aDadosRef[4] += ( cAliasQRY )->E1_SABTCSL
						AAdd( aRecnos, ( cAliasQRY )->RECNO )
						//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//ЁPonto de Entrada - permite a alteracao do array aRecnos  Ё
						//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						If ExistBlock("M461RECNO")
							aRecnos := ExecBlock("M461RECNO", .F., .F., {aRecnos, cAliasQRY})
						EndIf
					EndIf
					
				EndIf
				
			EndIf
			
			( cAliasQRY )->( dbSkip())
			
		EndDo
		
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁFecha a area de trabalho da query                                       Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		( cAliasQRY )->( dbCloseArea() )
		dbSelectArea( "SE1" )
		
	#ELSE
		
		If cLojaAtu == "1"
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Carrega apenas a loja atual                                            Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			AAdd( aLojas, {cCliente, cLoja} )
		ElseIf cLojaAtu == "2"
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Carrega todas as lojas do cliente                                      Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			SA1->( dbSetOrder( 1 ) )
			If SA1->( dbSeek( xFilial( "SA1" ) + cCliente ) )
				While !SA1->( Eof() ) .And. SA1->A1_FILIAL == xFilial( "SA1" ) .And. SA1->A1_COD == cCliente
					AAdd( aLojas, {SA1->A1_COD, SA1->A1_LOJA} )
					SA1->( dbSkip())
				EndDo
			EndIf
		ElseIf cLojaAtu == "3"
			SA1->( dbSetOrder( 1 ) )
			If SA1->( dbSeek( xFilial( "SA1" ) + cCliente + cLoja ) )
				cCNPJ := Left( SA1->A1_CGC, 8 )
				SA1->( dbSetOrder( 3 ) )
				If SA1->( dbSeek( xFilial( "SA1" ) + cCNPJ ) )
					While !SA1->( Eof() ) .And. SA1->A1_FILIAL == xFilial( "SA1" ) .And. SubStr(SA1->A1_CGC,1,8) == cCNPJ
						AAdd( aLojas, {SA1->A1_COD, SA1->A1_LOJA} )
						SA1->( dbSkip())
					EndDo
				EndIf
			EndIf
		EndIf
		
		For nLoop := 1 to Len( aLojas )
			
			If cTipoData == "1"
				SE1->( dbSetOrder( 8 ) )
				SE1->( dbSeek( xFilial( "SE1" ) + aLojas[nLoop,1] + aLojas[nLoop,2] + "A" + DToS( dIniMes ), .T. ) )
				bWhileSE1 := { || !SE1->( Eof() ) .And. SE1->E1_FILIAL == xFilial( "SE1" ) .And. ;
				SE1->E1_CLIENTE == aLojas[nLoop,1] .And. SE1->E1_LOJA == aLojas[nLoop,2] .And. ;
				SE1->E1_STATUS  == "A" .And. 	SE1->E1_VENCREA >= dIniMes .And. ;
				SE1->E1_VENCREA <= dFimMes	}
				bCondSE1 := { || .T. }
				
			Else
				SE1->( dbSetOrder( 8 ) )
				SE1->( dbSeek( xFilial( "SE1" ) + aLojas[nLoop,1] + aLojas[nLoop,2] + "A" ) )
				bWhileSE1 := { || !SE1->( Eof() ) .And. SE1->E1_FILIAL == xFilial( "SE1" ) .And. ;
				SE1->E1_CLIENTE == aLojas[nLoop,1] .And. SE1->E1_LOJA == aLojas[nLoop,2] .And. ;
				SE1->E1_STATUS  == "A" }
				
				bCondSE1 := { || SE1->E1_VENCTO >= dIniMes .And. SE1->E1_VENCTO <= dFimMes }
			EndIf
			
			While Eval( bWhileSE1 )
				
				If !( SE1->E1_TIPO $ ( MVABATIM + "/" + MV_CRNEG + "/" + MVPROVIS + "/" + MVRECANT ) ) .And. ;
					Eval( bCondSE1 )
					
					If lM461RTFI
						lProcessa := ExecBlock( "M461RTFI", .F., .F.,{ SE1->( Recno() ) } )
					Else
						lProcessa := .T.
					EndIf
					
					If lAplVlMn
						If SE1->E1_APLVLMN == "2"
							lProcessa := .F.
						Endif
					Endif
					
					//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//ЁTrata Filial de inclusao do TITULO _MSFIL para so cosiderar na retencao PIS/COFINS/CSL somente titulos da mesma filial Ё
					//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If lProcessa .And. Empty(xFilial("SE1")) .And. SE1->(FieldPos("E1_MSFIL"))>0 .And. !Empty(SE1->E1_MSFIL)
						lProcessa := Iif( SE1->E1_MSFIL == SM0->M0_CODFIL , .T. , .F. )
					EndIf
					
					If lProcessa
						
						If cModTot == "1"
							//Obtenho o valor das devolucoes efetuadas para o titulo dentro do periodo
							nVlDevolv := Baixas(SE1->E1_NATUREZ,SE1->E1_PREFIXO,SE1->E1_NUM, ;
							SE1->E1_PARCELA,SE1->E1_TIPO,SE1->E1_MOEDA,"R",;
							SE1->E1_CLIENTE,SE1->E1_VENCREA,SE1->E1_LOJA,,  ;
							dIniMes,dFimMes)[13]
							
							aDadosRef[1] += SE1->E1_VALOR - nVlDevolv
							
							If SE1->(FieldPos("E1_BASEPIS")) > 0 .And. SE1->(FieldPos("E1_BASECOF")) > 0 .And. SE1->(FieldPos("E1_BASECSL")) > 0 .And. lBaseImp
								
								If SE1->E1_BASEPIS > 0 .Or. SE1->E1_BASECOF > 0 .Or. SE1->E1_BASECSL > 0
									If SE1->E1_BASEPIS == SE1->E1_VALOR
										aDadosRef[6] += SE1->E1_BASEPIS - nVlDevolv
									Else
										nVlDevPro := nVlDevolv * Round(SE1->E1_BASEPIS / SE1->E1_VALOR,6)
										aDadosRef[6] += SE1->E1_BASEPIS - nVlDevPro
									EndIf
									If SE1->E1_BASECOF == SE1->E1_VALOR
										aDadosRef[7] += SE1->E1_BASECOF - nVlDevolv
									Else
										nVlDevPro := nVlDevolv * Round(SE1->E1_BASECOF / SE1->E1_VALOR,6)
										aDadosRef[7] += SE1->E1_BASECOF - nVlDevPro
									EndIf
									If SE1->E1_BASECSL == SE1->E1_VALOR
										aDadosRef[8] += SE1->E1_BASECSL - nVlDevolv
									Else
										nVlDevPro := nVlDevolv * Round(SE1->E1_BASECSL / SE1->E1_VALOR,6)
										aDadosRef[8] += SE1->E1_BASECSL - nVlDevPro
									EndIf
								Else
									aDadosRef[6] += SE1->E1_VALOR - nVlDevolv
									aDadosRef[7] += SE1->E1_VALOR - nVlDevolv
									aDadosRef[8] += SE1->E1_VALOR - nVlDevolv
								EndIf
								
							Else
								aDadosRef[6] += SE1->E1_VALOR - nVlDevolv
								aDadosRef[7] += SE1->E1_VALOR - nVlDevolv
								aDadosRef[8] += SE1->E1_VALOR - nVlDevolv
							EndIf
							
						EndIf
						
						//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Adiciona ao array apenas os titulos que calcularam retencao e possuem saldo Ё
						//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						If	( !Empty( SE1->E1_PIS ) .Or. !Empty( SE1->E1_COFINS ) .Or. !Empty( SE1->E1_CSLL ) )
							
							If cModTot == "2"
								//Obtenho o valor das devolucoes efetuadas para o titulo dentro do periodo
								nVlDevolv := Baixas(SE1->E1_NATUREZ,SE1->E1_PREFIXO,SE1->E1_NUM, ;
								SE1->E1_PARCELA,SE1->E1_TIPO,SE1->E1_MOEDA,"R",;
								SE1->E1_CLIENTE,SE1->E1_VENCREA,SE1->E1_LOJA,,  ;
								dIniMes,dFimMes)[13]
								
								aDadosRef[1] += SE1->E1_VALOR - nVlDevolv
								
								If SE1->(FieldPos("E1_BASEPIS")) > 0 .And. SE1->(FieldPos("E1_BASECOF")) > 0 .And. SE1->(FieldPos("E1_BASECSL")) > 0 .And. lBaseImp
									
									If SE1->E1_BASEPIS > 0 .Or. SE1->E1_BASECOF > 0 .Or. SE1->E1_BASECSL > 0
										If SE1->E1_BASEPIS == SE1->E1_VALOR
											aDadosRef[6] += SE1->E1_BASEPIS - nVlDevolv
										Else
											nVlDevPro := nVlDevolv * Round(SE1->E1_BASEPIS / SE1->E1_VALOR,6)
											aDadosRef[6] += SE1->E1_BASEPIS - nVlDevPro
										EndIf
										If SE1->E1_BASECOF == SE1->E1_VALOR
											aDadosRef[7] += SE1->E1_BASECOF - nVlDevolv
										Else
											nVlDevPro := nVlDevolv * Round(SE1->E1_BASECOF / SE1->E1_VALOR,6)
											aDadosRef[7] += SE1->E1_BASECOF - nVlDevPro
										EndIf
										If SE1->E1_BASECSL == SE1->E1_VALOR
											aDadosRef[8] += SE1->E1_BASECSL - nVlDevolv
										Else
											nVlDevPro := nVlDevolv * Round(SE1->E1_BASECSL / SE1->E1_VALOR,6)
											aDadosRef[8] += SE1->E1_BASECSL - nVlDevPro
										EndIf
									Else
										aDadosRef[6] += SE1->E1_VALOR - nVlDevolv
										aDadosRef[7] += SE1->E1_VALOR - nVlDevolv
										aDadosRef[8] += SE1->E1_VALOR - nVlDevolv
									EndIf
									
								Else
									aDadosRef[6] += SE1->E1_VALOR - nVlDevolv
									aDadosRef[7] += SE1->E1_VALOR - nVlDevolv
									aDadosRef[8] += SE1->E1_VALOR - nVlDevolv
								EndIf
								
							EndIf
							
							If ( !Empty( SE1->E1_SABTPIS ) .Or. !Empty( SE1->E1_SABTCOF ) .Or. !Empty( SE1->E1_SABTCSL ) )
								
								aDadosRef[2] += SE1->E1_SABTPIS
								aDadosRef[3] += SE1->E1_SABTCOF
								aDadosRef[4] += SE1->E1_SABTCSL
								
								AAdd( aRecnos, SE1->( RECNO() ) )
							EndIf
							
						EndIf
						
					EndIf
					
				EndIf
				
				SE1->( dbSkip() )
				
			EndDo
			
			If cTipoData == "1"
				
				SE1->( dbSeek( xFilial( "SE1" ) + aLojas[nLoop,1] + aLojas[nLoop,2] + "B" + DToS( dIniMes ), .T. ) )
				bWhileSE1 := { || !SE1->( Eof() ) .And. SE1->E1_FILIAL == xFilial( "SE1" ) 		.And. ;
				SE1->E1_CLIENTE == aLojas[nLoop,1] .And. SE1->E1_LOJA == aLojas[nLoop,2] .And. ;
				SE1->E1_STATUS  == "B" .And. 	SE1->E1_VENCREA >= dIniMes .And. ;
				SE1->E1_VENCREA <= dFimMes	}
				
				bCondSE1 := { || .T. }
				
			Else
				
				SE1->( dbSeek( xFilial( "SE1" ) + aLojas[nLoop,1] + aLojas[nLoop,2] + "B" ) )
				bWhileSE1 := { || !SE1->( Eof() ) .And. SE1->E1_FILIAL == xFilial( "SE1" ) 		.And. ;
				SE1->E1_CLIENTE == aLojas[nLoop,1] .And. SE1->E1_LOJA == aLojas[nLoop,2] .And. ;
				SE1->E1_STATUS  == "B" }
				
				bCondSE1 := { || SE1->E1_VENCTO >= dIniMes .And. SE1->E1_VENCTO <= dFimMes }
				
			EndIf
			
			While Eval( bWhileSE1 )
				
				If !( SE1->E1_TIPO $ ( MVABATIM + "/" + MV_CRNEG + "/" + MVPROVIS + "/" + MVRECANT ) ) .And. ;
					Eval( bCondSE1 )
					
					If lM461RTFI
						lProcessa := ExecBlock( "M461RTFI", .F., .F.,{ SE1->( Recno() ) } )
					Else
						lProcessa := .T.
					EndIf
					
					If lAplVlMn
						If SE1->E1_APLVLMN == "2"
							lProcessa := .F.
						Endif
					Endif
					
					//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//ЁTrata Filial de inclusao do TITULO _MSFIL para so cosiderar na retencao PIS/COFINS/CSL somente titulos da mesma filial Ё
					//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If lProcessa .And. Empty(xFilial("SE1")) .And. SE1->(FieldPos("E1_MSFIL"))>0 .And. !Empty(SE1->E1_MSFIL)
						lProcessa := Iif( SE1->E1_MSFIL == SM0->M0_CODFIL , .T. , .F. )
					EndIf
					
					If lProcessa
						
						If cModTot == "1"
							//Obtenho o valor das devolucoes efetuadas para o titulo dentro do periodo
							nVlDevolv := Baixas(SE1->E1_NATUREZ,SE1->E1_PREFIXO,SE1->E1_NUM, ;
							SE1->E1_PARCELA,SE1->E1_TIPO,SE1->E1_MOEDA,"R",;
							SE1->E1_CLIENTE,SE1->E1_VENCREA,SE1->E1_LOJA,,  ;
							dIniMes,dFimMes)[13]
							
							aDadosRef[1] += SE1->E1_VALOR - nVlDevolv
							
							If SE1->(FieldPos("E1_BASEPIS")) > 0 .And. SE1->(FieldPos("E1_BASECOF")) > 0 .And. SE1->(FieldPos("E1_BASECSL")) > 0 .And. lBaseImp
								
								If SE1->E1_BASEPIS > 0 .Or. SE1->E1_BASECOF > 0 .Or. SE1->E1_BASECSL > 0
									If SE1->E1_BASEPIS == SE1->E1_VALOR
										aDadosRef[6] += SE1->E1_BASEPIS - nVlDevolv
									Else
										nVlDevPro := nVlDevolv * Round(SE1->E1_BASEPIS / SE1->E1_VALOR,6)
										aDadosRef[6] += SE1->E1_BASEPIS - nVlDevPro
									EndIf
									If SE1->E1_BASECOF == SE1->E1_VALOR
										aDadosRef[7] += SE1->E1_BASECOF - nVlDevolv
									Else
										nVlDevPro := nVlDevolv * Round(SE1->E1_BASECOF / SE1->E1_VALOR,6)
										aDadosRef[7] += SE1->E1_BASECOF - nVlDevPro
									EndIf
									If SE1->E1_BASECSL == SE1->E1_VALOR
										aDadosRef[8] += SE1->E1_BASECSL - nVlDevolv
									Else
										nVlDevPro := nVlDevolv * Round(SE1->E1_BASECSL / SE1->E1_VALOR,6)
										aDadosRef[8] += SE1->E1_BASECSL - nVlDevPro
									EndIf
								Else
									aDadosRef[6] += SE1->E1_VALOR - nVlDevolv
									aDadosRef[7] += SE1->E1_VALOR - nVlDevolv
									aDadosRef[8] += SE1->E1_VALOR - nVlDevolv
								EndIf
								
							Else
								aDadosRef[6] += SE1->E1_VALOR - nVlDevolv
								aDadosRef[7] += SE1->E1_VALOR - nVlDevolv
								aDadosRef[8] += SE1->E1_VALOR - nVlDevolv
							EndIf
							
						EndIf
						
						//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Adiciona ao array apenas os titulos que calcularam retencao e possuem saldo Ё
						//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						If	( !Empty( SE1->E1_PIS ) .Or. !Empty( SE1->E1_COFINS ) .Or. !Empty( SE1->E1_CSLL ) )
							
							If cModTot == "2"
								//Obtenho o valor das devolucoes efetuadas para o titulo dentro do periodo
								nVlDevolv := Baixas(SE1->E1_NATUREZ,SE1->E1_PREFIXO,SE1->E1_NUM, ;
								SE1->E1_PARCELA,SE1->E1_TIPO,SE1->E1_MOEDA,"R",;
								SE1->E1_CLIENTE,SE1->E1_VENCREA,SE1->E1_LOJA,,  ;
								dIniMes,dFimMes)[13]
								
								aDadosRef[1] += SE1->E1_VALOR - nVlDevolv
								
								If SE1->(FieldPos("E1_BASEPIS")) > 0 .And. SE1->(FieldPos("E1_BASECOF")) > 0 .And. SE1->(FieldPos("E1_BASECSL")) > 0 .And. lBaseImp
									
									If SE1->E1_BASEPIS > 0 .Or. SE1->E1_BASECOF > 0 .Or. SE1->E1_BASECSL > 0
										If SE1->E1_BASEPIS == SE1->E1_VALOR
											aDadosRef[6] += SE1->E1_BASEPIS - nVlDevolv
										Else
											nVlDevPro := nVlDevolv * Round(SE1->E1_BASEPIS / SE1->E1_VALOR,6)
											aDadosRef[6] += SE1->E1_BASEPIS - nVlDevPro
										EndIf
										If SE1->E1_BASECOF == SE1->E1_VALOR
											aDadosRef[7] += SE1->E1_BASECOF - nVlDevolv
										Else
											nVlDevPro := nVlDevolv * Round(SE1->E1_BASECOF / SE1->E1_VALOR,6)
											aDadosRef[7] += SE1->E1_BASECOF - nVlDevPro
										EndIf
										If SE1->E1_BASECSL == SE1->E1_VALOR
											aDadosRef[8] += SE1->E1_BASECSL - nVlDevolv
										Else
											nVlDevPro := nVlDevolv * Round(SE1->E1_BASECSL / SE1->E1_VALOR,6)
											aDadosRef[8] += SE1->E1_BASECSL - nVlDevPro
										EndIf
									Else
										aDadosRef[6] += SE1->E1_VALOR - nVlDevolv
										aDadosRef[7] += SE1->E1_VALOR - nVlDevolv
										aDadosRef[8] += SE1->E1_VALOR - nVlDevolv
									EndIf
									
								Else
									aDadosRef[6] += SE1->E1_VALOR - nVlDevolv
									aDadosRef[7] += SE1->E1_VALOR - nVlDevolv
									aDadosRef[8] += SE1->E1_VALOR - nVlDevolv
								EndIf
								
							EndIf
							
							If ( !Empty( SE1->E1_SABTPIS ) .Or. !Empty( SE1->E1_SABTCOF ) .Or. !Empty( SE1->E1_SABTCSL ) )
								
								aDadosRef[2] += SE1->E1_SABTPIS
								aDadosRef[3] += SE1->E1_SABTCOF
								aDadosRef[4] += SE1->E1_SABTCSL
								
								AAdd( aRecnos, SE1->( RECNO() ) )
							EndIf
							
						EndIf
						
					EndIf
					
				EndIf
				
				SE1->( dbSkip() )
				
			EndDo
			
		Next nLoop
		
	#ENDIF
	
	//Se Filial for totalmente compartilhada, faz somente 1 vez
	If Empty(xFilial("SE1"))
		Exit
	ElseIf lGestao .and. lSE1Comp
		AAdd(aFilAux, xFilial("SE1"))
	EndIf
	
Next nFil

cFilAnt := cFilAtu

aDadosRef[ 5 ] := AClone( aRecnos )

If !Empty( aAreaSA1 ) 
	SA1->( RestArea( aAreaSA1 ) ) 
EndIf 	

If ExistBlock("M461CRET")

	aDadosRef := ExecBlock("M461CRET",.F.,.F.,{dReferencia ,aDadosRef})

EndIf
SE1->( RestArea( aAreaSE1 ) ) 

Return( aDadosRef ) 

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбддддддддддд©╠╠
╠╠ЁFun┤└o    ЁM461NumNF Ё Autor ЁRodrigo de A Sartorio  Ё Data Ё21.01.2005 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддаддддддддддд╢╠╠
╠╠Ё          ЁRotina de controle de numero de nota                         Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁlFirst - Indica se e' a primeira chamada                     Ё╠╠
╠╠Ё          ЁcSerie - Serie selecionada para obtencao do documento        Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁNumero da Nota                                               Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё Materiais                                                   Ё╠╠
╠╠юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function MA461NumNf(lFirst,cSerie,cNumNFs,lECF)
Local aArea     :=GetArea()
Local cDocRet   :=Space(Len(SD9->D9_DOC))
Local lTravou   :=.F.
Local lLockOK   := .T.                    // Controla se o lock no SD9 foi feito com sucesso
Local cAliasNew :=""
Local cQuery    :=""
Local nTentativas:=0
Local nX         :=0
Local nPosSerie  := 0                    // Posicao da serie no array aSerieSD9
Local dDtVazia   := CToD("")
Local cNumNSU    := Space(10)
Local lLockX5    := .F.
Local nCnt01     := 0
Local cFilSx5	 := xFilial("SX5")
Local aServico   :={"NFSC","NTSC","NTST","RMD","CF","RPS","SPED","NFCEE"}  //De acordo NSU - RICMS SC 
Local lServico   := Ascan( aServico, {|x| Alltrim(x)  == a460Especie(cSerie) }) > 0
Local lNSU       := SD9->(FieldPos("D9_NSU")) > 0
Local lEstado    := SuperGetMV("MV_ESTADO") == "SC"
Local lChgX5FIL  := ExistBlock("CHGX5FIL")

If Type("lMudouNum") == "U"
	Private lMudouNum := .F.	
EndIf
DEFAULT lFirst  :=.T.
DEFAULT cMin460D:=Replicate("0",Len(SD9->D9_DOC))
DEFAULT cNumNFs :=""
DEFAULT lECF    := .F.

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁBusca o maior numero do documento da serie informada caso ja tenha sido utilizada no diaЁ
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If Len(cSerie) < Len(SD9->D9_SERIE)
	cSerie := PadR(cSerie,Len(SD9->D9_SERIE))
EndIf

nPosSerie := aScan(aSerieSD9, { |x| x[01] == Trim(Upper(cSerie)) })
If nPosSerie == 0
   AADD(aSerieSD9,{Trim(Upper(cSerie)),cDocRet})
Else
   cMin460D  := aSerieSD9[nPosSerie][02]    
Endif

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Caso atenda a consistencia abaixo, numeracao da nota deve ser buscada do SD9 e nao a que consta na tabela "01"		   Ё
//Ё Utilizado para estado de SC: caso seja alterdo o numero da nota e na incllusao da segunda, em sequencia,			   Ё
//Ё o numero nao for alterado, buscar novo numero da tabela SD9 e nao a proxima da digitacao do usuario.				   Ё
//Ё Ex. Ultima nota gerada foi 000030. A proxima nota o usuario altera o numero para 000035. Na sequencia, caso o usuario  Ё
//Ё nao altere o numero, devera ser gerada a 000031 e nao 000036.														   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !lMudouNum .And. SuperGetMv("MV_TPNRNFS") == "3" .And. cMin460D <> Replicate("0",Len(SD9->D9_DOC)) .And. SuperGetMv("MV_MUDANUM",,.F.)
	cMin460D := Replicate("0",Len(SD9->D9_DOC))
EndIf

dDatabOri:=dDataBase
cFilOri  := xFilial("SD9")
// Se cNumNFS estiver preenchido significa que o usuario alterou o numero da nota em MV_TPNRNFS == "3"
// e o sistema deve respeitar o novo numero
If !Empty(cNumNFs)

	#IFDEF TOP
		cAliasNew := GetNextAlias()
		cQuery := "SELECT D9_DOC FROM " + RetSqlName( "SD9" )
		cQuery += " WHERE D9_FILIAL = '" + xFilial( "SD9" ) + "' AND D9_SERIE = '"+cSerie+"' AND D9_DTUSO = '"+Space(8)+"' AND "
		cQuery += "D9_DOC <> '"+cDocRet+   "' AND D9_DOC = '"+cNumNFS + "' AND D_E_L_E_T_ = ' '"
		cQuery := ChangeQuery(cQuery)
		SD9->(dbCommit())
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasNew,.F.,.T.)
		dbSelectArea(cAliasNew)
		If !(Eof()) .And. !Empty((cAliasNew)->D9_DOC)
			// Guarda ultimo documento do dia anterior
			cMin460D:=(cAliasNew)->D9_DOC
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁArmazena o maior numero do documento da serie para ser recuperado nas proximas vendas Ё
			//Ёdesta serie                                                                           Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			nPosSerie := aScan(aSerieSD9, { |x| x[01] == Trim(Upper(cSerie)) })
			If nPosSerie > 0
			   aSerieSD9[nPosSerie][02] := cMin460D
			Endif   
		EndIf
		DbCloseArea();cQuery  := ""
	#ELSE
		// D9_FILIAL+D9_SERIE+D9_DOC
		dbSelectArea("SD9")
		dbSetOrder(2)
		dbSeek(xFilial("SD9")+cSerie+cNumNFs)
		If Found()
			cMin460d := D9_DOC
		EndIf
	#ENDIF	

Else

	// Obtem o ultimo documento do dia anterior para garantir que ira gerar documento maior
	#IFDEF TOP
		cAliasNew := GetNextAlias()
		cQuery := "SELECT MAX(D9_DOC) D9_DOC FROM " + RetSqlName( "SD9" )
		cQuery += " WHERE D9_FILIAL = '" + xFilial( "SD9" ) + "' AND D9_SERIE = '"+cSerie+"' AND D9_DTUSO <> '"+Space(8)+"' AND "
		cQuery += "D9_DTUSO < '"+DTOS(dDataBase)+"' AND D9_DOC <> '"+cDocRet+  "' AND D_E_L_E_T_ = ' '"
		cQuery := ChangeQuery(cQuery)
		SD9->(dbCommit())
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasNew,.F.,.T.)
		dbSelectArea(cAliasNew)
		If !(Eof()) .And. !Empty((cAliasNew)->D9_DOC)
			// Guarda ultimo documento do dia anterior
			cMin460D:=(cAliasNew)->D9_DOC
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁArmazena o maior numero do documento da serie para ser recuperado nas proximas vendas Ё
			//Ёdesta serie                                                                           Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			nPosSerie := aScan(aSerieSD9, { |x| x[01] == Trim(Upper(cSerie)) })
			If nPosSerie > 0
			   aSerieSD9[nPosSerie][02] := cMin460D
			Endif   
		EndIf
		DbCloseArea();cQuery  := ""
	#ELSE
		// D9_FILIAL+D9_SERIE+DTOS(D9_DTUSO)+D9_DOC
		dbSelectArea("SD9")
		dbSetOrder(1)
		dbSeek(xFilial("SD9")+cSerie+DTOS(dDatabase-1)+Replicate("z",Len(cMin460d)),.T.)
		dbSkip(-1)
		// Guarda ultimo documento do dia anterior
		If D9_FILIAL+D9_SERIE == xFilial("SD9")+cSerie .And. !Empty(D9_DTUSO)
			cMin460d := D9_DOC
		EndIf
	#ENDIF
EndIf

// Efetua laco na numeracao garantindo utilizar um numero nao travado por nenhum usuario
While .T.
	// Trava chave para obter numero
	If lFirst
		While !LockByName("A461NUMNF",.T.,!Empty(xFilial("SD9")),.T.) .And. nTentativas <= 50
			nTentativas++
			Sleep(5000)
		End
		// Se apos 50 tentativas nao conseguir travar chave aborta sistema
		If nTentativas >= 50
			UserException("NAO CONSEGUI LOCKBYNAME A461NUMNF")
		EndIf
	EndIf

	If !lServico .And. lEstado .And. lNSU .And. !lECF
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁBusca o maior numero do NSU                                                             Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		#IFDEF TOP
			cAliasNew := GetNextAlias()
			cQuery := " SELECT MAX(D9_NSU) D9_NSU FROM " + RetSqlName( "SD9" )
			cQuery += " WHERE D9_FILIAL = '" + xFilial( "SD9" ) + "' AND "
			cQuery += " D9_NSU <> '" + Space(Len(SD9->D9_NSU)) + "' AND D_E_L_E_T_ = ' '"
			cQuery := ChangeQuery(cQuery)
			SD9->(dbCommit())
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasNew,.F.,.T.)
			dbSelectArea(cAliasNew)
			cNumNSU := IIf((!Eof() .And. !Empty((cAliasNew)->D9_NSU)),Soma1( D9_NSU, TamSX3("D9_NSU")[1]),"0000000001")		
			DbCloseArea();cQuery  := ""
		#ELSE
			dbSelectArea("SD9")
			dbSetOrder(3)
			dbSeek(xFilial("SD9")+"ZZZZZZZZZZ",.T.)			
			dbSkip(-1)			
			cNumNSU := IIf(!Eof(),Soma1( D9_NSU, TamSX3("D9_NSU")[1]),"0000000001")	
		#ENDIF
	EndIf
	
	// Numero das tentativas para obtencao de numero
	nTentativas:=0
	// Trava documentos
	dbSelectArea("SD9")
	dbSetOrder(1) // D9_FILIAL+D9_SERIE+DTOS(D9_DTUSO)+D9_DOC
	dbSeek(xFilial("SD9")+cSerie+DToS(dDtVazia)+cMin460d,.T.)
	While !Eof() .And. (D9_FILIAL+D9_SERIE == xFilial("SD9")+cSerie)
	    lLockOK := .T.  
		lTravou := MsRLock() .AND. RecLock("SD9")
		If lTravou
		   lTravou  := Empty(D9_DTUSO)
		Else
		   lLockOK  := .F.   
		EndIf   
		If !lTravou
			// Tenta os 50 primeiros registros, se todos estiverem com data de uso gravada
			// forca chamada da funcao para criar novos registros
			IF !Empty(D9_DTUSO)
				nX++
				IF nX > 50
					Exit
				Endif
			Endif
			If !InTransaction() .AND. lLockOK
			   MsRUnLock()   
			EndIf
			If !lMudouNum
				dbSkip()
			EndIf	
		Else
			If D9_DOC > cMin460d .Or. lMudouNum
				Exit
			Else
				lTravou:=.F.
				If !InTransaction() .AND.  lLockOK
				   MsRUnLock()   
				EndIf				
				dbSkip()
			EndIf
		EndIf
	End
	// Nao conseguiu achar nenhum numero. Deve criar numeros
	If !lTravou
		// Se nao conseguir numeracao pela segunda vez chama a Final
		IF !lFirst
			FINAL("Problemas MA461NumNf")
		Endif
		// Chama Processamento para criar numero
		Processa({|lEnd| MA461MkNum(cSerie)},"Numeracao de Documentos","Gerando Numeracao no arquivo SD9",.F.)
		// Apos criar numeros chama a funcao para obter numero
		cDocRet:=MA461NumNf(.F.,cSerie,cNumNFs,lECF)
		// Retira trava
		If lFirst
			UnLockByName("A461NUMNF",.T.,!Empty(xFilial("SD9")),.T.)
		EndIf
		// Abandona laco
		Exit
	// Obtem numero e grava data
	Else
		cDocRet:=D9_DOC
		If !lServico  .And. lEstado .And. lNSU .And. !lECF
			Replace D9_NSU     With cNumNSU
		EndIf	
		Replace D9_DTUSO   With dDataBase
		Replace D9_USUARIO With "Num.Ocupado"
		Replace D9_HORA    With StrTran(Left(Time(),5),':','')
	Endif
	If ExistBlock("MA461NNF")
		ExecBlock("MA461NNF",.F.,.F.,{cDocRet,"1"})
	EndIf	
	If lFirst
		UnLockByName("A461NUMNF",.T.,!Empty(xFilial("SD9")),.T.)
	EndIf
	// Valida a numeracao e termina a gravacao se o numero estiver OK
	If lTravou .And. VldSX5Num(SD9->D9_DOC,SD9->D9_SERIE,.F.)
		Replace D9_USUARIO With CUSERNAME
		SD9->(dbCommit())
		Exit
	EndIf
	nTentativas++
	// Se apos 20 tentativas nao conseguir obter numero aborta sistema
	IF nTentativas > 20
		UserException("Problemas no SD9, Verificar proximo Numero disponivel")
	Endif
End
If ExistBlock("MA461NNF")
	ExecBlock("MA461NNF",.F.,.F.,{cDocRet,"2"})
EndIf
                   
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVerifica o ponto de entrada para tratamento de filial do SX5            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lChgX5FIL
	cFilSx5 := ExecBlock("CHGX5FIL",.f.,.f.)
Endif

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Pesquisa a serie da nota selecionada                                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
DbSelectArea( "SX5" )
dbSetOrder(1)
If MsSeek( cFilSx5 +"01"+SD9->D9_SERIE,.F. ) .And. SimpleLock("SX5")
	lLockX5 := RecLock("SX5")
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Pega o proximo numero de nota fiscal disponivel                        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lLockX5
	If (Val(SD9->D9_DOC) >= Val(X5Descri()))
		SX5->X5_DESCRI  := Somait(AllTrim(cDocRet))
		SX5->X5_DESCSPA := Somait(AllTrim(cDocRet))
		SX5->X5_DESCENG := Somait(AllTrim(cDocRet))
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Libera o SX5                                                           Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	SX5->(MsUnLock())
EndIf
RestArea(aArea)

Return( cDocRet )

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбддддддддддд©╠╠
╠╠ЁFun┤└o    ЁM461MkNum Ё Autor ЁRodrigo de A Sartorio  Ё Rev. Ё21.01.2005 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддаддддддддддд╢╠╠
╠╠Ё          ЁRotina de criacao de numero de nota no arquivo SD9           Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁcSerie - Serie selecionada para obtencao do documento        Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁNenhum                                                       Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё Materiais                                                   Ё╠╠
╠╠юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function MA461MkNum(cSerie)
LOCAL cLastDoc   := IIf((cPaisloc == "BRA" .And. Type("cNumero") <> "U" .And. Len(AllTrim(cNumero)) < Len(SD9->D9_DOC)),Space(Len(cNumero)),Space(Len(SD9->D9_DOC)))
Local aAreaSD9   :=SD9->(GetArea())
Local aAreaSF2   :={}

#IFDEF TOP
	Local cAliasNew  :=""
	Local cQuery     :=""	
#ENDIF	

aAreaSF2   :=SF2->(GetArea())

// Ao conseguir travar obtem o ultimo numero e inclui mais x numeros
dbSelectArea("SD9")
dbSetOrder(2) // D9_FILIAL+D9_SERIE+D9_DOC+DTOS(D9_DTUSO)
// Obtem o ultimo numero da filial
#IFDEF TOP
	cAliasNew := GetNextAlias()
	cQuery := "SELECT MAX(D9_DOC) D9_DOC FROM " + RetSqlName( "SD9" )
	cQuery += " WHERE D9_FILIAL = '" + xFilial( "SD9" ) + "' AND D9_SERIE = '"+cSerie+"' AND D9_DOC <> '"+cLastDoc+"'"
	cQuery += " AND D_E_L_E_T_ = ' '"
	cQuery := ChangeQuery(cQuery)
	SD9->(dbCommit())
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasNew,.F.,.T.)
	dbSelectArea(cAliasNew)
	If !(Eof()) .And. !Empty((cAliasNew)->D9_DOC)
		cLastDoc:=AllTrim((cAliasNew)->D9_DOC)
	EndIf
	DbCloseArea();cQuery:=""
#ELSE
	dbSeek(xFilial("SD9")+cSerie+Replicate("z",Len(cLastDoc)),.T.)
	dbSkip(-1)
	If D9_FILIAL+D9_SERIE == xFilial("SD9")+cSerie
		cLastDoc:=AllTrim(SD9->D9_DOC)
	EndIf
#ENDIF
// Se nao encontra nada no SD9 pesquisa no SF2
If Empty(cLastDoc)
	SF2->(dbSetOrder(1))
	#IFDEF TOP
		cAliasNew := GetNextAlias()
		cQuery := "SELECT MAX(F2_DOC) F2_DOC FROM " + RetSqlName( "SF2" )
		cQuery += " WHERE F2_FILIAL = '" + xFilial( "SF2" ) + "' AND "
		cQuery += "F2_SERIE = '"+cSerie+"' AND D_E_L_E_T_ = ' '"
		cQuery := ChangeQuery(cQuery)
		SD9->(dbCommit())
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasNew,.F.,.T.)
		dbSelectArea(cAliasNew)
		If !(Eof()) .And. !Empty((cAliasNew)->F2_DOC)
			cLastDoc:=AllTrim((cAliasNew)->F2_DOC)
		Else
			cLastDoc:=Replicate("0",Len(cLastDoc))
		EndIf
		DbCloseArea();cQuery  := ""
	#ELSE
		SF2->(dbSetOrder(4))
		SF2->(dbSeek(xFilial("SF2")+cSerie+"21001231"+Replicate("z",Len(cLastDoc)),.T.))
		SF2->(dbSkip(-1))                     
		// Se achou algum documento assume como ultimo, caso contrario comeca com valor zerado
		If SF2->F2_FILIAL == xFilial("SF2") .And. SF2->F2_SERIE == cSerie
			cLastDoc := AllTrim(SF2->F2_DOC)
		Else
			cLastDoc := Replicate("0",Len(cLastDoc))
		EndIf
		RestArea(aAreaSF2)
	#ENDIF
EndIf
RestArea(aAreaSD9)
// Chama Job para criar documento em outra sessao
StartJob("M461JBNUM",GetEnvServer(), .t.,cEmpAnt,cFilAnt, cLastDoc,cSerie)

Return

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбддддддддддд©╠╠
╠╠ЁFun┤└o    ЁM461JBNum Ё Autor ЁRodrigo de A Sartorio  Ё Rev. Ё27.01.2005 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддаддддддддддд╢╠╠
╠╠Ё          ЁRotina de criacao de numero de nota no arquivo SD9 atraves deЁ╠╠
╠╠Ё          ЁJOB.                                                         Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁcEmp     - Empresa                                           Ё╠╠
╠╠Ё          ЁcFil     - Filial                                            Ё╠╠
╠╠Ё          ЁcLastDoc - Ultimo documento existente                        Ё╠╠
╠╠Ё          ЁcSerie   - Serie utilizada no documento                      Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁNenhum                                                       Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё Materiais                                                   Ё╠╠
╠╠юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function M461JBNUM(cEmp,cFil,cLastDoc,cSerie)
LOCAL nLacoSoma  :=0
LOCAL nTotNum    :=5000
// Seta job para nao consumir licensas
RpcSetType(3)
// Seta job para empresa filial desejadas
RPCSetEnv(cEmp,cFil)
dbSelectArea("SD9")
// Se numero da nota encontrada em MA461MkNum existir em SF3 (cancelada ou nao), busca proximo numero nao utilizada.
cLastDoc:=Soma1(cLastDoc)
While Ma460ChkF3(cLastDoc,cSerie,.F.)
	cLastDoc:=Soma1(cLastDoc)
EndDo
// Inicia transacao
For nLacoSoma:=1 to nTotNum
	Begin Transaction

	RecLock("SD9",.T.)

	Replace D9_FILIAL With xFilial()
	Replace D9_DOC    With cLastDoc
	Replace D9_SERIE  With cSerie
	cLastDoc:=Soma1(cLastDoc)

	End Transaction	
Next nLacoSoma

Return


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMA461Conh Ё Autor ЁSergio Silveira        Ё Data Ё29/01/2003Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁChama a visualizacao do documento de saida a partir da      Ё╠╠
╠╠Ё          Ёliberacao                                                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁExpL1:= MA461Conh( ExpC1, ExpN1, ExpN2 )                    Ё╠╠ 
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpL1: .T.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpC1: Alias                                                Ё╠╠
╠╠Ё          ЁExpN1: Numero do registro                                   Ё╠╠
╠╠Ё          ЁExpN2: Opcao                                                Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/

Function Ma461Conh( cAlias, nRecno, nOpcx ) 

Local aArea    := GetArea() 
Local aAreaSC9 := SC9->( GetArea() ) 

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se este item de liberacao gerou documento de saida            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !Empty( SC9->C9_NFISCAL ) .And. ((SC9->C9_BLCRED == "10" .And. SC9->C9_BLEST == "10").Or.(SC9->C9_BLCRED == "ZZ" .And. SC9->C9_BLEST == "ZZ"))
	SF2->( dbSetOrder( 1 ) ) 
 	If SF2->( MsSeek( xFilial( "SF2" ) + SC9->C9_NFISCAL + SC9->C9_SERIENF + SC9->C9_CLIENTE + SC9->C9_LOJA )) 
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁCria um aRotina para compatibilizar com a visualizacao do documento     Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		MsDocument( "SF2", SF2->( recno() ), nOpcx )
	EndIf 
Else 
	Aviso( STR0034, STR0035, {STR0036}, 2 )  //"Atencao !"###"Este item de liberacao nao gerou documento de saida. "###"Ok"
EndIf 
                                      
RestArea( aAreaSC9 )                          
RestArea( aArea ) 

Return( .T. ) 

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Funcao    ЁA461Legend╨Autor  ЁRodrigo de A Godinho╨ Data Ё  18/11/05   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     ЁLegenda para os status dos pedidos de venda.                ╨╠╠
╠╠╨          Ё                                                            ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       ЁMATA461                                                     ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A461Legend()
Local aCores := {}
aCores := {	{"ENABLE",STR0043},;//Pedido  de Venda liberado
			{"DISABLE",STR0044},;//Pedido de Venda faturado
			{"BR_AZUL",STR0045}} //Pedido de Venda com bloqueio	
//зддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de Entrada para alterar cores da legenda    Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock("M461LEG")
	aCores := ExecBlock("M461LEG",.F.,.F.,aCores)
EndIf
BrwLegenda(STR0005,STR0042,aCores)//"Prepara┤└o dos Documentos de Sa║da"/"Legenda"

Return( .T. ) 	
/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁMa460ChkF3Ё Autor Ё Marco Bianchi         Ё Data Ё27/12/2007Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o ЁNa geracao da tabela SD9 (MV_TPNRNFS=3), verifica se a nota Ё╠╠
╠╠Ё          Ёencontrada em MA461MkNum existe em SF3 (cancelada ou nao).  Ё╠╠
╠╠Ё          ЁSe existir nao permite utilizacao do numero.                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁMa460ChkF3(cNumNF,cSerNF)                                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁRetorna .T. / .F.                                           Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      ЁM461JBNUM                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ


/*/
Static Function Ma460ChkF3(cIniNUM,cIniSER)

Local aArea   := GetArea()
Local aAreaSF3 := SF3->(GetArea())
Local lBack   := .F.
#IFDEF TOP
Local cQuery  := ""
#ENDIF

If cPaisLoc == "BRA"
	#IFDEF TOP
		If TcSrvType()<>"AS/400"
			SF3->(dbCommit())
			cQuery := "SELECT COUNT(*) SF3NOTA "
			cQuery += "FROM "+RetSqlName("SF3")+" SF3 "
			cQuery += "WHERE SF3.F3_FILIAL='"+xFilial("SF3")+"' AND "
			cQuery += "SF3.F3_SERIE='"+cIniSer+"' AND "
			cQuery += "SF3.F3_NFISCAL='"+cIniNum+"' AND "
			cQuery += "(SF3.F3_CFO LIKE '5%' OR SF3.F3_CFO LIKE '6%' OR SF3.F3_CFO LIKE '7%' OR SF3.F3_FORMUL='S' ) AND "
			cQuery += "SF3.D_E_L_E_T_=' ' "
			
			cQuery := ChangeQuery(cQuery)
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"CHKF3NOTA",.T.,.T.)
			
			If CHKF3NOTA->SF3NOTA > 0
				lBack := .T.
			EndIf
			dbCloseArea()
			dbSelectArea("SF3")
		Else
	#ENDIF
		DbSelectArea( "SF3" )
		DbSetOrder( 5 )
		If MsSeek( xFilial("SF3")+cIniSER+cIniNUM,.F.)
			If Substr(SF3->F3_CFO,1,1) < "5"
				While !Eof() .And. (xFilial("SF3")+cIniSER+cIniNUM) == (SF3->F3_FILIAL+SF3->F3_SERIE+SF3->F3_NFISCAL) .And. !lBack
					If (SF3->F3_FORMUL == "S" .Or.Substr(SF3->F3_CFO,1,1) > "5")
						lBack := .T.
					EndIf
					DbSelectArea("SF3")					
					DbSkip()
				EndDo
			Else
				lBack := .T.
			EndIf
		EndIf
		#IFDEF TOP
		EndIf
		#ENDIF
EndIf

RestArea(aAreaSF3)
RestArea(aArea)

Return( lBack )
/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁMa461LibD9Ё Autor Ё Marco Bianchi         Ё Data Ё24/10/2008Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o ЁLibera numeracao da nota no SD9 dentro das seguintes situa- Ё╠╠
╠╠Ё          Ёcoes:                                                       Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠Ё          Ё1. Caso 2 usuarios marquem o mesmo pedido e confirme a      Ё╠╠
╠╠Ё          Ё   gravacao da nota, o segundo usuario tera gravado o SD9,  Ё╠╠
╠╠Ё          Ё   porem, nao ira gerar a nota, pois foi gerada pelo pri-   Ё╠╠
╠╠Ё          Ё   meiro usuario. Desta forma, tornou-se necessario liberar Ё╠╠
╠╠Ё          Ё   o numero da nota no SD9 reservada pelo primeiro usuario. Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠Ё          Ё2. Caso um usuario marque e tente faturar um pedido que estaЁ╠╠
╠╠Ё          Ё   sendo alterado por outro usuario.                        Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁMa461LibD9(cSerie)                                 		  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁRetorna .T. / .F.                                           Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      ЁMaPvlNfs2                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function Ma461LibD9(cSerie,cNumero)
      
Local nTentativas	:= 0
Local aRegSD9		:= SD9->(GetArea("SD9"))
Local lTravou		:= .F.

dbSelectArea("SD9")
dbSetOrder(2) // D9_FILIAL+D9_SERIE+D9_DOC+DTOS(D9_DTUSO)
dbSeek(xFilial("SD9")+cSerie+cNumero)

While !Eof() .And. (D9_FILIAL+D9_SERIE+Alltrim(D9_DOC) == xFilial("SD9")+cSerie+Alltrim(cNumero)) .And. !lTravou
	lTravou := RecLock("SD9",.F.)
	If lTravou
		dbSelectArea("SD9")
		Replace D9_DTUSO   With CTOD("  /  /  ")
		Replace D9_USUARIO With ""
		Replace D9_HORA    With ""
		Msunlock()
	Else
		nTentativas+=1
		If nTentativas >= 50
			Exit
		EndIf
	EndIf
EndDo
RestArea(aRegSD9)

Return
/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁMa460InfOrЁ Autor Ё Marcelo Alexandre     Ё Data Ё17/02/2009Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o ЁFuncao criada para retornar para matxfis a informacao da UF Ё╠╠
╠╠Ё          Ёe aliquota da nota original de entrada quando o produto pos-Ё╠╠
╠╠Ё          Ёsuir rastro por sublote.                                    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁMa460InfOr                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁRetorna													  Ё╠╠
╠╠Ё 		 |UF Original da nota de entrada                              Ё╠╠
╠╠Ё 		 |Aliquota Original da nota de entrada                        Ё╠╠
╠╠Ё 		 |Quantidade proporcional da venda referente ao lote          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё                                                            Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function Ma460InfOr(cPedido,cItem,cProduto,cLocal,nQuant,nQuant2UM,dDataLib,cLoteCtl,cNumLote)

Local nX	  := 0
Local nPropLot:= 0
Local lRastro	 := ExistBlock("MAFISRASTRO")
Local lRastroLot := .F.
Local aSaldos	 := {}
Local aInfLote	 := {}
Local aNfOri     := {}
//зддддддддддддддддддддддддддддддддддддддддддддд©
//ЁTratamento do IVA Ajustado                   Ё
//юддддддддддддддддддддддддддддддддддддддддддддды			
SB1->(dbSetOrder(1))
If SB1->(MsSeek(xFilial("SB1")+cProduto))
   lIVAAju := IIF(SB1->(FieldPos("B1_IVAAJU")) > 0 .And. SB1->B1_IVAAJU == '1' .And. (IIF(lRastro,lRastroLot := ExecBlock("MAFISRASTRO",.F.,.F.),Rastro(cProduto,"S"))),.T.,.F.)
EndIf
If lIVAAju
	dbSelectArea("SC6")
	dbSetOrder(1)
	MsSeek(xFilial("SC6")+cPedido)
	aSaldos := SldPorLote(cProduto,cLocal,nQuant,nQuant2UM,cLoteCtl,cNumLote,NIL,NIL,NIL,.T.,NIL,NIL,NIL,NIL,dDataBase)

	For nX := 1 to Len(aSaldos)
		nPropLot := Round((aSaldos[nX][5]/SC6->C6_QTDVEN)*100,2)
		If lRastroLot
			dbSelectArea("SB8")
			dbSetOrder(5)
			If MsSeek(xFilial("SB8")+cProduto+aSaldos[nX][01])
				aadd(aInfLote,{SB8->B8_DOC,SB8->B8_SERIE,SB8->B8_CLIFOR,SB8->B8_LOJA,nPropLot})
			EndIf		
		Else				
			dbSelectArea("SB8")
			dbSetOrder(2)
			If MsSeek(xFilial("SB8")+aSaldos[nX][02]+aSaldos[nX][01])
				aadd(aInfLote,{SB8->B8_DOC,SB8->B8_SERIE,SB8->B8_CLIFOR,SB8->B8_LOJA,nPropLot})
			EndIf
		EndIf
		dbSelectArea("SF3")
		dbSetOrder(4)
		If MsSeek(xFilial("SF3")+aInfLote[nX][03]+aInfLote[nX][04]+aInfLote[nX][01]+aInfLote[nX][02])
			aadd(aNfOri,{SF3->F3_ESTADO,SF3->F3_ALIQICM,aInfLote[nX][05]})
		EndIf
	Next nX
EndIf			

Return( aNfOri )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁTELANFP╨Autor  Ё  Luis Gustavo	     ╨ Data Ё  07/08/09   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     Ё Apresenta tela para digitar CGC do cliente                 ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Parametro Ё Nil                                                        ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Retorno   Ё ExpC1 - CGC do cliente                                     ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё SIGAFAT	                                                  ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function TELANFP()
Local cCgc 	:= Space(18)				// CGC do cliente
Local lCont	:= .F.						// Continua apos digitar CGC
Local oDlg								// Objeto da Tela
Local oCgc								// Campo para digitar o CGC
Local oFontText							// Fonte do texto

//здддддддддддддддддддддд©
//ЁAbre tela para digitarЁ
//юдддддддддддддддддддддды
DEFINE FONT oFontText NAME "Courier New" SIZE 09,20
	//зддддддддддддддддддддддддддддддддддддд©
	//Ё"INFORME O CPF / CNPJ PARA IMPRESSцO"Ё
	//юддддддддддддддддддддддддддддддддддддды
	DEFINE MSDIALOG oDlg TITLE STR0050 FROM 323,412 TO 420,738 PIXEL STYLE DS_MODALFRAME STATUS
	
	//"Digite abaixo:"
	@ 005, 004 TO 30, 160 LABEL STR0051 PIXEL OF oDlg
	@ 013,007 MSGET oCgc VAR cCgc SIZE 150,10 FONT oFontText OF oDlg PIXEL
	
	DEFINE SBUTTON FROM 35, 104 TYPE 1 ENABLE OF oDlg ACTION (lCont := .T. , IIF(ValidCGC(@cCgc),oDlg:End(),NIL)) 
	DEFINE SBUTTON FROM 35, 134 TYPE 2 ENABLE OF oDlg ACTION (lCont := .F. , oDlg:End())

ACTIVATE MSDIALOG oDlg CENTERED

If lCont
	cCgc := Alltrim(cCgc)
Else
	cCgc := ""
EndIf

Return( cCgc )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁValidCGC	╨Autor  Ё Luis Gustavo 		 ╨ Data Ё  07/08/09   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     Ё Valida o CGC digitado se existe.                           ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Parametro Ё ExpC1 - CGC do cliente                                     ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Retorno   Ё ExpL1 - Retorno da funcao T ou F                           ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё SIGAFAT                                                   ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function ValidCGC(cCgc)
Local lRet 		:= .F.									// Retorno da funcao
Local cVerCgc 	:= cCgc									// CGC do cliente
Local cNumCNPJ  := Space(TamSX3("A1_CGC")[1]) 			//varivel para armazenar o retorno da funcao CGC

DEFAULT cCgc := ""

If !Empty(cCgc)         
	If Len( AllTrim( cCgc ) ) >= 11 .AND. Len( AllTrim( cCgc ) ) <= 14
		//здддддддддддддддддддддддддддддддддддд©
		//ЁRetira caracteres que nao sao usadosЁ
		//юдддддддддддддддддддддддддддддддддддды
		cVerCgc := StrTran(cVerCgc,".","")
		cVerCgc := StrTran(cVerCgc,"-","")
		cVerCgc := StrTran(cVerCgc,"/","")
		cVerCgc := Alltrim(cVerCgc)
	
		//здддддддддддддддддддддддддддддддддд©
		//ЁValida se o CGC digitado eh validoЁ
		//юдддддддддддддддддддддддддддддддддды
		If CGC(cVerCgc, @cNumCNPJ)
			lRet := .T.
			cCgc := cVerCgc
		EndIf
	Else
		MsgStop( STR0052 ) 		// "CPF/CNPJ invАlido!"
		cCgc := Space(18)
	EndIf	
Else
	//зддддддддддддддддддддддддддддддддддддддд©
	//ЁSe estiver em branco, valida a insercaoЁ
	//юддддддддддддддддддддддддддддддддддддддды
	lRet := .T.
EndIf

Return lRet 


/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддбдддддддбддддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMaAcreFinAdtЁ Autor ЁTotvs                Ё Data Ё22.04.2010Ё╠╠
╠╠цддддддддддедддддддддадддддддаддддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁRetorna o valor do acrescimo financeiro do item, usado para Ё╠╠
╠╠Ё          Ёo processo de adiantamento.                                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpN1: Valor do acrescimo financeiro do item                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpA1: Array com os itens a serem gerados                   Ё╠╠
╠╠Ё          ЁExpN2: Item do documento                                    Ё╠╠
╠╠Ё          ЁExpL3: Reajuste                                             Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁObservacaoЁ                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function MaAcreFinAdt(aPvlNfs,nx,lReajuste,dDataMoe)

Local aVar := {}
Local nPrcVen	:= 0
Local nPrUnit	:= 0
Local nAcresFin := 0
Local lAcresDup := ( SuperGetMv("MV_ACRSDUP",.F.,.F.) == .T.)
Local aArea := GetArea()
Local aAreaSC9 := SC9->(GetArea())
Local aAreaSB1 := SB1->(GetArea())
Local aAreaSC5 := SC5->(GetArea())
Local aAreaSC6 := SC6->(GetArea())
Local aAreaSF4 := SF4->(GetArea())

Default dDataMoe := dDataBase

If Empty(dDataMoe)
	dDataMoe := dDatabase
Endif

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁPosiciona Registros                                                     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SC9")
dbSetOrder(1)
MsGoto(aPvlNfs[nx][8])

dbSelectArea("SB1")
dbSetOrder(1)
MsGoto(aPvlNfs[nx][12])

dbSelectArea("SC5")
dbSetOrder(1)
MsGoto(aPvlNfs[nx][9])

dbSelectArea("SC6")
dbSetOrder(1)
MsGoto(aPvlNfs[nx][10])

dbSelectArea("SF4")
dbSetOrder(1)
MsGoto(aPvlNfs[nx][14])
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁCalculo do Preco de Venda                                               Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
nPrcVen := SC9->C9_PRCVEN
nPrUnit := If(SC6->C6_PRUNIT<>0,SC6->C6_PRUNIT,SC9->C9_PRCVEN)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁCalcula o reajuste de preco.                                            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( !Empty(SC5->C5_REAJUST) .And. lReajuste )
	nPrcVen  := Formula(SC5->C5_REAJUST)
	nPrUnit := nPrcVen
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁConverte os valores para a Moeda Corrente(1)                            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If SC5->C5_MOEDA > 1 
 	If  ExistBlock("M460PRC")
		aVar     := ExecBlock("M460PRC",.F.,.F.,{nPrcVen,nPrUnit})
		nPrcVen  := aVar[1]
		nPrUnit  := aVar[2]
	Else                   
		nPrcVen  := xMoeda(nPrcVen,SC5->C5_MOEDA,1,dDataMoe,8)
		nPrUnit := xMoeda(nPrUnit,SC5->C5_MOEDA,1,dDataMoe,8)
	Endif	
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁCalculo do Acrescimo Financeiro                                         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( SC5->C5_ACRSFIN <> 0 ) 
	If lAcresDup
		nAcresFin := a410Arred(nPrcVen*SC5->C5_ACRSFIN/100,"D2_PRCVEN")
	Else
		If SF4->F4_DUPLIC=="S"	                                        
			nAcresFin := a410Arred(nPrcVen*SC5->C5_ACRSFIN/100,"D2_PRCVEN")		
		Endif
	Endif		
EndIf

If ( aEntry[EP_M461ACRE] )
	nAcresFin := Execblock("M461ACRE",.f.,.f.,{nPrcVen,nPrUnit,nAcresFin})  
Endif	

nAcresFin := nAcresFin * aPvlNfs[nx][4]

SC9->(RestArea(aAreaSC9))
SB1->(RestArea(aAreaSB1))
SC5->(RestArea(aAreaSC5))
SC6->(RestArea(aAreaSC6))
SF4->(RestArea(aAreaSF4))
RestArea(aArea)

Return(nAcresFin)


/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддбдддддддбддддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁA461NAdian  Ё Autor ЁTotvs                Ё Data Ё09.04.2010Ё╠╠
╠╠цддддддддддедддддддддадддддддаддддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁValida a regra em relacao ao Pedido de Vendas quando utili- Ё╠╠
╠╠Ё          Ёza condicao de pagamento com Adiantamento.                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpL1: Indica se adiantamento foi associado ao documento    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpC1: Numero do Pedido de venda                            Ё╠╠
╠╠Ё          ЁExpC2: Condicao de Pagamento deste documento de saida       Ё╠╠
╠╠Ё          ЁExpA3: Array com os itens a serem gerados                   Ё╠╠
╠╠Ё          ЁExpL4: Indica se pergunta para selecionar adiantamento jah  Ё╠╠
╠╠Ё          Ёfoi respondida                                              Ё╠╠
╠╠Ё          ЁExpL5: Indica se adiantamento jah foi associado ao documentoЁ╠╠
╠╠Ё          ЁExpC6: Codigo do cliente                                    Ё╠╠
╠╠Ё          ЁExpC7: Loja do cliente                                      Ё╠╠
╠╠Ё          ЁExpA8: Array usado na condicao de pagamento                 Ё╠╠
╠╠Ё          ЁExpN9: Valor do acrescimo financeiro                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁObservacaoЁ                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function A461NAdian(cNumPedido, cCondPagto, aPvlNfs, lRespVlrInf, lActVlrInf, cCliente, cLoja, aImpVarDup, nAcresTot)

Local lRet := .T. 
Local aArea := GetArea()
Local aAreaSC9 := SC9->(GetArea())
Local aAreaSC5 := SC5->(GetArea())
Local nValTot  := 0 // Total do pedido (Liberado)
Local nValAdt  := 0 // Valor total do Adiantamento 
Local aVenc	   := {} // Array de parcelas
Local aPedidos := {} 
Local nI 	   := 0
Local aAreaSE1 := SE1->(GetArea())

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁO processo de Recebimento Antecipado estarА disponivel Ё
//Ёapenas para TOP no Financeiro.                         Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддды
#IFDEF TOP 
	If A410UsaAdi( cCondPagto )                                      
		lRet := .F.
		DbSelectArea("SC9")
		DbSetOrder(1) // C9_FILIAL+C9_PEDIDO+C9_ITEM+C9_SEQUEN+C9_PRODUTO
		If DbSeek( xFilial("SC9")+cNumPedido )
			While	SC9->C9_FILIAL == xFilial("SC9") .AND.;
					SC9->C9_PEDIDO == cNumPedido
			    
				If aScan(aPvlNfs, {|x| x[8]==SC9->(RECNO())}) > 0
					nValTot += SC9->C9_QTDLIB * SC9->C9_PRCVEN
				EndIf
				SC9->(DbSkip())		
			End      
			SC5->(DbSetOrder(1)) // C5_FILIAL+C5_NUM
			If SC5->(DbSeek( xFilial("SC5")+cNumPedido ))
				nValTot += SC5->C5_FRETE+SC5->C5_SEGURO+SC5->C5_DESPESA
			EndIf
			aVenc := Condicao(nValTot,cCondPagto,0.00,dDataBase,0.00,aImpVarDup,,nAcresTot)	
			If Len(aVenc) > 0
				// aVenc[1,2] - Valor da primeira parcela
				// Carrega array de Adiantamentos relacionados ao pedido
				aPedidos := FPedAdtPed( "R", {cNumPedido}, .F. )
				For nI := 1 To Len(aPedidos)
					// checa se o saldo atual do adiantamento eh igual ou maior que o valor relacionado no pedido
					SE1->(dbGoto(aPedidos[nI][2]))
					If SE1->(Recno()) = aPedidos[nI][2]
						If SE1->E1_SALDO >= SaldoTit(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_TIPO,SE1->E1_NATUREZ,"R",SE1->E1_CLIENTE,1,dDataBase,,SE1->E1_LOJA,,0,1)
							nValAdt += aPedidos[nI][3]
						Endif
					Endif		
				Next nI
				
				If Empty(nValAdt) // eh necessario existir ao menos um adiantamento para o documento de saida a ser gerado                                  
					// Indica se o usuАrio ja respondeu ao questionamento nesta liberacao
					If !lRespVlrInf 
						lRespVlrInf := .T. 
						lActVlrInf	:= ApMsgYesNo(STR0057 + CRLF+ STR0058) // "Foram encontrado(s) pedido(s) usando condiГЦo de pagamento associado com 'Adiantamento', porИm sem nenhum Adiantamento associado." + CRLF+ "Deseja selecionar agora o(s) Adiantamento(s)?"
					EndIf         
					If lActVlrInf 
						//зддддддддддддддддддддддддддддддддддддддд©
						//ЁAbre a tela do financeiro para inclusaoЁ
						//Ёde Adiantamento                        Ё
						//юддддддддддддддддддддддддддддддддддддддды
						If A461NPedido(cNumPedido, cCliente, cLoja, nValAdt, aVenc[1,2], cCondPagto)
							//здддддддддддддддддддддддддддддддддддд©
							//ЁChamada recursiva para saber se     Ё
							//Ёfoi atendida a regra do AdiantamentoЁ
							//юдддддддддддддддддддддддддддддддддддды
							lRet := A461NAdian(cNumPedido, cCondPagto, aPvlNfs, lRespVlrInf, lActVlrInf, cCliente, cLoja, aImpVarDup, nAcresTot)
						EndIf						
					EndIf
				Else
					lRet := .T.
				EndIf			
			EndIf
		EndIf
	EndIf
#ENDIF

RestArea(aAreaSC9) 
RestArea(aAreaSC5)
RestArea(aAreaSE1)
RestArea(aArea)

Return lRet       


/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддбдддддддбддддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁA461NCompAd Ё Autor ЁTotvs                Ё Data Ё09.04.2010Ё╠╠
╠╠цддддддддддедддддддддадддддддаддддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁRealiza a compensacao do Titulo a Receber quando trata-se   Ё╠╠
╠╠Ё          Ёda parcela a Vista e o pedido utilizou Adiantamento.        ╨╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁNenhum                                                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpA1: Array com os Pedidos de Venda                        Ё╠╠
╠╠Ё          ЁExpA2: Array com o Recno dos titulos gerados                Ё╠╠
╠╠Ё          ЁExpA3: Array com os adiantamentos relacionados ao pedido    Ё╠╠
╠╠Ё          ЁExpA4: Array com os itens a serem gerados                   Ё╠╠
╠╠Ё          ЁExpL5: Indica se eh compensacao do contas a receber         Ё╠╠
╠╠Ё          ЁExpC6: Numero do Documento de Saida                         Ё╠╠
╠╠Ё          ЁExpC7: Serie do Documento de Saida                          Ё╠╠
╠╠Ё          ЁExpA8: Array usado na condicao de pagamento                 Ё╠╠
╠╠Ё          ЁExpN9: Valor do acrescimo financeiro                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁObservacaoЁ                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function A461NCompAd(aAtuSC5, aRegSE1, aRecnoAdt, aPvlNfs, lCmp, cDoc, cSerie, aImpVarDup, aAcresTot, aTitulo )

Local aArea := GetArea()
Local aAreaSE1		:= SE1->(GetArea())
Local aAreaSC5		:= SC5->(GetArea())
Local aAreaSC9		:= SC9->(GetArea())
Local lContabiliza := .F.
Local lDigita 		:= .F.       
Local lAglutina 	:= .F.  
Local aCodPedidos	:= {} 	// Recebe o codigo dos Pedidos
Local aRecRet		:= {}	// Retorno da funcao que carrega os titulos de Adiantamento
Local nI				:= 0 	// Variavel utilizado em loop
Local nAux			:= 0 	// Variavel utilizado em loop
Local aRecNo		:= {}	// Recebe o Recno do Titulo de Adiantamento
Local aRecVlr		:= {}	// Recebe o valor limite para compensaГЦo do Titulo de Adiantamento
Local nVlrParc1	:= 0	// Valor da primeira parcela da Nota Fiscal        
Local aPedidos		:= {}	// Array para ajuste do saldo no relacionamento do Financeiro
Local nAcresTot 	:= 0
Local lRet 			:= .F.
Local nVlrTot		:= 0

Default aRecnoAdt := NIL
Default lCmp := .F.
Default cDoc := ""
Default cSerie := ""

//зддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVerifica se hА ao menos 1 parcela nesta vendaЁ
//юддддддддддддддддддддддддддддддддддддддддддддды
If Len(aRegSE1) >= 1

	//здддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁCarrega os titulos de Adiantamentos relacionados aosЁ
	//ЁPedidos da Nota.                                    Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддды
	If ValType(aRecnoAdt) == "U"
		For nI := 1 To Len(aAtuSC5)
			nAcresTot := aAcresTot[aScan(aAcresTot,{|x| x[1] = aAtuSC5[nI]})][2]				
			aPedidos := {}			
			nVlrParc1 := A461NP1Vlr(aAtuSC5[nI], aPvlNfs, aImpVarDup, nAcresTot )
			
			// RA's
			aRecRet := FPedAdtPed( "R", { aAtuSC5[nI] }, .F. )
			For nAux := 1 To Len(aRecRet)
				If !Empty(aRecRet[nAux, 3]) // soh trata registros com saldo diferente de 0
					// checa se o saldo atual do adiantamento eh igual ou maior que o valor relacionado no pedido
					SE1->(dbGoto(aRecRet[nAux][2]))
					If SE1->(Recno()) = aRecRet[nAux][2]
						If SE1->E1_SALDO >= SaldoTit(SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_TIPO,SE1->E1_NATUREZ,"R",SE1->E1_CLIENTE,1,dDataBase,,SE1->E1_LOJA,,0,1)
							If nVlrParc1 >= aRecRet[nAux, 3] 
								nVlrTot += aRecRet[nAux, 3]
								// checa se total de compensacoes nao ultrapassou o valor total do titulo
								If Valtype("aTitulo") != "U"
									If nVlrTot > aTitulo[_VLRTIT_]
										aRecRet[nAux, 3] := aRecRet[nAux, 3]-(nVlrTot-aTitulo[_VLRTIT_])
									Endif	
								Endif	
								aAdd(aRecVlr,  aRecRet[nAux, 3])
								aAdd(aRecNo, 	aRecRet[nAux, 2])
								nVlrParc1 -= aRecRet[nAux, 3]
								// Array para ajuste do saldo do relacionamento no Financeiro
								aAdd( aPedidos, {aRecRet[nAux, 1], aRecRet[nAux, 2], aRecVlr[Len(aRecVlr)]} )			
							ElseIf nVlrParc1 > 0
								nVlrTot += nVlrParc1
								// checa se total de compensacoes nao ultrapassou o valor total do titulo
								If Valtype("aTitulo") != "U"
									If nVlrTot > aTitulo[_VLRTIT_]
										nVlrParc1 := nVlrParc1-(nVlrTot-aTitulo[_VLRTIT_])
									Endif	
								Endif	
		              	 	aAdd(aRecVlr,	nVlrParc1)
								aAdd(aRecNo, 	aRecRet[nAux, 2])
		             		nVlrParc1 := 0						
								// Array para ajuste do saldo do relacionamento no Financeiro
								aAdd( aPedidos, {aRecRet[nAux, 1], aRecRet[nAux, 2], aRecVlr[Len(aRecVlr)]} )			
							Endif
						Endif	
					Endif	
				Endif	
			Next nAux			
			aAdd(aCodPedidos, {aAtuSC5[nI], aClone(aPedidos)} )
		Next nI 	
	Else
		aRecRet := aClone(aRecnoAdt)
		
		For nI := 1 To Len(aRecRet)
			aAdd(aRecNo, 	aRecRet[nI, 2])
			aAdd(aRecVlr,	aRecRet[nI, 3])
		Next nI		
	EndIf

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁCarrega o pergunte da rotina de compensaГЦo financeiraЁ
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
	Pergunte("FIN330",.F.)

	lContabiliza 	:= MV_PAR09 == 1
	lDigita			:= MV_PAR07 == 1 

	//зддддддддддддддддддддддддддддддддд©
	//ЁCompensa os valores no FinanceiroЁ
	//юддддддддддддддддддддддддддддддддды
	SE1->(MsGoTo(aRegSE1[1]))
	If SE1->(Recno()) = aRegSE1[1] .and. Len(aRecNo) > 0 .and. Len(aRecVlr)	> 0
		lRet := MaIntBxCR(3,{aRegSE1[1]},,aRecNo,,{lContabiliza,lAglutina,lDigita,.F.,.F.,.T.},,,,,SE1->E1_VALOR,,aRecVlr)    
	Endif	

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁRetorna o pergunte da MATA461                         Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
	Pergunte("MT460A",.F.)
	
	If lRet .and. Len(aCodPedidos) > 0
		SE1->(MsGoTo(aRegSE1[1]))
		If SE1->(Recno()) = aRegSE1[1]
			If SE1->E1_VALOR != SE1->E1_SALDO .and. !Empty(SE1->E1_BAIXA) // verifica se o titulo foi baixado
				For nI := 1 To Len(aCodPedidos)	
		             
					//зддддддддддддддддддддддддддддддддддддддддддддддд©
					//ЁAjuste do saldo do relacionamento no FinanceiroЁ
					//юддддддддддддддддддддддддддддддддддддддддддддддды			
				    FPedAdtGrv( "R", 4, aCodPedidos[nI, 1], aCodPedidos[nI, 2], lCmp, cDoc, cSerie )
				Next nI      
		
				// grava registro do titulo principal na tabela FR3
				SE1->(MsGoTo(aRegSE1[1]))			
				If SE1->(Recno()) = aRegSE1[1]
					FaGrvFR3("R",SE1->E1_PEDIDO,SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_TIPO,SE1->E1_CLIENTE,SE1->E1_LOJA,SE1->E1_VALOR,cDoc,cSerie)
				Endif	
			Endif	
		Endif
	Endif		
EndIf         

RestArea(aAreaSE1)
RestArea(aAreaSC5)
RestArea(aAreaSC9)
RestArea(aArea)

Return .T.        


/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддбдддддддбддддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁA461NPedido Ё Autor ЁTotvs                Ё Data Ё09.04.2010Ё╠╠
╠╠цддддддддддедддддддддадддддддаддддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁExibe tela para indicar ao usuario que Documento de Saida   Ё╠╠
╠╠Ё          Ёnao tem adiantamento relacionado.                           ╨╠╠
╠╠Ё          ЁPermite relacionar adiantamentos ao Documento.              ╨╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpL1: Indica se relacionou adiantamento ao Pedido          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpC1: Numero do Pedido de Venda                            Ё╠╠
╠╠Ё          ЁExpC2: Codigo de cliente                                    Ё╠╠
╠╠Ё          ЁExpC3: Loja do cliente                                      Ё╠╠
╠╠Ё          ЁExpN4: Valor do adiantamento relacionado ao Pedido          Ё╠╠
╠╠Ё          ЁExpN5: Valor da primeira parcela do titulo a receber        Ё╠╠
╠╠Ё          ЁExpC6: Condicao de Pagamento                                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁObservacaoЁ                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function A461NPedido(cNumPed, cCliente, cLoja, nValAdt, nValParc1, cCondPagto)

Local aArea	:= GetArea() 
Local cGetNumero	:= cNumPed
Local cGetCliente	:= cCliente
Local cGetLoja	 	:= cLoja 
Local cGetNome		:= Posicione("SA1", 1, xFilial("SA1")+cCliente+cLoja, "A1_NOME")
Local cGetVlrP1	:= Round(nValParc1, 2)
Local cGetVlrAd	:= Round(nValAdt, 2)
Local cGetVlrSld	:= Round(nValParc1 - nValAdt, 2)
Local oGetNumero
Local oGetCliente
Local oGetLoja
Local oGetNome
Local oGetVlrP1
Local oGetVlrAd
Local oGetVlrSld
Local lRet := .T.
Local aRecnoSE1 	:= FPedAdtPed( "R", {cNumPed}, .F. )
Local oDlg				// Dialog Principal

DEFINE MSDIALOG oDlg TITLE STR0059 FROM A461PosTla(178),A461PosTla(181) TO A461PosTla(321),A461PosTla(597) PIXEL // "Valor do Adiantamento nЦo informado"

	// Cria as Groups do Sistema
	@ A461PosTla(003),A461PosTla(002) TO A461PosTla(060),A461PosTla(155) LABEL STR0060 PIXEL OF oDlg // "InformaГУes do Pedido"

	// Cria Componentes Padroes do Sistema
	@ A461PosTla(015),A461PosTla(009) Say STR0062 Size A461PosTla(018),A461PosTla(008) COLOR CLR_BLACK PIXEL OF oDlg // "NЗmero"
	@ A461PosTla(015),A461PosTla(050) MsGet oGetNumero Var cGetNumero Size A461PosTla(060),A461PosTla(009) COLOR CLR_BLACK Picture "@!" PIXEL OF oDlg When .F.
	
	@ A461PosTla(030),A461PosTla(009) Say STR0063 Size A461PosTla(018),A461PosTla(008) COLOR CLR_BLACK PIXEL OF oDlg // "Cliente"
	@ A461PosTla(030),A461PosTla(050) MsGet oGetCliente Var cGetCliente Size A461PosTla(060),A461PosTla(009) COLOR CLR_BLACK Picture "@!" PIXEL OF oDlg When .F.
	@ A461PosTla(030),A461PosTla(120) MsGet oGetLoja Var cGetLoja Size A461PosTla(027),A461PosTla(009) COLOR CLR_BLACK Picture "@!" PIXEL OF oDlg When .F.
	
	@ A461PosTla(045),A461PosTla(009) Say STR0064 Size A461PosTla(018),A461PosTla(008) COLOR CLR_BLACK PIXEL OF oDlg // "Nome"
	@ A461PosTla(045),A461PosTla(050) MsGet oGetNome Var cGetNome Size A461PosTla(097),A461PosTla(009) COLOR CLR_BLACK Picture "@!" PIXEL OF oDlg When .F.
	
	// Botoes disponiveis na tela
	@ A461PosTla(007),A461PosTla(167) Button STR0065 Size A461PosTla(037),A461PosTla(012) PIXEL OF oDlg ACTION (lRet:= .F.,oDlg:End()) // "Ignora Pedido"
	@ A461PosTla(025),A461PosTla(167) Button STR0066 Size A461PosTla(037),A461PosTla(012) PIXEL OF oDlg ACTION (A410Adiant(cNumPed, cCondPagto, nValParc1, aRecnoSE1, .F., cCliente, cLoja, .T.),oDlg:End())	 // "Adiantamentos"

	@ A461PosTla(062),A461PosTla(005) Say STR0067 Size A461PosTla(158),A461PosTla(008) COLOR CLR_BLACK PIXEL OF oDlg	 // "Para alterar o valor do Adiantamento, clique em Adiantamentos."
ACTIVATE MSDIALOG oDlg CENTERED 

RestArea(aArea)

Return(lRet)


/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддбдддддддбддддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁA461PosTla  Ё Autor ЁTotvs                Ё Data Ё09.04.2010Ё╠╠
╠╠цддддддддддедддддддддадддддддаддддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁFuncao responsavel por manter o Layout independente da      Ё╠╠
╠╠Ё          Ёresolucao horizontal do Monitor do Usuario.                 ╨╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpN1: Numero da Coordenada                                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpN1: Numero da Coordenada                                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁObservacaoЁ                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function A461PosTla(nTam)

Local nHRes	:=	oMainWnd:nClientWidth	// Resolucao horizontal do monitor     
	If nHRes == 640	// Resolucao 640x480 (soh o Ocean e o Classic aceitam 640)  
		nTam *= 0.8                                                                
	ElseIf (nHRes == 798).Or.(nHRes == 800)	// Resolucao 800x600                
		nTam *= 1                                                                  
	Else	// Resolucao 1024x768 e acima                                           
		nTam *= 1.28                                                               
	EndIf                                                                         
                                                                                
	//зддддддддддддддддддддддддддд©                                               
	//ЁTratamento para tema "Flat"Ё                                               
	//юддддддддддддддддддддддддддды                                               
	If "MP8" $ oApp:cVersion                                                      
		If (Alltrim(GetTheme()) == "FLAT") .Or. SetMdiChild()                      
			nTam *= 0.90                                                            
		EndIf                                                                      
	EndIf                                                                         

Return Int(nTam)         


/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддбдддддддбддддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁA461NP1Vlr  Ё Autor ЁTotvs                Ё Data Ё09.04.2010Ё╠╠
╠╠цддддддддддедддддддддадддддддаддддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁRetorna o valor da primeira parcela do pedido.              Ё╠╠
╠╠Ё          ЁUtiliza Qtde liberada * Preco de venda do item para o cal-  Ё╠╠
╠╠Ё          Ёculo.                                                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpN1: Valor da parcela                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpC1: Numero do Pedido de Venda                            Ё╠╠
╠╠Ё          ЁExpA2: Array com os itens a serem gerados                   Ё╠╠
╠╠Ё          ЁExpA3: Array usado na condicao de pagamento                 Ё╠╠
╠╠Ё          ЁExpN4: Valor do acrescimo financeiro                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁObservacaoЁ                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function A461NP1Vlr(cNumPedido, aPvlNfs, aImpVarDup, nAcresTot )

Local aArea	:= GetArea() 
Local aAreaSC5 	:= SC5->(GetArea()) 
Local nValor	:= 0  
Local nValTot	:= 0 
Local cCondPagto:= ""
Local cQ := ""

cQ	:= "SELECT R_E_C_N_O_ AS SC9RECNO,C9_QTDLIB,C9_PRCVEN "
cQ += "FROM "+RetSqlName("SC9")+" "
cQ += "WHERE C9_FILIAL = '"+xFilial("SC9")+"' "
cQ += "AND C9_PEDIDO = '"+cNumPedido+"' "
cQ += "AND D_E_L_E_T_= ' ' "

cQ := ChangeQuery(cQ)

dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQ),"TRBSC9",.T.,.T.)  

TcSetField("TRBSC9","C9_QTDLIB","N",TamSX3("C9_QTDLIB")[1],TamSX3("C9_QTDLIB")[2])
TcSetField("TRBSC9","C9_PRCVEN","N",TamSX3("C9_PRCVEN")[1],TamSX3("C9_PRCVEN")[2])

While !Eof()
	If aScan(aPvlNfs, {|x| x[8]==TRBSC9->SC9RECNO}) > 0
		nValTot += TRBSC9->C9_QTDLIB * TRBSC9->C9_PRCVEN
	EndIf
	dbSkip()	
Enddo      
TRBSC9->(dbCloseArea())

SC5->(DbSetOrder(1)) // C5_FILIAL+C5_NUM
If SC5->(DbSeek( xFilial("SC5")+cNumPedido ))
	nValTot += SC5->C5_FRETE+SC5->C5_SEGURO+SC5->C5_DESPESA
	cCondPagto	:= SC5->C5_CONDPAG
	aVenc := Condicao(nValTot,cCondPagto,0.00,dDataBase,0.00,aImpVarDup,,nAcresTot)	
	If Len(aVenc) > 0
		nValor := aVenc[1,2]
	EndIf		
EndIf

RestArea(aAreaSC5)
RestArea(aArea)

Return(nValor)

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁA461ART65 ╨Autor  ЁJuliana Taveira     ╨ Data Ё  25/06/10   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     Ё Tratamento artigo 65 do RICMS ST / PR, onde a venda diaria ╨╠╠
╠╠╨          Ё de produtos que se enquadram no artigo, for superior a qtd ╨╠╠
╠╠╨          Ё definida no parametro MV_QART65, o ICMS serА recolhido     ╨╠╠
╠╠╨          Ё antecipadamente(geracao de guia de recolhimento)			  ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨ParametrosЁExpC1: Codigo do cliente			                          ╨╠╠
╠╠╨          ЁExpC2: Loja do cliente					                  ╨╠╠
╠╠╨          ЁExpD3: Data de Emissao					                  ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё AP                                                         ╨ ╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/ 
Function A461ART65(cCli,cLj,dDtEmis,cDoc,cSer,cNumero, aGnre, aRecTit, lConfTit, cUf)
Local cAliasSD2 := 	"TRBSD2"
Local cUnMed    := 	SuperGetMV("MV_UNAT65",,"")
Local cMvEstado :=	SuperGetMV("MV_ESTADO")
Local cLcPadTit := 	Substr(GetMv("MV_LPADICM"),1,3)					
Local nMvqart65 :=  SuperGetMV("MV_QART65",,0)
Local nQtd      := 	0
Local nIcm      := 	0
Local nMes      :=	0
Local nAno		:=	0
Local aDatas    := {}
Local aDSF2     := {}

Local dDtIni	:= ctod("//")
Local dDtFim    := ctod("//")
Local dDtvenc   := ctod("//")
Local lLancCont := .F.
Local lCalc     :=  Iif(nMvqart65 > 0 .and. !Empty(cUnMed) .and. SB1->(FieldPos("B1_RICM65")) > 0 .and. Alltrim(cMvEstado) == "PR",.T.,.F.)
Local lQuery 	:=  .F.                                         
Local lGRec     :=  .F.
Local lTit      := 	.F.
Local lArt65    :=	.F.

Default  cCli 	 := ""
Default  cLj 	 := ""
Default  cDoc    := ""
Default  cSer    := ""
Default  cUf     := ""
Default  dDtEmis := dDatabase

If lCalc
	 #IFDEF TOP
		If (TcSrvType ()<>"AS/400")
			lQuery := .T.
		EndIf
	#ENDIF
	If lQuery
		cAliasSD2	:=	GetNextAlias()
		BeginSql Alias cAliasSD2
			SELECT *
			FROM %Table:SD2% SD2
			JOIN %table:SB1% SB1 ON SB1.B1_FILIAL = %xFilial:SB1% AND SB1.B1_COD = SD2.D2_COD
			AND SB1.B1_RICM65 = "1" AND SB1.%NotDel%
			WHERE
			SD2.D2_FILIAL = %xFilial:SD2% AND
			SD2.D2_CLIENTE = %Exp:(cCli)% AND
			SD2.D2_LOJA = %Exp:(cLj)% AND
			SD2.D2_EMISSAO = %Exp:dTos(dDtEmis)% AND
			SD2.D2_TIPO = 'N' AND SD2.D2_VALICM > 0 AND
			SD2.%NotDel%
		EndSql
		
		DbSelectArea(cAliasSD2)
		(cAliasSD2)->(DbGoTop())
		While !(cAliasSD2)->(Eof())
			If Alltrim((cAliasSD2)->D2_UM) == Alltrim(cUnMed)
				nQtd := nQtd + (cAliasSD2)->D2_QUANT
				nIcm := nIcm + (cAliasSD2)->D2_VALICM
			ElseIf Alltrim((cAliasSD2)->D2_SEGUM) == Alltrim(cUnMed)
				nQtd := nQtd + (cAliasSD2)->D2_QTSEGUM
				nIcm := nIcm + (cAliasSD2)->D2_VALICM
			EndIf
			(cAliasSD2)->(DbSkip())
		EndDo
	Else
		DbSelectArea("SD2")
		SD2->(DbSetOrder(5))
		SD2->(DbSeek (xFilial("SD2") + Dtos(dDtEmis)))
		While !SD2->(Eof()) .and. SD2->D2_FILIAL == xFilial("SD2") .and. SD2->D2_EMISSAO == dDtEmis
			If SD2->D2_CLIENTE == cCli .and. SD2->D2_LOJA == cLj .and. SD2->D2_TIPO == "N" .and. SD2->D2_VALICM > 0
				DbSelectArea("SB1")
				SB1->(DbSetOrder(1))
				If SB1->(DbSeek(xFilial("SB1")+SD2->D2_COD))
					If SB1->B1_RICM65 == "1"
						If Alltrim(SD2->D2_UM) == Alltrim(cUnMed)
							nQtd := nQtd + SD2->D2_QUANT
							nIcm := nIcm + SD2->D2_VALICM
						ElseIf Alltrim(SD2->D2_SEGUM) == Alltrim(cUnMed)
							nQtd := nQtd + SD2->D2_QTSEGUM
							nIcm := nIcm + SD2->D2_VALICM
						EndIf
					EndIf
				EndIf
			EndIf
			SD2->(DbSkip())
		EndDo
	EndIf
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁVerifica se a quantidade e maior que a quantidade maxima paraЁ
	//Ёdispensa definido no parametro MV_QART65 e se o valor de ICMSЁ
	//Ёdo periodo e maior que zero									Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If nQtd > nMvqart65
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁVerifica se ja foi gerado guia de recolhimento para o destinatario Ё
		//Ёno dia, caso ja tenha sido abater o valor da guia gerada           Ё
		//Ёanteriormente.                                                     Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		DbSelectArea("SF6")
		SF6->(DbSetOrder(2))
		If SF6->(DbSeek(xFilial("SF6")+Alltrim(cMvEstado)+dtos(dDtEmis)))
			While !SF6->(Eof()) .and. SF6->F6_FILIAL == xFilial("SF6") .and. SF6->F6_DTARREC == dDtEmis
				If SF6->F6_CLIFOR == cCli .and. SF6->F6_LOJA == cLj .and. SF6->F6_TIPOIMP == "1" .and. SF6->F6_OPERNF == "2"
					nIcm := nIcm - SF6->F6_VALOR
				EndIf
				SF6->(DbSkip())
			EndDo
		EndIf
		//здддддддддддддддддддддддддд©
		//ЁGera guia de recolhimento Ё
		//юдддддддддддддддддддддддддды
		If nIcm >0
			nMes      := Month(dDtEmis)
			nAno      := Year(dDtEmis)
			aDatas    := DetDatas(nMes,nAno,3,1)
			dDtIni	  := aDatas[1]
			dDtFim	  := aDatas[2]
			dDtVenc	  := DataValida(aDatas[2]+1,.t.)
			lLancCont := (MV_PAR03==1)
			lGRec     := Iif(ValType(MV_PAR18)<>"N",.F.,(mv_par18==1))
			lTit      := Iif(ValType(MV_PAR17)<>"N",.F.,(mv_par17==1))
			lArt65 	  := .T.
							
			aadd(aDSF2,{cDoc,cSer,cCli,cLj,"N","2",Alltrim(cMvEstado)})
			If len(aDSF2)>0
				GravaTit(lTit,nIcm,"ICMS","IC",cLcPadTit,dDtIni,dDtFim,dDtVenc,1,lGRec,nMes,nAno,nIcm,0,"MATA460A",lLancCont,@cNumero,@aGNRE,,,cUf,,,,,@aRecTit,@lConfTit,0,aDSF2,lArt65)
			EndIf
		EndIf
	EndIf
EndIf  
If lQuery
	dbSelectArea(cAliasSD2)
	dbCloseArea()
EndIf
Return()

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  Ёa461LstPre╨Autor  ЁVendas Cliente      ╨ Data Ё  02/17/11   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     ЁCria a Nota Fiscal de Remessa e um novo registro na tabela  ╨╠╠
╠╠╨          Ёde conta corrente da lista de presentes					  ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё LOJA846													  ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/

Static Function a461LstPre(aPvlnfs)

/*======================================\
|	Elementos do Array aPvlnfs			|
|---------------------------------------|
|aPvlnfs[01] - Numero do Pedido de Venda|
|aPvlnfs[02] - Item do Pedido de Venda	|
|aPvlnfs[03] - Sequencia de Liberacao	|
|aPvlnfs[04] - Quantidade Liberada		|
|aPvlnfs[05] - Preco de Venda			|
|aPvlnfs[06] - Codigo do Produto		|
|aPvlnfs[07] - TES com ISS				|
|aPvlnfs[08] - Recno do SC9				|
|aPvlnfs[09] - Recno do SC5				|
|aPvlnfs[10] - Recno do SC6				|
|aPvlnfs[11] - Recno do SE4				|
|aPvlnfs[12] - Recno do SB1				|
|aPvlnfs[13] - Recno do SB2				|
|aPvlnfs[14] - Recno do SF4				|
|aPvlnfs[15] - Deposito					|
|aPvlnfs[16] - Recno do DAK				|
|aPvlnfs[17] - Quantidade Liberada 2 UN	|
\======================================*/

Local aArea		:= GetArea()																		//Grava a area Atual
Local aAreaSF2	:= SF2->( GetArea() )																//Grava a area da tabela SF2
Local aAreaSD2	:= SD2->( GetArea() )																//Grava a area da tabela SD2
Local aAreaSA1	:= SA1->( GetArea() )																//Grava a area da tabela SA1
Local cChaveSF2	:= xFilial("SD2") + SF2->F2_DOC + SF2->F2_SERIE + SF2->F2_CLIENTE + SF2->F2_LOJA	//Chave de pesquisa para a tabela SD2
Local aCab		:= {}																				//Array de cabecalho do EXECAUTO
Local aItens	:= {}																				//Array dos itens do EXECAUTO
Local aItAux	:= {}																				//Array auxiliar para os itens do EXECAUTO
Local cLista	:= GetAdvFVal("SC6","C6_CODLPRE",xFilial("SC6") + aPvlnfs[1][1] + aPvlnfs[1][2] + aPvlnfs[1][6],1,"")	//Numero da Lista de Presente
Local lRet		:= .T.																				//Variavel de retorno da funcao
Local cTES		:= ""																				//TES usada no item da NF de Remessa
Local cTpOper	:= SuperGetMV("MV_LJLPTIR",,"")														//Tipo da Operacao para a NF de Remessa (TES Inteligente)
Local cTESPad	:= SuperGetMV("MV_LJLPTSR",,"")														//TES padrao para a NF de Remessa
Local cSerieNFR	:= SuperGetMV("MV_LJSENFR",,"")														//TES padrao para a NF de Remessa
Local cTpNrNfs	:= SuperGetMV("MV_TPNRNFS")															//Tipo do Numero da Nota Fiscal
Local cNumNFR	:= ""																				//Numero da Nota Fiscal de Saida
Local aRegCtaC	:= {}																				//Array para criar o registro de Debito na tabela de conta corrente

Private lMsErroAuto := .F.																			//Variavel usada para o retorno da EXECAUTO
Private l920Inclui	:= .T.																			//Variavel usada para tratamento do execauto

//Caso o parametro de Tipo de Operacao e TES estejam em branco, retorna como falso na funcao
If Empty(cTpOper) .And. Empty(cTESPad)
	lRet		:= .F.
ElseIf !Empty(cLista)	//Caso o codigo da lista de presentes esteja em branco, retorna para a funcionalidade normal
	//Verifico se a variavel esta em branco e nesse caso busco a serie padrao ja selecionada
	cSerieNFR	:= IIF(Empty(cSerieNFR),SF2->F2_SERIE,cSerieNFR)

	//Verifico como esta parametrizado o sistema para busca do numero da Nota Fiscal
//	If cTpNrNfs == "3"
		cNumNFR := MA461NumNf(NIL,cSerieNFR,NIL,NIL)
//	ElseIf !Sx5NumNota(@cSerieNFR,cTpNrNfs)
//	EndIf
	DbSelectArea("ME4")
	DbSetOrder(4)	//ME4_FILIAL+ME4_CODIGO+ME4_PEDIDO+ME4_ITPED+ME4_ITLST
	
	DbSelectArea("ME1")
	DbSetOrder(2)	//ME1_FILIAL+ME1_CODIGO+ME1_TIPO+ME1_CODCLI+ME1_LOJCLI
	If ME1->( DbSeek( xFilial("ME1") + cLista) )
		DbSelectArea("SA1")
		DbSetOrder(1)	//A1_FILIAL+A1_COD+A1_LOJA
		DbSeek( xFilial("SA1") + ME1->ME1_CODCLI + ME1->ME1_LOJCLI)
	
		aAdd(aCab,{"F2_TIPO"	,"N"							})
		aAdd(aCab,{"F2_FORMUL"	,"S"							})
		aAdd(aCab,{"F2_DOC"		,cNumNFR						})
		aAdd(aCab,{"F2_SERIE"	,cSerieNFR						})
		aAdd(aCab,{"F2_EMISSAO"	,dDataBase						})
		aAdd(aCab,{"F2_CLIENTE"	,ME1->ME1_CODCLI				})
		aAdd(aCab,{"F2_LOJA"	,ME1->ME1_LOJCLI				})
		aAdd(aCab,{"F2_TIPOCLI"	,SA1->A1_TIPO					})
		aAdd(aCab,{"F2_ESPECIE"	,SF2->F2_ESPECIE				})
		aAdd(aCab,{"F2_DESCONT"	,SF2->F2_DESCONT				})
		aAdd(aCab,{"F2_VALBRUT"	,SF2->F2_VALBRUT				})
		aAdd(aCab,{"F2_VALFAT"	,SF2->F2_VALFAT					})
		aAdd(aCab,{"F2_FRETE"	,SF2->F2_FRETE					})
		aAdd(aCab,{"F2_SEGURO"	,SF2->F2_SEGURO					})
		aAdd(aCab,{"F2_DESPESA"	,SF2->F2_DESPESA				})
		aAdd(aCab,{"F2_PREFIXO"	,Space(TamSX3("F2_PREFIXO")[1])	})
		aAdd(aCab,{"F2_HORA"	,SubStr(Time(),1,5)				})
		aAdd(aCab,{"F2_CLIENT"	,SF2->F2_CLIENT					})
		aAdd(aCab,{"F2_LOJENT"	,SF2->F2_LOJENT					})
		
		DbSelectArea("SD2")
		DbSetOrder(3)	//D2_FILIAL+D2_DOC+D2_SERIE+D2_CLIENTE+D2_LOJA+D2_COD+D2_ITEM
		While !SD2->( Eof() ) .And. cChaveSF2 == SD2->D2_FILIAL + SD2->D2_DOC + SD2->D2_SERIE + SD2->D2_CLIENTE + SD2->D2_LOJA
			aItAux := {} 
			If !Empty(cTpOper)
				cTES := MaTESInt(2,cTpOper,ME1->ME1_CODCLI,ME1->ME1_LOJCLI,"C",SD2->D2_COD)
			Else
				cTES := cTESPad
			EndIf
			
			aAdd(aItAux,{"D2_ITEM"		,SD2->D2_ITEM	,Nil})
			aAdd(aItAux,{"D2_COD"		,SD2->D2_COD	,Nil})
			aAdd(aItAux,{"D2_QUANT"		,SD2->D2_QUANT	,Nil})
			aAdd(aItAux,{"D2_PRCVEN"	,SD2->D2_PRCVEN	,Nil})
			aAdd(aItAux,{"D2_TOTAL"		,SD2->D2_TOTAL	,Nil})
			aAdd(aItAux,{"D2_TES"		,cTES			,Nil})
			aAdd(aItAux,{"D2_CODLPRE"	,SD2->D2_CODLPRE,Nil})
			aAdd(aItAux,{"D2_ITLPRE"	,SD2->D2_ITLPRE	,Nil})
			aAdd(aItAux,{"D2_PEDIDO"	,SD2->D2_PEDIDO	,Nil})
			aAdd(aItAux,{"D2_ITEMPV"	,SD2->D2_ITEMPV	,Nil})
			aAdd(aItens,aItAux)
			
			//Posiciona na tabela de conta corrente para atualizar o status do credito
			If ME4->( DbSeek( xFilial("ME4") + SD2->D2_CODLPRE + SD2->D2_PEDIDO + SD2->D2_ITEMPV + SD2->D2_ITLPRE ) )
				RecLock("ME4",.F.)
				ME4->ME4_TIPREG	:= "4"
				ME4->( MsUnLock() )
			
				//Alimenta o array com os itens que serao gravados na tabela de Conta Corrente da Lista de Presentes
				aRegCtaC	:= {}
				aAdd(aRegCtaC,SD2->D2_CODLPRE)		//01 - Codigo da Lista
				aAdd(aRegCtaC,SD2->D2_ITLPRE)		//02 - Item da Lista
				aAdd(aRegCtaC,SD2->D2_COD)			//03 - Codigo do Produto
				aAdd(aRegCtaC,SD2->D2_QUANT)		//04 - Quantidade
				aAdd(aRegCtaC,SD2->D2_TOTAL)		//05 - Valor
				aAdd(aRegCtaC,cEmpAnt)				//06 - Empresa Original
				aAdd(aRegCtaC,cFilAnt)				//07 - Filial Original
				aAdd(aRegCtaC,Nil)					//08 - Numero do Orcamento
				aAdd(aRegCtaC,Nil)					//09 - Item do Orcamento
				aAdd(aRegCtaC,SD2->D2_PEDIDO)		//10 - Numero do Pedido de Venda
				aAdd(aRegCtaC,SD2->D2_ITEMPV)		//11 - Item do Pedido de Venda
				aAdd(aRegCtaC,cNumNFR)				//12 - Numero do Documento
				aAdd(aRegCtaC,cSerieNFR)			//13 - Serie do Documento
				aAdd(aRegCtaC,dDataBase)			//14 - Emissao do documento/titulo
				aAdd(aRegCtaC,NIL)					//15 - Prefixo do Titulo
				aAdd(aRegCtaC,NIL)					//16 - Numero do Titulo
				aAdd(aRegCtaC,NIL)					//17 - Parcela do Titulo
				aAdd(aRegCtaC,NIL)					//18 - Tipo do Titulo
				aAdd(aRegCtaC,SD2->D2_CLIENTE)		//19 - Codigo do Cliente
				aAdd(aRegCtaC,SD2->D2_LOJA)			//20 - Loja do Cliente
				
				//Chama a rotina para gerar o Debito da conta corrente
				If !Lj8GeraCC(aRegCtaC,3)
					lRet := .F.
					RollBackSX8()
					Exit
				EndIf
			EndIf
			SD2->( dbSkip() )
		End

		If lRet
			MSExecAuto({|x,y,z| Mata920(x,y,z)},aCab,aItens,3) //Inclusao  
	
			If lMsErroAuto
				MostraErro()
				lRet := .F.
			EndIf
		EndIf
	Else
		lRet := .F.
	EndIf
EndIf

RestArea(aArea)
RestArea(aAreaSF2)
RestArea(aAreaSD2)
RestArea(aAreaSA1)

Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} A460VNCNF
Vincula Notas Fiscais de Presente com Nota Fiscal comum.
@sample   A460VNCNF(aPedido) 
@param    aPedido    - matriz com os pedidos a serem vinculados 
@return   lRet (Boolean) - sempre verdadeiro.

@author   Eduardo Vicente
@since    27.02.2013
@version  P11.5
/*/
//-------------------------------------------------------------------

Static Function A460VNCNF(aPedido)

Local aArea	      := GetArea()	            //Grava a area Atual
Local aAreaSC5    := SC5->( GetArea() )	
Local aAreaSF2    := SF2->( GetArea() )	

Local nA            := 0
Local nLenAPedido   := Len(aPedido)
Local cOrcamto      := ""                    //Obtem o numero do Orcamento original para posicionar na MF5 e gravar o Status de Despachado.
Local cNFIndice	    := ""                    //Indice para posiciona a Nota Fiscal original
Local cNFVinculada  := ""                    //Indice para vincular a Nota Fiscal original
Local cNFPai	    := ""                    //Numero Nota de Vinculo da Nota Fiscal de Presente com a Nota Fiscal Original
Local cSerPai	    := ""                    //Serie Nota de Vinculo
Local lIntegraEC    := .F.					 //Indica se a estrutura estА atualizada para versЦo integraГЦo e-commerce 	
Default aPedido   := {}

DbSelectArea("SF2")
DbSetOrder(1) //F2_FILIAL+F2_DOC+F2_SERIE+F2_CLIENTE+F2_LOJA+F2_FORMUL+F2_TIPO

DbSelectArea("SC5")
DbSetOrder(1) //C5_FILIAL+C5_PEDIDO

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁIrА verificar se o pedido faturado И e-Commerce para configurar status     Ё
//Ё17-Despachado.                                                             Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

lIntegraEC := SC5->(FieldPos("C5_ECPRESN") > 0) .And. SC5->(FieldPos("C5_ECVINCU") > 0) .And. SF2->( (FieldPos("F2_ECVINC1") > 0) .And. (FieldPos("F2_ECVINC2") > 0) )
For nA := 1 to nLenAPedido

	If  !( SC5->(DbSeek(xFilial("SC5")+aPedido[nA][01])) )
	    Loop
	EndIf    
	
	cNFIndice := xFilial("SF2")+SC5->C5_NOTA+SC5->C5_SERIE+SC5->C5_CLIENTE+SC5->C5_LOJACLI  //Indice da NF Original

	If  !( Empty(SC5->C5_ORCRES) ) .And. ChkFile("MF5")

	    cOrcamto := Posicione("SL1",1,xFilial("SL1")+SC5->C5_ORCRES,"L1_ORCRES")
	    
	    If  !( Empty(cOrcamto) ) .And. !( Empty(Posicione("MF5",1,xFilial("MF5")+"SL1"+xFilial("SL1")+cOrcamto,"MF5_ECPEDI")) )
	    	If  MF5->( SoftLock("MF5") )
	    		MF5->MF5_ECSTAT := "17"  //Grava o Status de Despachado para enviar posteriormente ao e-Commerce.
	    		MF5->MF5_ECDTEX := " "   //Limpa a data para exportacao.
	    	    MF5->( MsUnLock() )
	    	EndIf
	    EndIf
	EndIf

	If  lIntegraEC 
		If  !( Empty(SC5->C5_ECVINCU) )
			If  SC5->( dbSeek(SC5->C5_FILIAL+Alltrim(SC5->C5_ECVINCU)) )

				cNFVinculada := xFilial("SF2")+SC5->C5_NOTA+SC5->C5_SERIE+SC5->C5_CLIENTE+SC5->C5_LOJACLI
				
				If  SF2->( DbSeek(cNFIndice) )   //Posiciona a NF Origenal e Grava os dados da NF Vinculada (NF Presente)
					RecLock("SF2",.F.)
					SF2->F2_ECVINC1	:= SC5->C5_NOTA
					SF2->F2_ECVINC2	:= SC5->C5_SERIE
					SF2->(MsUnlock())
	
					cNFPai	  := SF2->F2_DOC
					cSerPai	  := SF2->F2_SERIE
			
					If  SF2->( DbSeek(cNFVinculada) )  //Posiciona na NF Vinculada e grava os dados da NF Original.
						RecLock("SF2",.F.)
						SF2->F2_ECVINC1	:= cNFPai
						SF2->F2_ECVINC2	:= cSerPai
						SF2->(MsUnlock())
					EndIf
				EndIf	
			EndIf
		EndIf
	EndIf

Next nA	

RestArea(aAreaSF2)
RestArea(aAreaSC5)
RestArea(aArea)

Return .T.


/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMaRatDesp Ё Autor ЁAlexandre Inacio Lemes Ё Data Ё13/09/2011Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁFuncao destinada a atender o parametro MV_VALDESP que se    Ё╠╠
╠╠Ё          Ёigual a .T. deve utilizar o rateio de despesas acessorias   Ё╠╠
╠╠Ё          ЁFRETE/SEGURO/DESPESA realizado pela MATXFIS sobrepondo o ra Ё╠╠
╠╠Ё          Ёteio realizado pelo MATA461 atraves da alteracao do array   Ё╠╠
╠╠Ё          ЁaRateio.Esta funcao altera o array aRateio nestas despesas  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ aPvlNfs : Array com os pedidos de vendas liberados para NFSЁ╠╠
╠╠Ё          Ё aRateio : Array contendo o Rateio de Despesas do MATA461   Ё╠╠
╠╠Ё          Ё lReajuste: Variavel logica indicando Reajuste              Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ/*/

Static Function MaRatDesp(aPvlNfs,aRateio,lReajuste,dDataMoe)

Local aArea		:= GetArea()																		
Local aPvlSD2	:= {}
Local nItem     := 0

Default dDataMoe := dDataBase

If Empty(dDataMoe)
	dDataMoe := dDatabase
Endif

For nItem := 1 to Len(aPvlNfs)

	aPvlSD2	:= aPvlNfs[nItem]
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁPosiciona Registros                                                     Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dbSelectArea("SC9")
	dbSetOrder(1)
	MsGoto(aPvlSd2[8])
	
	dbSelectArea("SC5")
	dbSetOrder(1)
	MsGoto(aPvlSD2[9])
	
	dbSelectArea("SC6")
	dbSetOrder(1)
	MsGoto(aPvlSD2[10])
	
	dbSelectArea("SE4")
	dbSetOrder(1)
	MsGoto(aPvlSd2[11])
	
	dbSelectArea("SB1")
	dbSetOrder(1)
	MsGoto(aPvlSd2[12])
	
	dbSelectArea("SB2")
	dbSetOrder(1)
	MsGoto(aPvlSd2[13])
	
	dbSelectArea("SF4")
	dbSetOrder(1)
	MsGoto(aPvlSd2[14])
	
	dbSelectArea("DAK")
	dbSetOrder(1)
	MsGoto(aPvlSd2[16])

	If nItem == 1
		MaFisIni(SC5->C5_CLIENTE,SC5->C5_LOJACLI,If(SC5->C5_TIPO$'DB',"F","C"),SC5->C5_TIPO,SC5->C5_TIPOCLI,aRelImp,,,,'MATA461',,,,,,,,,,,SC6->C6_NUM,,,,,SC5->C5_TPFRETE)
    EndIf
	
	MaFisIniLoad(nItem,{SC6->C6_PRODUTO,;	//IT_PRODUTO
	SC6->C6_TES,; 		//IT_TES
	If(SF4->F4_ISS=="S", SC6->C6_CODISS , " " ) ,; 	//IT_CODISS
	aPvlNfs[nItem][4],;	 //IT_QUANT
	SC6->C6_NFORI,; 	 //IT_NFORI
	SC6->C6_SERIORI,; 	 //IT_SERIORI
	SB1->(RecNo()),;	 //IT_RECNOSB1
	SF4->(RecNo()), 0 }) //IT_RECNOSF4
	
	nPosAIss := Ascan(aFisGet, {|x| x[1] == "IT_ALIQISS" })
	If nPosAIss > 0    
		dbSelectArea("SC6")
		nAliqIss := &(aFisGet[nPosAIss][2])
		If nAliqIss == 0
			nAliqIss :=	MaAliqISS(nItem)
		EndIf
	Else
		nAliqIss :=	MaAliqISS(nItem)
	Endif	
		
	aRateio[nItem][RT_PRECOIT]	:= MaPvPrcIt(aPvlNfs,nItem,lReajuste,aRateio[nItem],0,nAliqIss,dDataMoe)
	
	MaFisLoad("IT_VALMERC",aRateio[nItem][RT_PRECOIT][3]+aRateio[nItem][RT_PRECOIT][4],nItem)
	MaFisLoad("IT_PRCUNI",aRateio[nItem][RT_PRECOIT][1],nItem)
	MaFisLoad("IT_VLR_FRT",aRateio[nItem][RT_VLR_FRT],nItem)
	MaFisLoad("IT_AUTONOMO",aRateio[nItem][RT_FRETAUT],nItem)
	MaFisLoad("IT_DESCONTO",aRateio[nItem][RT_PRECOIT][4],nItem)
	MaFisLoad("IT_PESO",SB1->B1_PESO,nItem)
	
	MaFisRecal("",nItem)
	
	MaFisEndLoad(nItem,2)
	
Next nItem

MaFisAlt("NF_FRETE"  , SC5->C5_FRETE  )  
MaFisAlt("NF_SEGURO" , SC5->C5_SEGURO )  
MaFisAlt("NF_DESPESA", SC5->C5_DESPESA)  

For nItem := 1 to Len(aPvlNfs)
	aRateio[nItem][RT_FRETE]  := MaFisRet(nItem,"IT_FRETE")  
	aRateio[nItem][RT_SEGURO] := MaFisRet(nItem,"IT_SEGURO") 
	aRateio[nItem][RT_DESPESA]:= MaFisRet(nItem,"IT_DESPESA") 
Next nItem

MaFisEnd()

RestArea(aArea)

Return

//-------------------------------------
/*	Modelo de Dados
@author  	Jefferson Tomaz
@version 	P10 R1.4
@build		7.00.101202A
@since 		06/04/2011
@return 		oModel Objeto do Modelo*/
//-------------------------------------
Static Function ModelDef()                              
Local oModel
Local oStruSF2  := FWFormStruct(1,"SF2")
Local oStruSD2  := FWFormStruct(1,"SD2")
Local oStruRSA1 := NIL
Local oStruCSA1 := NIL
Local oStruDSA1 := NIL
Local oStruRSA4 := NIL
Local aSM0		:= FWArrFilAtu()
Local lIntGFE   := SuperGetMv('MV_INTGFE',,.F.)
Local aAux      := {}
Local aRet      := {}
Local nI        := 0
Local cFieldRel := ''
Local aRelatUsr := {}

SM0->(DbGoto(aSM0[SM0_RECNO]))			

If lIntGFE
	oStruSD2:aTriggers := {}
	
	oStruRSA1 := FWFormStruct(1,"SA1",{|cCampo| AllTrim(cCampo)+"|" $ "A1_COD|A1_LOJA|A1_NREDUZ|A1_CGC|A1_END|A1_BAIRRO|A1_MUN|A1_EST|A1_COD_MUN|A1_CEP|"})
	oStruCSA1 := FWFormStruct(1,"SA1",{|cCampo| AllTrim(cCampo)+"|" $ "A1_COD|A1_LOJA|A1_NREDUZ|A1_CGC|"})
	oStruRSA4 := FWFormStruct(1,"SA4",{|cCampo| AllTrim(cCampo)+"|" $ "A4_COD|A4_CGC|A4_EST|A4_COD_MUN|"})
	oStruDSA1 := FWFormStruct(1,"SA1",{|cCampo| AllTrim(cCampo)+"|" $ "A1_COD|A1_LOJA|A1_NREDUZ|A1_CGC|A1_END|A1_BAIRRO|A1_MUN|A1_EST|A1_COD_MUN|A1_CEP|A1_ENDENT|A1_BAIRROE|A1_CEPE|A1_MUNE|A1_ESTE|A1_CODMUNE"})
	oStruCSA2 := FWFormStruct(1,"SA2",{|cCampo| AllTrim(cCampo)+"|" $ "A2_COD|A2_LOJA|A2_NREDUZ|A2_CGC|"})
	oStruDSA2 := FWFormStruct(1,"SA2",{|cCampo| AllTrim(cCampo)+"|" $ "A2_COD|A2_LOJA|A2_NREDUZ|A2_CGC|A2_END|A2_BAIRRO|A2_MUN|A2_EST|A2_COD_MUN|A2_CEP|"})

// ------------- Campos Virtuais para Tabela SF2 ------------------

	oStruSF2:AddField( ;                      // Ord. Tipo Desc.
	"F2_CDTPDC"                      , ;      // [01]  C   Titulo do campo
	"Cod.Tp.Doc"                     , ;      // [02]  C   ToolTip do campo
	"F2_CDTPDC"                      , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	55                               , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'Posicione("SX5",1,xFilial("SX5")+"MQ"+AllTrim(SF2->F2_TIPO)+"S","X5_DESCRI")'), ; //[11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual

	aAux := FwStruTrigger(;
	"F2_TIPO", ;                                                      // [01] Id do campo de origem
	"F2_CDTPDC" , ;                                                   // [02] Id do campo de destino
	'Posicione("SX5",1,xFilial("SX5")+"MQ"+AllTrim(M->F2_TIPO)+"S","X5_DESCRI")')
    
    
	oStruSF2:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                       // [04] Bloco de codigo de execuГЦo do gatilho
	
	
	oStruSF2:AddField( ;                      // Ord. Tipo Desc.
	"F2_CDCLF"                       , ;      // [01]  C   Titulo do campo
	"Class.frete"                    , ;      // [02]  C   ToolTip do campo
	"F2_CDCLFR"                      , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	5                                , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	NIL                              , ;      // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	NIL                              )        // [14]  L   Indica se o campo И virtual
	
	oStruSF2:AddField( ;                      // Ord. Tipo Desc.
	"CGC Transp"                     , ;      // [01]  C   Titulo do campo
	"CGC Transp"                     , ;      // [02]  C   ToolTip do campo
	"F2_CGCTRP"                      , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	14                               , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'Posicione("SA4",1,xFilial("SA4")+SF2->F2_TRANSP,"A4_CGC")' ), ;      // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual

	aAux := FwStruTrigger(;
	"F2_TRANSP", ;                                                      // [01] Id do campo de origem
	"F2_CCGCTRP" , ;                                                   // [02] Id do campo de destino
	'Posicione("SA4",1,xFilial("SA4")+M->F2_TRANSP,"A4_CGC")')
    
	oStruSF2:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                       // [04] Bloco de codigo de execuГЦo do gatilho

	oStruSF2:AddField( ;                      // Ord. Tipo Desc.
	"CGC Redesp"                     , ;      // [01]  C   Titulo do campo
	"CGC Redesp"                     , ;      // [02]  C   ToolTip do campo
	"F2_CGCRDP"                      , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	14                               , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'Posicione("SA4",1,xFilial("SA4")+SF2->F2_REDESP,"A4_CGC")' ), ;      // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual

	aAux := FwStruTrigger(;
	"F2_REDESP", ;                                                      // [01] Id do campo de origem
	"F2_CCGCRDP" , ;                                                   // [02] Id do campo de destino
	'Posicione("SA4",1,xFilial("SA4")+M->F2_REDESP,"A4_CGC")')
    
	oStruSF2:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                       // [04] Bloco de codigo de execuГЦo do gatilho

// ------------- Campos Virtuais para Tabela SD2 ------------------
	oStruSD2:AddField( ;                      // Ord. Tipo Desc.
	"Desc.Prod."                     , ;      // [01]  C   Titulo do campo
	"Desc.Prod."                     , ;      // [02]  C   ToolTip do campo
	"D2_DESCRI"                      , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	TamSx3("B1_DESC")[1]             , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'SubStr(Posicione("SB1",1,xFilial("SB1")+SD2->D2_COD,"B1_DESC"),1,50)'), ;    // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual
	
	
	aAux := FwStruTrigger(;
	"D2_COD", ;                                                      // [01] Id do campo de origem
	"D2_DESCRI" , ;                                                   // [02] Id do campo de destino
	'SubStr(Posicione("SB1",1,xFilial("SB1")+FwFldGet("D2_COD"),"B1_DESC"),1,50)' )

	oStruSD2:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                       // [04] Bloco de codigo de execuГЦo do gatilho

	oStruSD2:AddField( ;                      // Ord. Tipo Desc.
	"Peso Bruto"                     , ;      // [01]  C   Titulo do campo
	"Peso Bruto"                     , ;      // [02]  C   ToolTip do campo
	"D2_PBRUTO"                      , ;      // [03]  C   Id do Field
	'N'                              , ;      // [04]  C   Tipo do campo
	11                               , ;      // [05]  N   Tamanho do campo
	4                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'If(FindFunction("OmRtPesoIt"),OmRtPesoIt(SD2->D2_COD,SD2->D2_QUANT),(Posicione("SB1",1,xFilial("SB1")+SD2->D2_COD,"B1_PESBRU")) * SD2->D2_QUANT )'), ;      // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual

 	aAux := FwStruTrigger(;
	"D2_QUANT", ;                                                      // [01] Id do campo de origem
	"D2_PBRUTO" , ;                                                   // [02] Id do campo de destino
	'If(FindFunction("OmRtPesoIt"),OmRtPesoIt(FwFldGet("D2_COD"),SD2->D2_QUANT),Posicione("SB1",1,xFilial("SB1")+FwFldGet("D2_COD"),"B1_PESBRU") * M->D2_QUANT)' )

	oStruSD2:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                       // [04] Bloco de codigo de execuГЦo do gatilho

	oStruSD2:AddField( ;                      // Ord. Tipo Desc.
	"M3"                             , ;      // [01]  C   Titulo do campo
	"M3"                             , ;      // [02]  C   ToolTip do campo
	"D2_METRO3"                      , ;      // [03]  C   Id do Field
	'N'                              , ;      // [04]  C   Tipo do campo
	11                               , ;      // [05]  N   Tamanho do campo
	4                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio                                                                                                 
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'(Posicione("SB5",1,xFilial("SB5")+ (SD2->D2_COD),"B5_ALTURA")* SB5->B5_LARG * SB5->B5_COMPR)* (SD2->D2_QUANT) '), ;    // [11]  B   Code-block de inicializacao do campo, ;*/
	NIL								 , ;		  // [12]  L   Indica se trata-se de um campo chave										  
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual
	
	aAux := FwStruTrigger(;
	"D2_QUANT"  , ;                                                   // [01] Id do campo de origem
	"D2_METRO3" , ;                                                   // [02] Id do campo de destino
	"(SB5->(B5_ALTURA * B5_LARG * B5_COMPR)) * M->D2_QUANT",;
	.T.,;
	"SB5",;
	1,;
	"xFilial('SB5')+FwFldGet('D2_COD')",;
	"SB5->(FOUND())" )
  
	oStruSD2:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4])                                                        // [04] Bloco de codigo de execuГЦo do gatilho	
		
// ------------- Campos Virtuais para Tabela SA1 ------------------
	oStruRSA1:AddField( ;                    // Ord. Tipo Desc.
	"IBGE Compl"                     , ;      // [01]  C   Titulo do campo
	"Cod.IBGE Compl "                , ;      // [02]  C   ToolTip do campo
	"A1_CDIBGE"                      , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	7                                , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'TMS120CdUf(SA1->A1_EST, "1") + SA1->A1_COD_MUN' ), ;   // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual


	aAux := FwStruTrigger(;
	"A1_COD_MUN", ;                                                      // [01] Id do campo de origem
	"A1_CDIBGE" , ;                                                      // [02] Id do campo de destino
	'TMS120CdUf(M->A1_EST, "1") + M->A1_COD_MUN' )                                                      

	oStruRSA1:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                       // [04] Bloco de codigo de execuГЦo do gatilho
	                     
	oStruRSA1:AddField( ;                    // Ord. Tipo Desc.
	"IBGEE Compl"                    , ;      // [01]  C   Titulo do campo
	"Cod.IBGEE Compl "               , ;      // [02]  C   ToolTip do campo
	"A1_CDIBGEE"                     , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	7                                , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'TMS120CdUf(SA1->A1_ESTE, "1") + SA1->A1_CODMUNE' ), ;   // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual


	aAux := FwStruTrigger(;
	"A1_CODMUNE", ;                                                      // [01] Id do campo de origem
	"A1_CDIBGEE", ;                                                      // [02] Id do campo de destino
	'TMS120CdUf(M->A1_ESTE, "1") + M->A1_CODMUNE' )                                                      

	oStruRSA1:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                       // [04] Bloco de codigo de execuГЦo do gatilho



	oStruDSA1:AddField( ;                    // Ord. Tipo Desc.
	"IBGE Compl"                     , ;      // [01]  C   Titulo do campo
	"Cod.IBGE Compl "                , ;      // [02]  C   ToolTip do campo
	"A1_CDIBGE"                      , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	7                                , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'TMS120CdUf(SA1->A1_EST, "1") + SA1->A1_COD_MUN' ), ;   // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual

	aAux := FwStruTrigger(;
	"A1_COD_MUN", ;                                                      // [01] Id do campo de origem
	"A1_CDIBGE" , ;                                                      // [02] Id do campo de destino
	'TMS120CdUf(M->A1_EST, "1") + M->A1_COD_MUN' )                                                      

	oStruDSA1:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                       // [04] Bloco de codigo de execuГЦo do gatilho

	oStruDSA1:AddField( ;                    // Ord. Tipo Desc.
	"IBGEE Compl"                    , ;      // [01]  C   Titulo do campo
	"Cod.IBGEE Compl "               , ;      // [02]  C   ToolTip do campo
	"A1_CDIBGEE"                     , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	7                                , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'TMS120CdUf(SA1->A1_ESTE, "1") + SA1->A1_CODMUNE' ), ;   // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual

	aAux := FwStruTrigger(;
	"A1_CODMUNE", ;                                                     // [01] Id do campo de origem
	"A1_CDIBGEE" , ;                                                     // [02] Id do campo de destino
	'TMS120CdUf(M->A1_ESTE, "1") + M->A1_CODMUNE' )                                                      

	oStruDSA1:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                       // [04] Bloco de codigo de execuГЦo do gatilho

// ------------- Campos Virtuais para Tabela SA2 ------------------
	                    
	oStruDSA2:AddField( ;                    // Ord. Tipo Desc.
	"IBGE Compl"                     , ;      // [01]  C   Titulo do campo
	"Cod.IBGE Compl "                , ;      // [02]  C   ToolTip do campo
	"A2_CDIBGE"                      , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	7                                , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'TMS120CdUf(SA2->A2_EST, "1") + SA2->A2_COD_MUN' ), ;   // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual

	aAux := FwStruTrigger(;
	"A2_COD_MUN", ;                                                      // [01] Id do campo de origem
	"A2_CDIBGE" , ;                                                      // [02] Id do campo de destino
	'TMS120CdUf(M->A2_EST, "1") + M->A2_COD_MUN' )                                                      

	oStruDSA1:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                                                
	
// ------------- Campos Virtuais para Tabela SA4 ------------------

	oStruRSA4:AddField( ;                    // Ord. Tipo Desc.
	"IBGE Compl"                     , ;      // [01]  C   Titulo do campo
	"Cod.IBGE Compl "                , ;      // [02]  C   ToolTip do campo
	"A4_CDIBGE"                      , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	7                                , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'TMS120CdUf(SA4->A4_EST, "1") + SA4->A4_COD_MUN' ), ;   // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual

	aAux := FwStruTrigger(;
	"A4_COD_MUN", ;                                                      // [01] Id do campo de origem
	"A4_CDIBGE" , ;                                                      // [02] Id do campo de destino
	'TMS120CdUf(M->A4_EST, "1") + M->A4_COD_MUN' )                                                      

	oStruRSA4:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                       // [04] Bloco de codigo de execuГЦo do gatilho
	
// ------------- Retira as validaГoes dos campos ------------------
	oStruSF2:SetProperty( '*', MODEL_FIELD_VALID, FWBuildFeature( STRUCT_FEATURE_VALID, '.T.' ) )   
	oStruSF2:SetProperty( '*', MODEL_FIELD_WHEN,  NIL ) 
	
	oStruSD2:SetProperty( '*', MODEL_FIELD_VALID, FWBuildFeature( STRUCT_FEATURE_VALID, '.T.' ) )   
	oStruSD2:SetProperty( '*', MODEL_FIELD_WHEN,  NIL ) 
	
	oStruRSA1:SetProperty( '*', MODEL_FIELD_VALID, FWBuildFeature( STRUCT_FEATURE_VALID, '.T.' ) )   
	oStruRSA1:SetProperty( '*', MODEL_FIELD_WHEN,  NIL )   

	oStruCSA1:SetProperty( '*', MODEL_FIELD_VALID, FWBuildFeature( STRUCT_FEATURE_VALID, '.T.' ) )   
	oStruCSA1:SetProperty( '*', MODEL_FIELD_WHEN,  NIL )   
		
	oStruDSA1:SetProperty( '*', MODEL_FIELD_VALID, FWBuildFeature( STRUCT_FEATURE_VALID, '.T.' ) )   
	oStruDSA1:SetProperty( '*', MODEL_FIELD_WHEN,  NIL )   
	
	oStruCSA2:SetProperty( '*', MODEL_FIELD_VALID, FWBuildFeature( STRUCT_FEATURE_VALID, '.T.' ) )   
	oStruCSA2:SetProperty( '*', MODEL_FIELD_WHEN,  NIL )   
		
	oStruDSA2:SetProperty( '*', MODEL_FIELD_VALID, FWBuildFeature( STRUCT_FEATURE_VALID, '.T.' ) )   
	oStruDSA2:SetProperty( '*', MODEL_FIELD_WHEN,  NIL )  
	
	oStruRSA4:SetProperty( '*', MODEL_FIELD_VALID, FWBuildFeature( STRUCT_FEATURE_VALID, '.T.' ) )   
	oStruRSA4:SetProperty( '*', MODEL_FIELD_WHEN,  NIL )   

Else

	oStruSD2:aTriggers := {}
	
	oStruRSA1 := FWFormStruct(1,"SA1",{|cCampo| AllTrim(cCampo)+"|" $ "A1_COD|A1_LOJA|A1_NREDUZ|A1_CGC|A1_END|A1_BAIRRO|A1_MUN|A1_EST|A1_COD_MUN|A1_CEP|"})
	oStruCSA1 := FWFormStruct(1,"SA1",{|cCampo| AllTrim(cCampo)+"|" $ "A1_COD|A1_LOJA|A1_NREDUZ|A1_CGC|"})
	oStruRSA4 := FWFormStruct(1,"SA4",{|cCampo| AllTrim(cCampo)+"|" $ "A4_COD|A4_CGC|A4_EST|A4_COD_MUN|"})
	oStruDSA1 := FWFormStruct(1,"SA1",{|cCampo| AllTrim(cCampo)+"|" $ "A1_COD|A1_LOJA|A1_NREDUZ|A1_CGC|A1_END|A1_BAIRRO|A1_MUN|A1_EST|A1_COD_MUN|A1_CEP|A1_ENDENT|A1_BAIRROE|A1_CEPE|A1_MUNE|A1_ESTE|A1_CODMUNE"})
	oStruCSA2 := FWFormStruct(1,"SA2",{|cCampo| AllTrim(cCampo)+"|" $ "A2_COD|A2_LOJA|A2_NREDUZ|A2_CGC|"})
	oStruDSA2 := FWFormStruct(1,"SA2",{|cCampo| AllTrim(cCampo)+"|" $ "A2_COD|A2_LOJA|A2_NREDUZ|A2_CGC|A2_END|A2_BAIRRO|A2_MUN|A2_EST|A2_COD_MUN|A2_CEP|"})

// ------------- Campos Virtuais para Tabela SF2 ------------------

	oStruSF2:AddField( ;                      // Ord. Tipo Desc.
	"F2_CDTPDC"                      , ;      // [01]  C   Titulo do campo
	"Cod.Tp.Doc"                     , ;      // [02]  C   ToolTip do campo
	"F2_CDTPDC"                      , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	55                               , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'Posicione("SX5",1,xFilial("SX5")+"MQ"+AllTrim(SF2->F2_TIPO)+"S","X5_DESCRI")'), ; //[11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual

	aAux := FwStruTrigger(;
	"F2_TIPO", ;                                                      // [01] Id do campo de origem
	"F2_CDTPDC" , ;                                                   // [02] Id do campo de destino
	'Posicione("SX5",1,xFilial("SX5")+"MQ"+AllTrim(M->F2_TIPO)+"S","X5_DESCRI")')
    
    
	oStruSF2:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                       // [04] Bloco de codigo de execuГЦo do gatilho
	
	
	oStruSF2:AddField( ;                      // Ord. Tipo Desc.
	"F2_CDCLF"                       , ;      // [01]  C   Titulo do campo
	"Class.frete"                    , ;      // [02]  C   ToolTip do campo
	"F2_CDCLFR"                      , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	5                                , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	NIL                              , ;      // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	NIL                              )        // [14]  L   Indica se o campo И virtual
	
	oStruSF2:AddField( ;                      // Ord. Tipo Desc.
	"CGC Transp"                     , ;      // [01]  C   Titulo do campo
	"CGC Transp"                     , ;      // [02]  C   ToolTip do campo
	"F2_CGCTRP"                      , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	14                               , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'Posicione("SA4",1,xFilial("SA4")+SF2->F2_TRANSP,"A4_CGC")' ), ;      // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual

	aAux := FwStruTrigger(;
	"F2_TRANSP", ;                                                      // [01] Id do campo de origem
	"F2_CCGCTRP" , ;                                                   // [02] Id do campo de destino
	'Posicione("SA4",1,xFilial("SA4")+M->F2_TRANSP,"A4_CGC")')
    
	oStruSF2:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                       // [04] Bloco de codigo de execuГЦo do gatilho

	oStruSF2:AddField( ;                      // Ord. Tipo Desc.
	"CGC Redesp"                     , ;      // [01]  C   Titulo do campo
	"CGC Redesp"                     , ;      // [02]  C   ToolTip do campo
	"F2_CGCRDP"                      , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	14                               , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'Posicione("SA4",1,xFilial("SA4")+SF2->F2_REDESP,"A4_CGC")' ), ;      // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual

	aAux := FwStruTrigger(;
	"F2_REDESP", ;                                                      // [01] Id do campo de origem
	"F2_CCGCRDP" , ;                                                   // [02] Id do campo de destino
	'Posicione("SA4",1,xFilial("SA4")+M->F2_REDESP,"A4_CGC")')
    
	oStruSF2:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                       // [04] Bloco de codigo de execuГЦo do gatilho

// ------------- Campos Virtuais para Tabela SD2 ------------------
	oStruSD2:AddField( ;                      // Ord. Tipo Desc.
	"Desc.Prod."                     , ;      // [01]  C   Titulo do campo
	"Desc.Prod."                     , ;      // [02]  C   ToolTip do campo
	"D2_DESCRI"                      , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	TamSx3("B1_DESC")[1]             , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'SubStr(Posicione("SB1",1,xFilial("SB1")+SD2->D2_COD,"B1_DESC"),1,50)'), ;    // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual
	
	
	aAux := FwStruTrigger(;
	"D2_COD", ;                                                      // [01] Id do campo de origem
	"D2_DESCRI" , ;                                                   // [02] Id do campo de destino
	'SubStr(Posicione("SB1",1,xFilial("SB1")+FwFldGet("D2_COD"),"B1_DESC"),1,50)' )

	oStruSD2:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                       // [04] Bloco de codigo de execuГЦo do gatilho

	oStruSD2:AddField( ;                      // Ord. Tipo Desc.
	"Peso Bruto"                     , ;      // [01]  C   Titulo do campo
	"Peso Bruto"                     , ;      // [02]  C   ToolTip do campo
	"D2_PBRUTO"                      , ;      // [03]  C   Id do Field
	'N'                              , ;      // [04]  C   Tipo do campo
	11                               , ;      // [05]  N   Tamanho do campo
	4                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'If(FindFunction("OmRtPesoIt"),OmRtPesoIt(SD2->D2_COD,SD2->D2_QUANT),(Posicione("SB1",1,xFilial("SB1")+SD2->D2_COD,"B1_PESBRU")) * SD2->D2_QUANT )'), ;      // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual

 	aAux := FwStruTrigger(;
	"D2_QUANT", ;                                                      // [01] Id do campo de origem
	"D2_PBRUTO" , ;                                                   // [02] Id do campo de destino
	'If(FindFunction("OmRtPesoIt"),OmRtPesoIt(FwFldGet("D2_COD"),SD2->D2_QUANT),Posicione("SB1",1,xFilial("SB1")+FwFldGet("D2_COD"),"B1_PESBRU") * M->D2_QUANT)' )

	oStruSD2:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                       // [04] Bloco de codigo de execuГЦo do gatilho

	oStruSD2:AddField( ;                      // Ord. Tipo Desc.
	"M3"                             , ;      // [01]  C   Titulo do campo
	"M3"                             , ;      // [02]  C   ToolTip do campo
	"D2_METRO3"                      , ;      // [03]  C   Id do Field
	'N'                              , ;      // [04]  C   Tipo do campo
	11                               , ;      // [05]  N   Tamanho do campo
	4                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio                                                                                                 
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'(Posicione("SB5",1,xFilial("SB5")+ (SD2->D2_COD),"B5_ALTURA")* SB5->B5_LARG * SB5->B5_COMPR)* (SD2->D2_QUANT) '), ;    // [11]  B   Code-block de inicializacao do campo, ;*/
	NIL								 , ;		  // [12]  L   Indica se trata-se de um campo chave										  
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual
	
	aAux := FwStruTrigger(;
	"D2_QUANT"  , ;                                                   // [01] Id do campo de origem
	"D2_METRO3" , ;                                                   // [02] Id do campo de destino
	"(SB5->(B5_ALTURA * B5_LARG * B5_COMPR)) * M->D2_QUANT",;
	.T.,;
	"SB5",;
	1,;
	"xFilial('SB5')+FwFldGet('D2_COD')",;
	"SB5->(FOUND())" )
  
	oStruSD2:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4])                                                        // [04] Bloco de codigo de execuГЦo do gatilho	
		
// ------------- Campos Virtuais para Tabela SA1 ------------------
	oStruRSA1:AddField( ;                    // Ord. Tipo Desc.
	"IBGE Compl"                     , ;      // [01]  C   Titulo do campo
	"Cod.IBGE Compl "                , ;      // [02]  C   ToolTip do campo
	"A1_CDIBGE"                      , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	7                                , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'TMS120CdUf(SA1->A1_EST, "1") + SA1->A1_COD_MUN' ), ;   // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual


	aAux := FwStruTrigger(;
	"A1_COD_MUN", ;                                                      // [01] Id do campo de origem
	"A1_CDIBGE" , ;                                                      // [02] Id do campo de destino
	'TMS120CdUf(M->A1_EST, "1") + M->A1_COD_MUN' )                                                      

	oStruRSA1:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                       // [04] Bloco de codigo de execuГЦo do gatilho
	                     
	oStruRSA1:AddField( ;                    // Ord. Tipo Desc.
	"IBGEE Compl"                    , ;      // [01]  C   Titulo do campo
	"Cod.IBGEE Compl "               , ;      // [02]  C   ToolTip do campo
	"A1_CDIBGEE"                     , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	7                                , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'TMS120CdUf(SA1->A1_ESTE, "1") + SA1->A1_CODMUNE' ), ;   // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual


	aAux := FwStruTrigger(;
	"A1_CODMUNE", ;                                                      // [01] Id do campo de origem
	"A1_CDIBGEE", ;                                                      // [02] Id do campo de destino
	'TMS120CdUf(M->A1_ESTE, "1") + M->A1_CODMUNE' )                                                      

	oStruRSA1:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                       // [04] Bloco de codigo de execuГЦo do gatilho



	oStruDSA1:AddField( ;                    // Ord. Tipo Desc.
	"IBGE Compl"                     , ;      // [01]  C   Titulo do campo
	"Cod.IBGE Compl "                , ;      // [02]  C   ToolTip do campo
	"A1_CDIBGE"                      , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	7                                , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'TMS120CdUf(SA1->A1_EST, "1") + SA1->A1_COD_MUN' ), ;   // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual

	aAux := FwStruTrigger(;
	"A1_COD_MUN", ;                                                      // [01] Id do campo de origem
	"A1_CDIBGE" , ;                                                      // [02] Id do campo de destino
	'TMS120CdUf(M->A1_EST, "1") + M->A1_COD_MUN' )                                                      

	oStruDSA1:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                       // [04] Bloco de codigo de execuГЦo do gatilho

	oStruDSA1:AddField( ;                    // Ord. Tipo Desc.
	"IBGEE Compl"                    , ;      // [01]  C   Titulo do campo
	"Cod.IBGEE Compl "               , ;      // [02]  C   ToolTip do campo
	"A1_CDIBGEE"                     , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	7                                , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'TMS120CdUf(SA1->A1_ESTE, "1") + SA1->A1_CODMUNE' ), ;   // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual

	aAux := FwStruTrigger(;
	"A1_CODMUNE", ;                                                     // [01] Id do campo de origem
	"A1_CDIBGEE" , ;                                                     // [02] Id do campo de destino
	'TMS120CdUf(M->A1_ESTE, "1") + M->A1_CODMUNE' )                                                      

	oStruDSA1:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                       // [04] Bloco de codigo de execuГЦo do gatilho

// ------------- Campos Virtuais para Tabela SA2 ------------------
	                    
	oStruDSA2:AddField( ;                    // Ord. Tipo Desc.
	"IBGE Compl"                     , ;      // [01]  C   Titulo do campo
	"Cod.IBGE Compl "                , ;      // [02]  C   ToolTip do campo
	"A2_CDIBGE"                      , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	7                                , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'TMS120CdUf(SA2->A2_EST, "1") + SA2->A2_COD_MUN' ), ;   // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual

	aAux := FwStruTrigger(;
	"A2_COD_MUN", ;                                                      // [01] Id do campo de origem
	"A2_CDIBGE" , ;                                                      // [02] Id do campo de destino
	'TMS120CdUf(M->A2_EST, "1") + M->A2_COD_MUN' )                                                      

	oStruDSA1:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                                                
	
// ------------- Campos Virtuais para Tabela SA4 ------------------

	oStruRSA4:AddField( ;                    // Ord. Tipo Desc.
	"IBGE Compl"                     , ;      // [01]  C   Titulo do campo
	"Cod.IBGE Compl "                , ;      // [02]  C   ToolTip do campo
	"A4_CDIBGE"                      , ;      // [03]  C   Id do Field
	'C'                              , ;      // [04]  C   Tipo do campo
	7                                , ;      // [05]  N   Tamanho do campo
	0                                , ;      // [06]  N   Decimal do campo
	NIL                              , ;      // [07]  B   Code-block de validaГЦo do campo
	NIL                              , ;      // [08]  B   Code-block de validaГЦo When do campo
	NIL                              , ;      // [09]  A   Lista de valores permitido do campo
	NIL                              , ;      // [10]  L   Indica se o campo tem preenchimento obrigatСrio
	FwBuildFeature( STRUCT_FEATURE_INIPAD,'TMS120CdUf(SA4->A4_EST, "1") + SA4->A4_COD_MUN' ), ;   // [11]  B   Code-block de inicializacao do campo
	NIL                              , ;      // [12]  L   Indica se trata-se de um campo chave
	NIL                              , ;      // [13]  L   Indica se o campo pode receber valor em uma operaГЦo de update.
	.T.                              )        // [14]  L   Indica se o campo И virtual

	aAux := FwStruTrigger(;
	"A4_COD_MUN", ;                                                      // [01] Id do campo de origem
	"A4_CDIBGE" , ;                                                      // [02] Id do campo de destino
	'TMS120CdUf(M->A4_EST, "1") + M->A4_COD_MUN' )                                                      

	oStruRSA4:AddTrigger( ;
	aAux[1], ;                                                      // [01] Id do campo de origem
	aAux[2], ;                                                      // [02] Id do campo de destino
	aAux[3], ;                                                      // [03] Bloco de codigo de validaГЦo da execuГЦo do gatilho
	aAux[4] )                                                       // [04] Bloco de codigo de execuГЦo do gatilho
	
// ------------- Retira as validaГoes dos campos ------------------
	oStruSF2:SetProperty( '*', MODEL_FIELD_VALID, FWBuildFeature( STRUCT_FEATURE_VALID, '.T.' ) )   
	oStruSF2:SetProperty( '*', MODEL_FIELD_WHEN,  NIL ) 
	oStruSF2:SetProperty( '*', MODEL_FIELD_OBRIGAT, .F.)

	oStruSD2:SetProperty( '*', MODEL_FIELD_VALID, FWBuildFeature( STRUCT_FEATURE_VALID, '.T.' ) )   
	oStruSD2:SetProperty( '*', MODEL_FIELD_WHEN,  NIL ) 
	oStruSD2:SetProperty( '*', MODEL_FIELD_OBRIGAT, .F.)
		
	oStruRSA1:SetProperty( '*', MODEL_FIELD_VALID, FWBuildFeature( STRUCT_FEATURE_VALID, '.T.' ) )   
	oStruRSA1:SetProperty( '*', MODEL_FIELD_WHEN,  NIL )   

	oStruCSA1:SetProperty( '*', MODEL_FIELD_VALID, FWBuildFeature( STRUCT_FEATURE_VALID, '.T.' ) )   
	oStruCSA1:SetProperty( '*', MODEL_FIELD_WHEN,  NIL )   
		
	oStruDSA1:SetProperty( '*', MODEL_FIELD_VALID, FWBuildFeature( STRUCT_FEATURE_VALID, '.T.' ) )   
	oStruDSA1:SetProperty( '*', MODEL_FIELD_WHEN,  NIL )   
	
	oStruCSA2:SetProperty( '*', MODEL_FIELD_VALID, FWBuildFeature( STRUCT_FEATURE_VALID, '.T.' ) )   
	oStruCSA2:SetProperty( '*', MODEL_FIELD_WHEN,  NIL )   
		
	oStruDSA2:SetProperty( '*', MODEL_FIELD_VALID, FWBuildFeature( STRUCT_FEATURE_VALID, '.T.' ) )   
	oStruDSA2:SetProperty( '*', MODEL_FIELD_WHEN,  NIL )  
	
	oStruRSA4:SetProperty( '*', MODEL_FIELD_VALID, FWBuildFeature( STRUCT_FEATURE_VALID, '.T.' ) )   
	oStruRSA4:SetProperty( '*', MODEL_FIELD_WHEN,  NIL )   
	
EndIf	

oModel:= MPFormModel():New("MATA461",  /*bPre*/, /*bPost*/, Nil /*bCommit*/, /*bCancel*/)

oModel:AddFields("MATA461_SF2", ,oStruSF2,/*bPre*/,/*bPost*/,/*bLoad*/) 
oModel:SetPrimaryKey({"F2_FILIAL", "F2_DOC", "F2_SERIE", "F2_CLIENTE", "F2_LOJA" })

oModel:AddGrid("MATA461_SD2","MATA461_SF2",oStruSD2,/*bLinePre*/, ,/*bPre*/,/*bPost*/,/*bLoad*/)
oModel:SetRelation("MATA461_SD2",{{"D2_FILIAL",'xFilial("SF2")'},{"D2_DOC","F2_DOC"},{"D2_SERIE","F2_SERIE"},;
                                  {"D2_CLIENTE","F2_CLIENTE"},{"D2_LOJA","F2_LOJA"}},"D2_FILIAL+D2_DOC+D2_SERIE+D2_CLIENTE+D2_LOJA")
oModel:GetModel("MATA461_SD2"):SetDelAllLine(.T.)

If lIntGFE
	oModel:AddFields("REMETENTE_SA1","MATA461_SF2",oStruRSA1,/*bPre*/,/*bPost*/,/*bLoad*/)
	oModel:SetRelation("REMETENTE_SA1",{{"A1_FILIAL",'xFilial("SA1")'},{"A1_CGC","SM0->M0_CGC"}},"A1_FILIAL+A1_CGC")

	oModel:AddFields("CLIENTE_SA1","MATA461_SF2",oStruCSA1,/*bPre*/,/*bPost*/,/*bLoad*/)                               
	oModel:SetRelation("CLIENTE_SA1",{{"A1_FILIAL",'xFilial("SA1")'},{"A1_COD","F2_CLIENTE"},{"A1_LOJA","F2_LOJA"}};
                                  ,"A1_FILIAL+A1_COD+A1_LOJA")                                  

	oModel:AddFields("DESTINATARIO_SA1","MATA461_SF2",oStruDSA1,/*bPre*/,/*bPost*/,/*bLoad*/)                               
	oModel:SetRelation("DESTINATARIO_SA1",{{"A1_FILIAL",'xFilial("SA1")'},{"A1_COD","F2_CLIENT"},{"A1_LOJA","F2_LOJENT"}};
                                  ,"A1_FILIAL+A1_COD+A1_LOJA") 
                                  
    oModel:AddFields("CLIENTE_SA2","MATA461_SF2",oStruCSA2,/*bPre*/,/*bPost*/,/*bLoad*/)                               
	oModel:SetRelation("CLIENTE_SA2",{{"A2_FILIAL",'xFilial("SA2")'},{"A2_COD","F2_CLIENTE"},{"A2_LOJA","F2_LOJA"}};
                                  ,"A2_FILIAL+A2_COD+A2_LOJA")                                  
	oModel:AddFields("DESTINATARIO_SA2","MATA461_SF2",oStruDSA2,/*bPre*/,/*bPost*/,/*bLoad*/)                               
	oModel:SetRelation("DESTINATARIO_SA2",{{"A2_FILIAL",'xFilial("SA2")'},{"A2_COD","F2_CLIENT"},{"A2_LOJA","F2_LOJENT"}};
                                  ,"A2_FILIAL+A2_COD+A2_LOJA") 
                                                                                                     
	oModel:AddFields("REDESPACHO_SA4","MATA461_SF2",oStruRSA4,/*bPre*/,/*bPost*/,/*bLoad*/)                               
	oModel:SetRelation("REDESPACHO_SA4",{{"A4_FILIAL",'xFilial("SA4")'},{"A4_COD","F2_REDESP"}},"A4_FILIAL+A4_COD")
EndIf                                  
                                
If ExistBlock('MA461Mdl')
	aRet := ExecBlock('MA461Mdl',.F.,.F.)
	If ValType(aRet) == 'A'
		aRelatUsr := AClone(aRet)
	EndIf
	If !Empty(aRelatUsr)
		For nI := 1 To Len(aRelatUsr)
			cFieldRel := 'FIELDREL_'+Alltrim(Str(nI+1))
			oModel:AddFields(cFieldRel,"MATA461_SF2",aRelatUsr[nI,1],/*bPre*/,/*bPost*/,/*bLoad*/)                               
			oModel:SetRelation(cFieldRel,AClone(aRelatUsr[nI,3]),aRelatUsr[nI,2])
		Next nI
	EndIf			
EndIf	
//oModel:SetDescription( OemToAnsi(STR0005))
oModel:SetDescription( 'NF SAIDA')

Return oModel

//-------------------------------------------------------------------
/*/{Protheus.doc} A461RetCFci

Retorna codigo FCI

@author SIGAFIS
/*/
//-------------------------------------------------------------------
Static Function A461RetCFci( cCodProd , nOpc , cFciCod )
Local	aRet	:=	Nil

//Retorno as validacoes de dicionarios para as funcionalidades da FCI
If nOpc == 1
	aRet := {	GetNewPar( "MV_FISFRAS" , .T. )		,;
				GetNewPar( "MV_FCIMOD" , "" )		,;
				AliasInDic("CFD")					,;
				SD2->(FieldPos("D2_FCICOD") ) > 0	,;
				SD2->(FieldPos("D2_VLIMPOR") ) > 0	,;
				SC6->(FieldPos("C6_VLIMPOR") ) > 0 ,;
				SD1->(FieldPos("D1_FCICOD") ) > 0	,;
				SC6->(FieldPos("C6_FCICOD") ) > 0	}

// **************************************************************************
// OPCAO TRANSFERIDA PARA O PEDIDO DE VENDA (PREENCHIMENTO DO CODIGO DA FCI)
// **************************************************************************
//Retornar codigo da FCI				
/*Elseif nOpc == 2
	aRet := { cFciCod }
	If CFD->( MsSeek( xFilial( "CFD" ) + cCodProd + Substr(DToS(dDataBase),5,2) + Substr(DToS(dDataBase),1,4) ) )
		aRet := { CFD->CFD_FCICOD }
	Else
		If CFD->( MsSeek( xFilial( "CFD" ) + cCodProd ) )
			While !CFD->(Eof()) .And. cCodProd == CFD->CFD_COD
				If Substr(DToS(dDataBase),5,2)+Substr(DToS(dDataBase),1,4) >= CFD->CFD_PERCAL
					aRet := { CFD->CFD_FCICOD }
				Endif
				CFD->(DbSkip())
			End
		Endif
	Endif*/
Endif

Return aRet

/*эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁMA461OrcLj╨Autor  ЁCesar A. Bianchi    ╨ Data Ё  01/12/10   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     ЁGera um item de orГamento do modulo SIGALOJA, alimentando as╨╠╠
╠╠╨          Ёtabelas SL1, SL2 e SL4, para futura emissao do DAV.         ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       ЁMATA460A                                                    ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ*/
Function MA461OrcLj()
Local lRet 	:= .F. 
Local aArea := getArea()
Local lOK	:= .T.

//здддддддддддддддддддддддддддддддддддддддд©
//ЁVerifica se o ambiente И do tipo PAF-ECFЁ
//юдддддддддддддддддддддддддддддддддддддддды
If lOk .and. !LjNfPafEcf(SM0->M0_CGC)
	Aviso(STR0071,STR0072,{'Ok'}) 	//Este nЦo И um ambiente PAF-ECF vАlido. ImpossМvel continuar.
	lOk := .F.
EndIf

//здддддддддддддддддддддддддддддддддддддддд©
//ЁVerifica se o pedido ja teve DAV emitidoЁ
//юдддддддддддддддддддддддддддддддддддддддды
If lOk .and. !Empty(SC9->C9_DAV)
	Aviso(STR0073,STR0074,{'Ok'}) 	//O DAV ja foi emitido para este pedido. Impossivel continuar
	lOk := .F.
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁSe todas as validacoes forem OK, entao executa a importacao do orcamentoЁ
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lOk
    MsgRun(STR0075,STR0076,{|| lRet := Ma461LjDav() })
EndIf

RestArea(aArea)
Return lRet

/*эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁMa461LjDav╨Autor  ЁCesar A. Bianchi    ╨ Data Ё  01/12/10   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     ЁGera um item de orГamento do modulo SIGALOJA, alimentando as╨╠╠
╠╠╨          Ёtabelas SL1, SL2 e SL4, para futura emissao do DAV.         ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       ЁMATA460A                                                    ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ*/ 
Function Ma461LjDav()
Local aArea		:= getArea()
Local lRet 		:= .F.
Local nSaveSx8 	:= GetSx8Len()
Local aSL1		:= {}
Local aSL2		:= {}
Local aSL4		:= {}
Local cL1Num	:= GetSxeNum("SL1","L1_NUM")
Local nVlrPed	:= 0
Local cItem		:= "00"
Local cNumPed	:= SC9->C9_PEDIDO
Local cNumDAV	:= a461NexOrc()
Local cMarca 	:= ThisMark()
Local lInverte  := ThisInv()

//здддддддддддддддддддддддддд©
//ЁPosiciona na SC5 do pedidoЁ
//юдддддддддддддддддддддддддды
dbSelectArea('SC5')
SC5->(dbSetOrder(1))
If SC5->(dbSeek(xFilial('SC5')+SC9->C9_PEDIDO)) .and. !Empty(cNumDAV) .And. IsMark("C9_OK",cMarca,lInverte)
	//зддддддддддддддддддддддддддддддддддд©
	//ЁMonta a SL1 - (Cabecalho Orcamento)Ё
	//юддддддддддддддддддддддддддддддддддды
	aAdd(aSL1,{"L1_FILIAL"	, xFilial("SL1") 				})
	aAdd(aSL1,{"L1_NUM"		, cL1Num						})
	aAdd(aSL1,{"L1_EMISSAO"	, SC5->C5_EMISSAO				})
	aAdd(aSL1,{"L1_DTLIM"	, dDataBase						})
	aAdd(aSL1,{"L1_DOC"		, SC5->C5_NOTA					})
	aAdd(aSL1,{"L1_SERIE"	, SC5->C5_SERIE					})
	aAdd(aSL1,{"L1_HORA"	, Time()						})
	aAdd(aSL1,{"L1_CLIENTE"	, SC5->C5_CLIENTE				})
	aAdd(aSL1,{"L1_LOJA"	, SC5->C5_LOJACLI				})
	aAdd(aSL1,{"L1_VEND"	, GetNewPar("MV_VENDPAD","")	})
	AAdd(aSL1,{"L1_FRETE"  , SC5->C5_FRETE 					})
	AAdd(aSL1,{"L1_DESPESA", SC5->C5_DESPESA 				})
	AAdd(aSL1,{"L1_SEGURO" , SC5->C5_SEGURO					})
	AAdd(aSL1,{"L1_JUROS"  , 0								})
	AAdd(aSL1,{"L1_CONDPG" , "CN"							})
	AAdd(aSL1,{"L1_TPORC"  , "D"							})
	AAdd(aSL1,{"L1_NUMORC" , cNumDAV						})
	AAdd(aSL1,{"L1_DESCONT", SC5->C5_DESC1 + SC5->C5_DESC2 + SC5->C5_DESC3 + SC5->C5_DESC4 })
	If SL1->(FieldPos("L1_NUMMOV")) > 0
		aAdd(aSL1,{"L1_NUMMOV",AllTrim(LjNumMov())})
	Endif
	If cPaisLoc <> "BRA"
		Aadd(aSL1,{"L1_MOEDA"  ,SC5->C5_MOEDA})	
		Aadd(aSL1,{"L1_TXMOEDA",SC5->C5_TXMOEDA})
	EndIf
	While (GetSX8Len() > nSaveSx8)
		ConfirmSX8()
	End 

	//зддддддддддддддддддддддддддддддд©
	//ЁMonta a SL2 - (Itens Orcamento)Ё
	//юддддддддддддддддддддддддддддддды
	dbSelectArea('SC6')
	SC6->(dbSetOrder(1))
	dbSelectArea('SC9')
	SC9->(dbSetOrder(1))
	If SC9->(dbSeek(xFilial('SC9')+cNumPed))
		nVlrPed	:= 0
		cItem	:= "00"
		While SC9->C9_PEDIDO == cNumPed	
			If SC6->(dbSeek(xFilial('SC6') + SC9->C9_PEDIDO + SC9->C9_ITEM ))
			    cItem := Soma1(cItem)
				aAdd(aSL2,{"L2_FILIAL"	,	xFilial("SL2")			})
				aAdd(aSL2,{"L2_NUM"		,	cL1Num					})
				aAdd(aSL2,{"L2_PRODUTO"	,	SC6->C6_PRODUTO			})
				aAdd(aSL2,{"L2_ITEM"	,	cItem		   			})	//Item da SL2 nao deve acompanhar o da SC6/SC9
				aAdd(aSL2,{"L2_DESCRI"	,	SC6->C6_DESCRI			})
				aAdd(aSL2,{"L2_QUANT"	,	SC6->C6_QTDVEN 			})
				aAdd(aSL2,{"L2_VRUNIT"	,	SC6->C6_PRCVEN 			})
				aAdd(aSL2,{"L2_VLRITEM"	,	SC6->C6_VALOR 			})
				aAdd(aSL2,{"L2_DESC"	,	SC6->C6_DESCONT			})
				aAdd(aSL2,{"L2_VALDESC"	,	SC6->C6_VALDESC			})
				aAdd(aSL2,{"L2_UM"		,	SC6->C6_UM  	   		})
				aAdd(aSL2,{"L2_LOCAL"	,	SC6->C6_LOCAL  			})
				aAdd(aSL2,{"L2_TES"		,	SC6->C6_TES    			})
				aAdd(aSL2,{"L2_CF"		,	SC6->C6_CF 				})
				aAdd(aSL2,{"L2_DOC"		,	SC6->C6_NOTA  	 		})
				aAdd(aSL2,{"L2_SERIE"	,	SC6->C6_SERIE			})
				aAdd(aSL2,{"L2_VEND"	,	GetNewPar("MV_VENDPAD","")})
				aAdd(aSL2,{"L2_TABELA"	,	SC5->C5_TABELA			})
				aAdd(aSL2,{"L2_EMISSAO"	,	SC5->C5_EMISSAO			})
				aAdd(aSL2,{"L2_GRADE"	,	SC6->C6_GRADE          	})
				aAdd(aSL2,{"L2_RESERVA"	,	""						})
				aAdd(aSL2,{"L2_LOJARES"	,	""						})
				aAdd(aSL2,{"L2_PEDSC5"	,	SC9->C9_PEDIDO			})
				aAdd(aSL2,{"L2_ITESC6"	,	SC6->C6_ITEM 			})
				aAdd(aSL2,{"L2_SEQUEN"	,	SC9->C9_SEQUEN			})			
				aAdd(aSL2,{"L2_VDMOST"	,	"N"						})			
						 	
				If SL2->(FieldPos("L2_FDTENTR")) > 0
					aAdd(aSL2,{"L2_FDTENTR", SC6->C6_ENTREG  })
				EndIf
			    		
				//Contabiliza o valor do item
				nVlrPed	+= (SC6->C6_VALOR - SC6->C6_VALDESC)
							
				//зддддддддддд©
				//ЁGrava a SL2Ё
				//юддддддддддды
				Lj7GeraSL( "SL2", aSL2, .T., .T. ) 
				aSL2 := {}
			EndIf										
		    SC9->(dbSkip())
		EndDo
        
		//зддддддддддд©
		//ЁGrava a SL1Ё
		//юддддддддддды
        Lj7GeraSL( "SL1", aSL1, .T., .T. )

		dbSelectArea('SCV')
		SCV->(dbSetOrder(1))
		SCV->(dbSeek(xFilial('SCV')+SC5->C5_NUM))

		//зддддддддддддддддддддддддддд©
		//ЁMonta a SL4 - (Forma Pgto) Ё
		//юддддддддддддддддддддддддддды
		aAdd(aSL4,{"L4_FILIAL"	,	xFilial("SL4")		})
		aAdd(aSL4,{"L4_NUM"    	,	cL1Num				})
		aAdd(aSL4,{"L4_DATA"	,	dDataBase			})
		aAdd(aSL4,{"L4_VALOR"	,	nVlrPed				})
		aAdd(aSL4,{"L4_FORMA"	,	"R$"				})
		aAdd(aSL4,{"L4_TERCEIR"	,	.F.					})
		aAdd(aSL4,{"L4_ORIGEM"	,	"MATA460"			})
  
		//зддддддддддд©
		//ЁGrava a SL4Ё
		//юддддддддддды
		Lj7GeraSL( "SL4", aSL4, .T., .T. )
		lRet := .T.		
		
		//зддддддддддддддддддддддддддддддддддддд©
		//ЁAtualiza a SC9 como orcamento emitidoЁ
		//юддддддддддддддддддддддддддддддддддддды
		dbSelectArea('SC9')
		SC9->(dbSetOrder(1))	
		If SC9->(dbSeek(xFilial('SC9')+SC5->C5_NUM))
			While SC9->C9_PEDIDO == SC5->C5_NUM 
				If IsMark("C9_OK",cMarca,lInverte)
					RecLock('SC9',.F.)
					SC9->C9_DAV := "S"
					SC9->(msUnlock())
				EndIf
				SC9->(dbSkip())
			EndDo
		EndIf
	EndIf
ElseIf Empty(cNumDAV)
	MsgInfo(STR0081) //'Geracao DAV abortada'
EndIf 

RestArea(aArea)
Return lRet

/*эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁMT461PedUp╨Autor  ЁCesar A. Bianchi    ╨ Data Ё  16/12/10   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     ЁAtualiza o pedido de venda, caso o mesmo tenha sido migrado ╨╠╠
╠╠╨          Ёpara o sigaloja como orcamento e em seguida transformado em ╨╠╠
╠╠╨          Ёvenda. (Somente ambientes do tipo PAF-ECF)				  ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       ЁMATA460A                                                    ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ*/
Function Mt461PedUp(cSL1Num)
Local aArea 	:= getArea()
Local cNumPed	:= ""
Local lContinue	:= .T.	
Local lLiberOk	:= .T.
Local lResidOk	:= .T.
Local lFaturOk	:= .T.
Local lLiber	:= .T.
Local lTransf 	:= .F.

Default cSL1Num 	:= ""   

//здддддддддддддддддддддддддддддддддд©
//ЁVerifica se ambiente igual PAF-ECFЁ
//юдддддддддддддддддддддддддддддддддды
If !Empty(cSL1Num) .and. LjNfPafEcf(SM0->M0_CGC)

	//зддддддддддддддддддддддддддддддддддддд©
	//ЁPosiciona no primeiro item da SL2	Ё
	//Ёe verifica se e um orcamento nativo 	Ё
	//Ёdo pedido de venda do SIGAFAT		Ё
	//юддддддддддддддддддддддддддддддддддддды
	dbSelectArea('SL2')
	SL2->(dbSetOrder(1))
	If lContinue .and. SL2->(dbSeek(xFilial('SL2')+cSL1Num))
		
		//здддддддддддддддд©
		//ЁPosiciona na SF2Ё
		//юдддддддддддддддды
		dbSelectArea('SF2')
		SF2->(dbSetOrder(1))
		SF2->(dbSeek(xFilial('SF2')+SL2->L2_DOC+SL2->L2_SERIE))
		If !Empty(SL2->L2_PEDSC5) .and. !Empty(SL2->L2_ITESC6) .and. !Empty(SL2->L2_SEQUEN)
            		
			//зддддддддддддддддддддддддддддд©
			//ЁAtualiza o SC6 correspondenteЁ
			//юддддддддддддддддддддддддддддды
			cNumPed := SL2->L2_PEDSC5
			dbSelectArea('SC6')
			SC6->(dbSetOrder(1))
			If lContinue
				While SL2->L2_FILIAL + SL2->L2_NUM == xFilial( "SL2" ) + cSL1Num
					
					//здддддддддддддддд©
					//ЁPosiciona na SD2Ё
					//юдддддддддддддддды
					dbSelectArea('SD2')
					SD2->(dbSetOrder(3))
					SD2->(dbSeek(xFilial('SD2') + SL2->L2_DOC + SL2->L2_SERIE + SL1->L1_CLIENTE + SL1->L1_LOJA + SL2->L2_PRODUTO + SL2->L2_ITEM ))
				
					If SC6->(dbSeek(xFilial('SC6')+SL2->L2_PEDSC5+SL2->L2_ITESC6))
						RecLock("SC6",.F.)
						SC6->C6_QTDENT := SC6->C6_QTDVEN
						MaAvalSC6("SC6",5,"SC5")

						SC6->(MsUnlock())
					Else
						lContinue := .F.
					EndIf
					SL2->(dbSkip())
				EndDo
			EndIf
							
			//зддддддддддддддддддддддддддддд©
			//ЁAtualiza o SC9 correspondenteЁ
			//юддддддддддддддддддддддддддддды
      		dbSelectArea('SL2')
			SL2->(dbSetOrder(1))
			If lContinue .and. SL2->(dbSeek(xFilial('SL2')+cSL1Num))
				dbSelectArea('SC9')
				SC9->(dbSetOrder(1))
				While SL2->L2_FILIAL + SL2->L2_NUM == xFilial( "SL2" ) + cSL1Num
					If SC9->(dbSeek(xFilial('SC9')+SL2->L2_PEDSC5+SL2->L2_ITESC6+SL2->L2_SEQUEN))
						RecLock("SC9",.F.)
						MaAvalSC9("SC9",11)
						SC9->(MsUnlock())
					Else
						lContinue := .F.						
					EndIf
					SL2->(dbSkip())
				EndDo				
			EndIf
			
			//зддддддддддддддддддддддддддддд©
			//ЁAtualiza o SC5 correspondenteЁ
			//юддддддддддддддддддддддддддддды
			dbSelectArea('SC5')
			SC5->(dbSetOrder(1))
			If SC5->(dbSeek(xFilial('SC5')+cNumPed))
				RecLock('SC5',.F.)
				MaAvalSC5("SC5",5,,,,,,,,cNumPed)
				SC5->(msUnlock())
			Else
				Conout(STR0077) //"LjGrvBatch: Nao Localizou pedido de venda (SC5) para atualizacao"
				lContinue := .F.
			EndIf	
		EndIf
	Else
		lContinue := .F.
		Conout(STR0079)	//"LjGrvBatch: Erro atualizando Pedido de Venda (SC5)"
	EndIf	
EndIf

RestArea(aArea)
Return lContinue

/*эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁMT461DvCN ╨Autor  ЁCesar A. Bianchi    ╨ Data Ё  16/12/10   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     ЁRealiza o cancelamento do DAV gerado a partir do Pedido de  ╨╠╠
╠╠╨          ЁVenda, eliminando o conteudo setado na SC9 quando o DAV foi ╨╠╠
╠╠╨          Ёgerado (Funcao executada quando o Ped de Venda eh alterado) ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       ЁMATA460A                                                    ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ*/
Function MT461DvCN(cNFNum, cNfSerie, cSL1Num)
Local aArea			:= getArea()
Local cCodPed		:= ""
Local lRet 			:= .F.
Local aSC6Itens		:= {}
Local nI			:= 1
Default cNFNum		:= """
Default cNFSerie 	:= ""
Default cSL1Num		:= ""

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁColeta quais sao os itens da SC6 e SC9 que devem ser estornadosЁ
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !Empty(cSL1Num) 
	dbSelectArea('SL2')
	SL2->(dbSetOrder(1))
	if SL2->(dbSeek(xFilial('SL2')+cSL1Num))
		While SL2->L2_NUM == cSL1Num
			If !Empty(SL2->L2_PEDSC5) .and. !Empty(SL2->L2_ITESC6)
				aAdd(aSC6Itens,{SL2->L2_PEDSC5,SL2->L2_ITESC6,SL2->L2_SEQUEN})
			EndIf
			SL2->(dbSkip())
		EndDo
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддд©
//ЁPosiciona no SC9 correspondente a NF CanceladaЁ
//юдддддддддддддддддддддддддддддддддддддддддддддды
If !Empty(cNFNum) .and. !Empty(cNFSerie) .and. len(aSC6Itens) > 0
	dbSelectArea('SC9')
	SC9->(dbSetOrder(6))
	If SC9->(dbSeek(xFilial('SC9')+cNfSerie+cNFNum))
		cCodPed := SC9->C9_PEDIDO
		
		//здддддддддддддддддддддддддддддд©
		//ЁLocaliza o item na SC5 e limpaЁ
		//юдддддддддддддддддддддддддддддды
        dbSelectArea('SC5')
        SC5->(dbSetOrder(1))
        If SC5->(dbSeek(xFilial('SC5')+cCodPed))
			RecLock('SC5',.F.)
			MaAvalSC5("SC5",6)
			SC5->(msUnlock())
			lRet := .T.
        Else
			lRet := .F.        
        EndIf
		
		//здддддддддддддддддддддддддддддд©
		//ЁLocaliza o item na SC6 e limpaЁ
		//юдддддддддддддддддддддддддддддды
		dbSelectArea('SC6')
		SC6->(dbSetOrder(1))
		If lRet 
			For nI := 1 to len(aSC6Itens)
				if SC6->(dbSeek(xFilial('SC6')+aSC6Itens[nI,1]+aSC6Itens[nI,2]))
					RecLock('SC6',.F.)
					MaAvalSC6("SC6",6,"SC5")
					SC6->(MsUnlock())
					SC6->(dbSkip())
				EndIf
			Next nI
			lRet := .T.
		Else
			lRet := .F.
		EndIf
		
		//здддддддддддддддддддддддддддддд©
		//ЁLocaliza o item na SC9 e limpaЁ
		//юдддддддддддддддддддддддддддддды		
		If lRet
			SC9->(dbSetOrder(1))
			For nI := 1 to len(aSC6Itens)		
				If SC9->(dbSeek(xFilial('SC9')+aSC6Itens[nI,1]+aSC6Itens[nI,2]+aSC6Itens[nI,3]))
					RecLock('SC9',.F.)
					SC9->C9_BLCRED  := ""
					SC9->C9_BLEST 	:= ""
					SC9->C9_NFISCAL	:= ""
					SC9->C9_SERIENF	:= ""
					SC9->C9_DAV		:= ""
					MaAvalSC9("SC9",12)
					SC9->(MsUnlock())
					lRet := .T.
				EndIf
			Next nI
		EndIf
	Else
		conout(STR0080)	//"Lj140: Nao localizou item na SC9"
	EndIf
EndIF

RestArea(aArea)
Return lRet

/*эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  Ёa461NexOrc╨Autor  ЁCesar A. Bianchi    ╨ Data Ё  28/12/10   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Desc.     ЁRetorna o proximo codigo de DAV disponivel.                 ╨╠╠
╠╠╨          Ё                                                            ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё AP                                                         ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ*/
Static Function a461NexOrc()
Local aArea := getArea()
Local cRet  := ""
Local aSequencia := {}
Local nTamOrc := TamSX3("LQ_NUMORC")[1]

LjxDNota("DAV", 1 ,.T. , 1,@aSequencia,Space(nTamOrc),nil,1,999,.F.,"",Nil,nTamOrc,.T.)          

If ValType(aSequencia) == "A" .and. len(aSequencia) > 0
	cRet := aSequencia[1,2]
EndIf

RestArea(aArea)
Return cRet


//-------------------------------------------------------------------
/*/{Protheus.doc} A460VERPRS
VerificaГЦo e marcaГЦo do registro no MarkBrow e Vincula NFs
@sample   A460VERPRS(cId, cMarca) 
@param    cId     - Indica o cId da Acao. 
@param    cMarca  - valor de marcacao da markbrow(). 
@return   lRet (Boolean) - sempre verdadeiro.

@author   Eduardo Vicente
@since    27.02.2013
@version  P11.5
/*/
//-------------------------------------------------------------------

Function A460VERPRS(cId, cMarca)

Local aArea		:= GetArea()         //Salva a area atual

Local cPedido	:= ""                //Chave do pedido presente
Local oMark		:= GetMarkBrow()     //Objeto do Browser Markbrow()
Local nRecno	:= Recno()           //Posicao atual
Local cInfMarc	:= 	If(IsMark("C9_OK", cMarca)," ",cMarca)   //Se ja esta marcado ira desmarcar caso contrario ira marcar.
Local cIndPed	:= SC9->C9_FILIAL+SC9->C9_PEDIDO  //Chave do pedido

If  (cId == "1")
	
	If  A460CKPRES(@cPedido)
		Help( " ", 1, "MA461PVPai", , STR0084 + cPedido, 1 )  //"Pedido Presente, favor selecionar o Pedido Pai!"

	ElseIf A460Avalia()
		Help( " ", 1, "MA461PVBloq", , STR0085, 1 )   //"Pedido pode estar Bloqueado\Faturado!"
	Else

		Reclock("SC9",.F.)
		SC9->C9_OK := cInfMarc
		SC9->( MsUnlock() )

		If  !( Empty(cPedido) ) .And. SC9->( dbSeek(cIndPed) )

			While !( Eof() ) .And. ((C9_FILIAL+C9_PEDIDO == cPedido) .Or. (C9_FILIAL+C9_PEDIDO == cIndPed))
			
				Reclock("SC9",.F.)
				SC9->C9_OK := cInfMarc
				SC9->( MsUnlock() )

				SC9->( dbSkip() )
			End
		EndIf
	EndIf
	
EndIf

RestArea(aArea)

oMark:Refresh()
Eval(bFiltraBrw)

Return .T.

//-------------------------------------------------------------------
/*/{Protheus.doc} A460CKPRES
Verifica se o pedido se trata como pedido de presente.
@sample   A460CKPRES(cPedido) 
@param    cPedido  - Indica o numero do pedido. 
@return   lRet (Boolean) - retorna verdadeiro caso seja um pedido presente.

@author   Eduardo Vicente
@since    27.02.2013
@version  P11.5
/*/
//-------------------------------------------------------------------

Function A460CKPRES(cPedido)

Local aArea	:= GetArea()
Local lRet	:= .F.

SC5->( DbSetOrder(1) )

If  (( SC5->(FieldPos("C5_ECPRESN")) > 0) .And. (SC5->(FieldPos("C5_ECVINCU")) > 0) .And. SC5->(DbSeek(SC9->(C9_FILIAL+C9_PEDIDO))) )
	If  (SC5->C5_ECPRESN == "1")
		lRet:=  .T.
	EndIf

	cPedido:= (SC5->C5_FILIAL + SC5->C5_ECVINCU)
EndIf

RestArea(aArea)

Return lRet

//-----------------------------------------------------
/*/	Integra a Nota Fiscal com o SIGAGFE
@author Felipe Machado de Oliveira
@param cNumNFS = nЗmero da NFS que serА enviada como parametro chave da funГЦo OMSM011NFS
		cSerieNFS = serie da NFS que serА enviada como parametro chave para funГЦo OMSM011NFS
@version P11
@since 18/04/2013
/*/
//------------------------------------------------------
Function MATA461IPG(cNumNFS,cSerieNFS)
Local lRet := .T.
Local lIntGFE := SuperGetMv("MV_INTGFE",.F.,.F.)
Local cIntGFE2 := SuperGetMv("MV_INTGFE2",.F.,"2")
Local cIntNFS := SuperGetMv("MV_GFEI11",.F.,"2")

Default cNumNFS := ""
Default cSerieNFS := ""

//IntegraГЦo Protheus com SIGAGFE
If lIntGfe == .T. .And. cIntGfe2 $ "1S" .And. cIntNFS == "1"
	If !OMSM011NFS("UNICO",cNumNFS,cSerieNFS)
		lRet := .F.
	EndIf
EndIf

Return lRet

