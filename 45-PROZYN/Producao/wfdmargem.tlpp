#include "protheus.ch"
#include "topconn.ch"
#include "rwmake.ch"
#Include "RPTDEF.CH"
#INCLUDE "TBICONN.CH"

/*
Workflow de Margem abaixo de 15%
Desenvolvido por Denis varella
*/

User Function WFDMARGEM()
    Local cQry := ""
    Local cTo := ""
    Local cHTML := "Data de processamento: "+DtoC(Date())+" às "+Time()+"."
    Local aDados := {}
    
    Local oFWMsExcel
    Local cFolder := "\margem_diario\" 
    Local cArquivo  := DtoS(Date())+".XML"
    Local nA := 0

    Local aAttach := {cFolder+cArquivo}

    Local lPrcNet := .F.

    Private nMargemLim := 0
    Private dUlMes := CtoD("  /  /    ")
	Private nGGFFixo := 0

    PREPARE ENVIRONMENT EMPRESA '01' FILIAL '01'

    nMargemLim := SuperGetMV("MV_XMARGEM",,15)
    dUlMes := SuperGetMV("MV_ULMES",,CtoD("30/09/2021"))
	nGGFFixo := SuperGetMv("MV_GGFFIXO",,0.25)
    
    If !ExistDir( cFolder )
        MakeDir( cFolder )
    EndIf

    cTo := SuperGetMV("MV_XMARGMD",,"nailson.paixao@prozyn.com.br")


    cQry := " SELECT C5_EMISSAO,C5_FECENT,C5_NUM,C5_CLIENTE,C5_LOJACLI,C5_TIPO,C5_TIPOCLI,A1_NREDUZ,A3_COD,A3_NOME,C6_PRODUTO,B1_DESC,C6_ITEM,C6_TES,C6_QTDVEN,C6_XPRCNET,C6_PRCVEN,C6_PRUNIT - C6_PRCVEN DESCONTO,C6_VALOR,C5_MOEDA,C5_TXMOEDA,C5_TPFRETE,
    cQry += " CASE WHEN C5_TPFRETE = 'C' THEN A4_XMEDIAF * C6_QTDVEN ELSE 0 END A4_XMEDIAF,C6_LOCAL,C6_LOTECTL,E4_ACRVEN1,B1_TIPO,B9_CM1 
    cQry += " FROM "+RetSqlName("SC5")+" C5
    cQry += " INNER JOIN "+RetSqlName("SA1")+" A1 ON A1_FILIAL = '"+xFilial("SA1")+"' AND A1_COD = C5_CLIENTE AND A1_LOJA = C5_LOJACLI AND A1.D_E_L_E_T_ = ''
    cQry += " INNER JOIN "+RetSqlName("SA4")+" A4 ON A4_FILIAL = '"+xFilial("SA4")+"' AND A4_COD = C5_TRANSP AND A4.D_E_L_E_T_ = ''
    cQry += " INNER JOIN "+RetSqlName("SA3")+" A3 ON A3_FILIAL = '"+xFilial("SA3")+"' AND A3_COD = C5_VEND1 AND A3.D_E_L_E_T_ = ''
    cQry += " INNER JOIN "+RetSqlName("SE4")+" E4 ON E4_FILIAL = '"+xFilial("SE4")+"' AND E4_CODIGO = C5_CONDPAG AND E4.D_E_L_E_T_ = ''
    cQry += " INNER JOIN "+RetSqlName("SC6")+" C6 ON C6_FILIAL = '"+xFilial("SC6")+"' AND C6_NUM = C5_NUM AND C6_CLI = C5_CLIENTE AND C6_LOJA = C5_LOJACLI AND C6.D_E_L_E_T_ = ''
    cQry += " INNER JOIN "+RetSqlName("SF4")+" F4 ON F4_FILIAL = '"+xFilial("SF4")+"' AND F4_CODIGO = C6_TES AND F4.D_E_L_E_T_ = '' AND F4_DUPLIC = 'S'
    cQry += " INNER JOIN "+RetSqlName("SB1")+" B1 ON B1_FILIAL = '"+xFilial("SB1")+"' AND B1_COD = C6_PRODUTO AND B1.D_E_L_E_T_ = ''
    cQry += " INNER JOIN "+RetSqlName("SB9")+" B9 ON B9_FILIAL = '"+xFilial("SB9")+"' AND B9_COD = C6_PRODUTO AND B9_LOCAL = C6_LOCAL AND B9_DATA = '"+DtoS(dUlMes)+"' AND B9.D_E_L_E_T_ = ''
    cQry += " WHERE C5.D_E_L_E_T_ = '' AND C5_TIPO = 'N'
    // cQry += " AND C5_XBLQMRG != 'L'
    cQry += "  AND C6_NOTA = '' 
    cQry += " ORDER BY C5_EMISSAO,C5_NUM,C6_ITEM
    DbUseArea( .T. , "TOPCONN" , TcGenQry(,,cQry) , "WFMDIA",.T.,.T.)

    nTxMoeda := U_GetMoeda()
    DbSelectArea("SC5")
    SC5->(DbSetOrder(1))
    DbSelectArea("SC6")
    SC6->(DbSetOrder(1))
    While WFMDIA->(!eof())
        SC5->(DbSeek(xFilial("SC5")+WFMDIA->C5_NUM))
        SC6->(DbSeek(xFilial("SC6")+WFMDIA->C5_NUM+WFMDIA->C6_ITEM+WFMDIA->C6_PRODUTO))
        aImpostos := GetImpostos(WFMDIA->C5_CLIENTE,;
        WFMDIA->C5_LOJACLI,;
        WFMDIA->C5_TIPO,;
        WFMDIA->C5_TIPOCLI,;
        WFMDIA->C6_PRODUTO,;
        WFMDIA->C6_TES,;
        WFMDIA->C6_QTDVEN,;
        WFMDIA->C6_PRCVEN,;
        WFMDIA->DESCONTO)

        nIpi := aImpostos[1]

        nCustoKG := WFMDIA->B9_CM1
        nGGF := GetGGF(WFMDIA->C6_PRODUTO, WFMDIA->C6_LOTECTL)

        If !(WFMDIA->B1_TIPO $ 'ME') //Apenas para produtos que não são de revenda
            nCustoKG := nCustoKG - nGGF + (nGGFFixo * nTxMoeda)
            //OLD    //nCustoKG := nCustoKG - nGGF + (nGGFFixo * WFMDIA->C5_TXMOEDA) 
        EndIf

        nTotalFat := (WFMDIA->C6_VALOR + aImpostos[1]) * WFMDIA->C5_TXMOEDA

        If lPrcNet
            nPrcNet := Round(WFMDIA->C6_PRCVEN * aImpostos[6],2)
        Else
            nPrcNet := WFMDIA->C6_XPRCNET
        EndIf

        nNetSales := nPrcNet * WFMDIA->C6_QTDVEN * WFMDIA->C5_TXMOEDA
        
        nImpostos := nTotalFat - nNetSales

        nCustoFin := nTotalFat * WFMDIA->E4_ACRVEN1 / 100
        nFreteCIF := Iif(WFMDIA->C5_TPFRETE == 'C', Round(WFMDIA->A4_XMEDIAF,2), 0) // nÃO PRECISO MULTIPLICAR PELA QUANTIDADE?

        nMargemBruta := (nNetSales - ((nCustoKG * WFMDIA->C6_QTDVEN) + nFreteCIF + nCustoFin))
        nMargemPorcent := ((nNetSales - ((nCustoKG * WFMDIA->C6_QTDVEN) + nFreteCIF + nCustoFin))/nNetSales)*100
        nCustoKG  := nCustoKG + ((nFreteCIF + nCustoFin) / WFMDIA->C6_QTDVEN)

        If nMargemPorcent < nMargemLim

            aAdd(aDados,{DtoC(StoD(WFMDIA->C5_EMISSAO)),;
            WFMDIA->C5_NUM,;
            WFMDIA->C5_CLIENTE+"/"+WFMDIA->C5_LOJACLI,;
            WFMDIA->A1_NREDUZ,;
            WFMDIA->A3_COD,;
            WFMDIA->A3_NOME,;
            WFMDIA->C6_PRODUTO,;
            WFMDIA->B1_DESC,;
            AllTrim(Transform(WFMDIA->C6_QTDVEN,'@E 999,999,999.99')),;
            AllTrim(Transform(nCustoKG,'@E 999,999,999.99')),;
            AllTrim(Transform(Round(nNetSales / WFMDIA->C6_QTDVEN,2),'@E 999,999,999.99')),;
            AllTrim(Transform(nNetSales,'@E 999,999,999.99')),;
            AllTrim(Transform(nMargemBruta,'@E 999,999,999.99')),;
            AllTrim(Transform(nMargemPorcent,'@E 999,999.99'))+"%",;
            DtoC(StoD(WFMDIA->C5_FECENT))})
            // WFMDIA->C6_PRCVEN,;
            // aImpostos[7][1],;
            // aImpostos[7][2],;
            // aImpostos[7][3],;
            // aImpostos[7][4],;
            // WFMDIA->C6_XPRCNET,;
            // nPrcNet})

        EndIf
        
        WFMDIA->(DbSkip())
    EndDo

    If len(aDados) > 0
        
        oFWMsExcel := FWMSExcel():New()
        

        cTitulo := "Itens com Margem Inferior a "+cValtoChar(nMargemLim)+"%"
        cAba := "Alerta de Margem Diário"
        oFWMsExcel:AddworkSheet(cTitulo)

        oFWMsExcel:AddTable(cTitulo,cAba)
        oFWMsExcel:AddColumn(cTitulo,cAba,"Data"		,1,1)
        oFWMsExcel:AddColumn(cTitulo,cAba,"Pedido"		,1,1)
        oFWMsExcel:AddColumn(cTitulo,cAba,"Cód. Cliente"	,1,1) 
        oFWMsExcel:AddColumn(cTitulo,cAba,"Cliente"		,1,1)
        oFWMsExcel:AddColumn(cTitulo,cAba,"Cod. Vendedor"		,1,1) 
        oFWMsExcel:AddColumn(cTitulo,cAba,"Nome Vendedor"		,1,1) 
        oFWMsExcel:AddColumn(cTitulo,cAba,"Cód. Produto"		,1,1) 
        oFWMsExcel:AddColumn(cTitulo,cAba,"Produto"	,1,1) 
        oFWMsExcel:AddColumn(cTitulo,cAba,"Quantidade",2,2)
        oFWMsExcel:AddColumn(cTitulo,cAba,"Custo KG NET",3,3) 
        oFWMsExcel:AddColumn(cTitulo,cAba,"Venda KG NET",3,3) 
        oFWMsExcel:AddColumn(cTitulo,cAba,"Venda Total NET",3,3)
        oFWMsExcel:AddColumn(cTitulo,cAba,"Margem Bruta",3,3)
        oFWMsExcel:AddColumn(cTitulo,cAba,"Margem %",2,2)
        oFWMsExcel:AddColumn(cTitulo,cAba,"Previsão Faturamento",1,1)

        //oFWMsExcel:AddColumn(cTitulo,cAba,"C6_PRCVEN",3,3) 

        //oFWMsExcel:AddColumn(cTitulo,cAba,"IPI",2,2)
        //oFWMsExcel:AddColumn(cTitulo,cAba,"ICMS",2,2)
        //oFWMsExcel:AddColumn(cTitulo,cAba,"PIS",2,2)
        //oFWMsExcel:AddColumn(cTitulo,cAba,"COFINS",2,2)

        // oFWMsExcel:AddColumn(cTitulo,cAba,"C6_XPRCNET",3,3) 
        //oFWMsExcel:AddColumn(cTitulo,cAba,"NET Calculado",3,3) 
        

        For nA := 1 to len(aDados)
            
    	    oFWMsExcel:AddRow(cTitulo,cAba,aDados[nA])

        Next nA

        //Ativando o arquivo e gerando o xml
        oFWMsExcel:Activate()
        oFWMsExcel:GetXMLFile(cFolder+cArquivo)

        // __CopyFile(cArquivo+".xml",cFolder+cArquivo+".xml")

    EndIf
    //cTo := "bruno@newbridge.srv.br"
    U_zEnvMail(cTo, "Aviso diário de Margem abaixo de "+cValtoChar(nMargemLim)+"%", cHTML, aAttach, .f., .t., .t.)
    FERASE(cFolder+cArquivo)

    RESET ENVIRONMENT

Return

Static Function GetImpostos(cCli,cLoja,cTipo,cTipoCli,cProduto,cTes,nQtd,nPreco,nDesconto)

    DbSelectArea("SA1")
    SA1->(DbSetOrder(1))
    SA1->(DbSeek(xFilial("SA1")+cCli+cLoja))
    
    MaFisIni(cCli,cLoja,If(cTipo$'DB',"F","C"),cTipo,cTipoCli,MaFisRelImp("MTR700",{"SC5","SC6"}),,,,'MATA461',,,,SA1->A1_GRPTRIB,,,,{},,,SC6->C6_NUM ,SC5->C5_CLIENTE,SC5->C5_LOJACLI)

    DbSelectArea("SF4")
    SF4->(DbSetOrder(1))
    SF4->(DbSeek(xFilial("SF4")+SC6->C6_TES))

    DbSelectArea("SB1")
    SB1->(DbSetOrder(1))
    SB1->(DbSeek(xFilial("SB1")+SC6->C6_PRODUTO))

	MaFisAdd(cProduto,;
		cTes,;
		nQtd,;
		nPreco,;
		nDesconto,;
		"",;
		"",;
		0,;
		0,;
		0,;
		0,;
		0,;
		nPreco * nQtd,;
		0,;
		SB1->(Recno()),;
		SF4->(Recno()))
        
    nPercIpi       := MaFisRet(1,"IT_ALIQIPI")
    nPercIcm       := MaFisRet(1,"IT_ALIQICM")
    nPercPS2       := MaFisRet(1,"IT_ALIQPS2")
    nPercCF2       := MaFisRet(1,"IT_ALIQCF2")

    nPercTot := 1 - ((nPercIpi+nPercIcm+nPercPS2+nPercCF2) / 100)

	nValIpi        := MaFisRet(1,"IT_VALIPI" )
	nValIcm        := MaFisRet(1,"IT_VALICM" )
	nValCom        := MaFisRet(1,"IT_VALCMP" )
	nValPis   		:= MaFisRet(1,"IT_VALPS2")
	nValCof   		:= MaFisRet(1,"IT_VALCF2" )
	MaFisEnd()
Return { nValIpi, nValIcm, nValCom, nValPis, nValCof, nPercTot, {nPercIpi,nPercIcm,nPercPS2,nPercCF2}}

Static Function GetGGF(cProduto, cLote)
	Local nRet		:= 0
	Local nCust		:= 0
	Local cQuery	:= ""
	Local cArqTmp	:= GetNextAlias()
    Local nQtdItens := 0

	Default cProduto	:= "" 
	Default cLote		:= "" 

	cQuery	:= " SELECT D3_EMISSAO, D3_COD, D3_LOTECTL, D3_OP, SUM(D3_QUANT) D3_QUANT FROM "+RetSqlName("SD3")+" SD3 "+CRLF
	cQuery	+= " WHERE SD3.D3_FILIAL = '"+xFilial("SD3")+"' "+CRLF
	cQuery	+= " AND D3_COD = '"+cProduto+"' "+CRLF
    cQuery  += " AND SD3.D3_EMISSAO BETWEEN '"+ DTos(MonthSub(FirstDate(dDatabase),1))+"' AND '"+ DTos(LastDate(MonthSub(FirstDate(dDatabase),1)))+"' "
	cQuery	+= " AND SD3.D3_CF = 'PR0' "+CRLF
	cQuery	+= " AND SD3.D3_ESTORNO != 'S' "+CRLF
	cQuery	+= " AND SD3.D_E_L_E_T_ = ' ' "+CRLF
	cQuery	+= " GROUP BY D3_EMISSAO, D3_COD, D3_LOTECTL, D3_OP "+CRLF 
	cQuery	+= " ORDER BY D3_EMISSAO DESC "
	DbUseArea( .T. , "TOPCONN" , TcGenQry(,,cQuery) , cArqTmp,.T.,.T.)

	While (cArqTmp)->(!Eof())
		nCust := GetCusMod((cArqTmp)->D3_OP, (cArqTmp)->D3_EMISSAO)
		If nCust > 0
            nQtdItens++
			If (cArqTmp)->D3_QUANT != 0
                nRet += (nCust/(cArqTmp)->D3_QUANT)
			EndIf
		EndIf
		(cArqTmp)->(DbSkip())
	EndDo
    (cArqTmp)->(DbCloseArea())

Return nRet / nQtdItens

Static Function GetCusMod(cOp, cEmissao)
	Local nRet		:= 0
	Local cQuery	:= ""
	Local cArqTmp	:= GetNextAlias()

	Default cOp 		:= ""
	Default cEmissao	:= ""

	cQuery := " SELECT SUM(D3_CUSTO1) D3_CUSTO1 FROM "+RetSqlName("SD3")+" SD3 "+CRLF
	cQuery += " WHERE SD3.D3_FILIAL = '"+xFilial("SD3")+"' "+CRLF
	cQuery += " AND D3_COD LIKE '%MOD%' "+CRLF
	cQuery += " AND D3_EMISSAO = '"+cEmissao+"' "+CRLF
	cQuery += " AND D3_OP = '"+cOp+"' "+CRLF
	cQuery += " AND SD3.D_E_L_E_T_ = ' ' "+CRLF

	DbUseArea( .T. , "TOPCONN" , TcGenQry(,,cQuery) , cArqTmp,.T.,.T.)

	If (cArqTmp)->(!Eof())
		nRet := (cArqTmp)->D3_CUSTO1
	EndIf

	(cArqTmp)->(DbCloseArea())

Return nRet
