#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\TOTVS.CH"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\Dialog.ch"
#line 28 "protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\Font.ch"
#line 29 "protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\PTMenu.ch"
#line 31 "protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\Print.ch"
#line 33 "protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\Colors.ch"
#line 35 "protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\Folder.ch"
#line 37 "protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\msobject.ch"
#line 38 "protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\VKey.ch"
#line 42 "protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\WinApi.ch"
#line 44 "protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\FWCommand.ch"
#line 47 "protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\FWCSS.CH"
#line 50 "protheus.ch"
#line 19 "d:\totvs12\MICROS~1\protheus\MYPROJ~2\fontes\f200port.prw"
Function U_F200PORT()

	Local _lRet   := .F. 


	If (Type("lFIDC") <> "U" .AND.  lFIDC) .OR.  (Type("lFIDC") == "U" .AND.  Iif(FindFunction("APMsgYesNo"), APMsgYesNo("Arquivo de retorno se refere a uma FIDC?", "FDIC"), (cMsgYesNo:="MsgYesNo", &cMsgYesNo.("Arquivo de retorno se refere a uma FIDC?", "FDIC"))))
		If Type("lFDVldVl") == "U"
			Public lFDVldVl	:= Iif(FindFunction("APMsgYesNo"), APMsgYesNo("Deseja validar valores para esta FIDC?", "FDIC"), (cMsgYesNo:="MsgYesNo", &cMsgYesNo.("Deseja validar valores para esta FIDC?", "FDIC")))
		EndIf

		Public lFIDC 	:= .T. 
		Return .T. 
	EndIf

	If ! ( File( MV_PAR04 ) )

		Help(" ",1,"NOARQPAR")

	Else

		_nHdl := fOpen(  MV_PAR04, 0 )
		fSeek( _nHdl, 0, 0 )

		_cBuffer := Space(85)
		fRead( _nHdl, @_cBuffer, 85 )
	    fClose( _nHdl )

     	_cBco := Substr( _cBuffer, 77, 3 )
		_cAge   := StrZero( Val( Substr( _cBuffer, 27, 4 ) ), 4, 0 ) + " "

	    If _cBco = "341"

           _cConta := StrZero( Val( Substr( _cBuffer, 31, 7 ) ), 5, 0 ) + Space( 5 )

	    ElseIf _cBco = "237"

   		   _cConta := StrZero( Val( Substr( _cBuffer, 39, 7 ) ), 5, 0 ) + Space( 5 )

	    End

	    SEE->( dbSeek( xFilial( "SEE" ) + _cBco + _cAge + _cConta, .T.  ) )



	    If (SEE->EE_CODIGO  = _cBco ) .And.  (SEE->EE_AGENCIA = _cAge ) .And.  (SEE->EE_CONTA   = _cConta)

	       If Empty( SEE->EE_CODOFI )

	          _cAge   := SEE->EE_AGENCIA
	          _cConta := SEE->EE_CONTA
	          _lRet   := .T. 

           Else

			  _cAge   := SEE->EE_AGEOFI
			  _cConta := SEE->EE_CTAOFI
              SEE->( dbSeek( xFilial( "SEE" ) + _cBco + _cAge + _cConta, .T.  ) )



			  If (SEE->EE_CODIGO  = _cBco) .And.  (SEE->EE_AGENCIA = _cAge) .And.  (SEE->EE_CONTA   = _cConta)

			     _lRet := .T. 

              Else

				 _cBco := "   "
				 Iif(FindFunction("APMsgInfo"), APMsgInfo("Conta Corrente não configurada!", "f200Port"), MsgInfo("Conta Corrente não configurada!", "f200Port"))

			  End

           End

		Else

	       Iif(FindFunction("APMsgInfo"), APMsgInfo("Banco não configurado para a realização das baixa", "Aviso f200Port"), MsgInfo("Banco não configurado para a realização das baixa", "Aviso f200Port"))

        End

    End

Return( _lRet )