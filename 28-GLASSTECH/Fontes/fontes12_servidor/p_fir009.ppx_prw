#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\RPTDEF.CH"
#line 2 "d:\totvs12\MICROS~1\protheus\MYPROJ~2\fontes\p_fir009.prw"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\FWPrintSetup.ch"
#line 3 "d:\totvs12\MICROS~1\protheus\MYPROJ~2\fontes\p_fir009.prw"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\Dialog.ch"
#line 28 "protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\Font.ch"
#line 29 "protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\PTMenu.ch"
#line 31 "protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\Print.ch"
#line 33 "protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\Colors.ch"
#line 35 "protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\Folder.ch"
#line 37 "protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\msobject.ch"
#line 38 "protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\VKey.ch"
#line 42 "protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\WinApi.ch"
#line 44 "protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\FWCommand.ch"
#line 47 "protheus.ch"
#line 1 "D:\TOTVS1~1\MICROS~1\INCLUDE\FWCSS.CH"
#line 50 "protheus.ch"
#line 5 "d:\totvs12\MICROS~1\protheus\MYPROJ~2\fontes\p_fir009.prw"




























Function U_P_FIR009(_cBordero)

LOCAL   _aSavArea := GetArea()
_cBordero := If( _cBordero == nil, "N", _cBordero ) ;

PRIVATE _cCaminho := ""
PRIVATE _cFile    := ""
PRIVATE _cMail    := ""

cPerg     := "PFIR09"










If (SE1->E1_CONTA = "55375     " .Or.  SE1->E1_CONTA = "88999     " .Or.  SE1->E1_CONTA = "12641     ")

    Pergunte( cPerg, .F.  )

Else

   Iif(FindFunction("APMsgInfo"), APMsgInfo("Verifique banco, impressão não permitida para esta conta conrrente, por gentileza cadastre o portador.",), MsgInfo("Verifique banco, impressão não permitida para esta conta conrrente, por gentileza cadastre o portador.",))
   Return( NIL )

End

If ( _cBordero = "N" )

   If ! Pergunte( cPerg, .T.  )
      Return()
   End

Else

   MV_PAR01 := SE1->E1_PREFIXO
   MV_PAR02 := SE1->E1_NUM
   MV_PAR03 := SE1->E1_PARCELA
   MV_PAR04 := SE1->E1_PARCELA

End

SE1->( dbSetOrder( 1 ) )

If ( _cBordero = "N" )

   Processa( { || MontaBol( _cBordero, 0 ) },"Aguarde...","Boleto", .F.  )

Else

   MontaBol( _cBordero, 0 )

End


RestArea( _aSavArea )

Return( NIL )










Static Function MontaBol( _cBordero, _nProc )

LOCAL   oPrint
LOCAL   n := 0
LOCAL aBitmap := "\system\Itau.bmp"








LOCAL aDadosEmp    := { AllTrim(SM0->M0_NOMECOM)                                                  ,					   SM0->M0_ENDCOB                                                            ,					   AllTrim(SM0->M0_BAIRCOB)+", "+AllTrim(SM0->M0_CIDCOB)+", "+SM0->M0_ESTCOB ,					   "CEP: "+Subs(SM0->M0_CEPCOB,1,5)+"-"+Subs(SM0->M0_CEPCOB,6,3)             ,					   "TELEFONE: "+SM0->M0_TEL                                                  ,					   "CNPJ: "+transform( SM0->M0_CGC, "@R 99.999.999/9999-99" )              ,					   "I.E.: "+transform( SM0->M0_INSC, "@R 999.999.999.999" )					  }

LOCAL aDadosTit
LOCAL aDadosBanco
LOCAL aDatSacado
LOCAL aBolText     := {}
LOCAL i            := 1
LOCAL CB_RN_NN     := {}
LOCAL nRec         := 0
LOCAL _nVlrAbat    := 0
LOCAL cParcela	   := ""
LOCAL lAdjustToLegacy := .T. 
Local nHRes    := 0
Local nVRes    := 0
Local nDevice
Local oSetup
Local aDevice  := {}
Local cSession := GetPrinterSession()
Local nRet     := 0
Local cMailID, cSubject

PRIVATE _nTxper := GETMV("MV_TXPER")
PRIVATE oFont2n
PRIVATE oFont8
PRIVATE oFont9
PRIVATE oFont10
PRIVATE oFont15n
PRIVATE oFont16
PRIVATE oFont16n
PRIVATE oFont14n
PRIVATE oFont24

PRIVATE nConsNeg := 0.4
PRIVATE nConsTex := 0.38
PRIVATE nFontSize := 40

If ( _cBordero = "I" )

   If ! (SA6->( dbSeek( xFilial( "SA6" ) + SE1->(E1_PORTADO+E1_AGEDEP+E1_CONTA)        , .F.  ) ))
      Iif(FindFunction("APMsgInfo"), APMsgInfo("Título não está registro no banco, por gentileza cadastre o portador.",), MsgInfo("Título não está registro no banco, por gentileza cadastre o portador.",))
      Return( NIL )
   End

   If ! (SEE->( dbSeek( xFilial( "SEE" ) + SE1->(E1_PORTADO+E1_AGEDEP+E1_CONTA) + "1  ", .F.  ) ))
      Iif(FindFunction("APMsgInfo"), APMsgInfo("Parametro bancário não está informado, por gentileza cadastre o parâmetro.",), MsgInfo("Parametro bancário não está informado, por gentileza cadastre o parâmetro.",))
      Return( NIL )
   End

   _nProc := 3


ElseIf ( _cBordero = "S" )

   If ! (SEE->( dbSeek( xFilial( "SEE" ) + SEA->EA_PORTADO + SEA->EA_AGEDEP + SEA->EA_NUMCON + "1  ", .F.  ) ))
      Iif(FindFunction("APMsgInfo"), APMsgInfo("Parametro bancário não está informado, por gentileza cadastre o parâmetro.",), MsgInfo("Parametro bancário não está informado, por gentileza cadastre o parâmetro.",))
      Return( NIL )
   End

End

If _nProc <> 0

   ProcRegua( _nProc )
   IncProc( "Aguarde, gerando boleto...")

End

nLocal       	:= If(fwGetProfString(cSession,"LOCAL","SERVER", .T. )=="SERVER",1,2 )
nOrientation 	:= If(fwGetProfString(cSession,"ORIENTATION","PORTRAIT", .T. )=="PORTRAIT",1,2)
nPrintType      := 6

If ( _cBordero = "N" )

   SE1->( dbSeek( xFilial( "SE1" ) + MV_PAR01 + MV_PAR02 ) )

End

If SE1->E1_FILIAL <> "9001"

   _cQry := "SELECT CLI.NOME,"
   _cQry += "CASE VDO.ID_VENDEDOR "
   _cQry += "  WHEN  5 THEN 'Andre'"
   _cQry += "  WHEN 25 THEN 'Elisa'"
   _cQry += "  WHEN 43 THEN 'Fernanda.Alves'"
   _cQry += "  WHEN 36 THEN 'Jessica'"
   _cQry += "  WHEN 40 THEN 'Joao.Ferreira'"
   _cQry += "  WHEN 34 THEN 'Marcos'"
   _cQry += "  WHEN  4 THEN 'Mauro'"
   _cQry += "  WHEN 24 THEN 'Ricardo.Lima'"
   _cQry += "  WHEN 23 THEN 'Ronaldo'"
   _cQry += "  WHEN  3 THEN 'Wagner'"
   _cQry += "  ELSE 'Corporativo'"
   _cQry += "END Vendedor, CTO.EMAIL "
   _cQry += "FROM TPCP.dbo.VENCTITULO VCT "
   _cQry += "LEFT OUTER JOIN TPCP.dbo.TITULO TIT ON TIT.ID_TITULO = VCT.ID_TITULO "
   _cQry += "LEFT OUTER JOIN TPCP.dbo.CLIENTE CLI ON CLI.ID_CLIENTE = TIT.ID_CLIENTE "
   _cQry += "LEFT OUTER JOIN TPCP.dbo.VENDEDOR VDO ON VDO.ID_VENDEDOR = CLI.ID_VENDEDOR "
   _cQry += "LEFT OUTER JOIN TPCP.dbo.CLIENTE_CONTATO CTO ON CLI.ID_CLIENTE = CTO.ID_CLIENTE AND NFE = 'S' "
   _cQry += "WHERE VCT.ID_VENCTITULO = " + Alltrim( Str( SE1->E1_IDBOLET, 9, 0 ) )

Else

   _cQry := "SELECT CLI.NOME,"
   _cQry += "CASE VDO.ID_VENDEDOR "
   _cQry += "  WHEN  5 THEN 'Andre'"
   _cQry += "  WHEN 25 THEN 'Elisa'"
   _cQry += "  WHEN 43 THEN 'Fernanda.Alves'"
   _cQry += "  WHEN 36 THEN 'Jessica'"
   _cQry += "  WHEN 40 THEN 'Joao.Ferreira'"
   _cQry += "  WHEN 34 THEN 'Marcos'"
   _cQry += "  WHEN  4 THEN 'Mauro'"
   _cQry += "  WHEN 24 THEN 'Ricardo.Lima'"
   _cQry += "  WHEN 23 THEN 'Ronaldo'"
   _cQry += "  WHEN  3 THEN 'Wagner'"
   _cQry += "  ELSE 'Corporativo'"
   _cQry += "END Vendedor, CTO.EMAIL "
   _cQry += "FROM [192.168.0.7].[BV].[dbo].[VENCTITULO] VCT "
   _cQry += "LEFT OUTER JOIN [192.168.0.7].[BV].[dbo].[TITULO] TIT ON TIT.ID_TITULO = VCT.ID_TITULO "
   _cQry += "LEFT OUTER JOIN TPCP.dbo.CLIENTE CLI ON CLI.ID_CLIENTE = TIT.ID_CLIENTE "
   _cQry += "LEFT OUTER JOIN TPCP.dbo.VENDEDOR VDO ON VDO.ID_VENDEDOR = CLI.ID_VENDEDOR "
   _cQry += "LEFT OUTER JOIN TPCP.dbo.CLIENTE_CONTATO CTO ON CLI.ID_CLIENTE = CTO.ID_CLIENTE AND NFE = 'S' "
   _cQry += "WHERE VCT.ID_VENCTITULO = " + Alltrim( Str( SE1->E1_IDBOLET, 9, 0 ) )

End

dbUseArea( .T. ,"TOPCONN",TcGenQry(,,_cQry),"TMP", .T. , .T. )

PreNota()

While ! ( TMP->( Eof() ) )

   _cCaminho := "C:\Boletos\" + alltrim( TMP->Vendedor ) + "\"
   _cMail    += alltrim( TMP->EMAIL )
   _cMail    += ";"
   _cFile    := iif( SE1->E1_FILIAL <> "9001", SE1->E1_NUM, "10" + Substr( SE1->E1_NUM, 3 ) ) + SE1->E1_PARCELA
   TMP->( dbSkip() )

End

TMP->( dbCloseArea() )

oPrint := FWMSPrinter():New("BoletoItau.Pdf", 6, lAdjustToLegacy, "C:\Spool\" , .T.  )

oPrint:SetResolution(78)
oPrint:SetPortrait()
oPrint:SetPaperSize(9)
oPrint:SetMargin(60,60,60,60)

nFlags := 1 + 8 + 16 + 32
oSetup := FWPrintSetup():New(nFlags, "Boleto Itaú")



oSetup:SetPropert(2   , nPrintType)
oSetup:SetPropert(3 , nOrientation)
oSetup:SetPropert(1 , nLocal)
oSetup:SetPropert(7      , {60,60,60,60})
oSetup:SetPropert(4   , 2)

oPrint:lServer := oSetup:GetProperty(1)==1



If oSetup:GetProperty(2) == 6
	oPrint:nDevice := 6



	fwWriteProfString(GetPrinterSession(),"DEFAULT", oSetup:aOptions[6], .T. )
	oPrint:cPrinter := oSetup:aOptions[6]
ElseIf oSetup:GetProperty(2) == 6
	oPrint:nDevice := 6



	oPrint:cPathPDF := oSetup:aOptions[6]
End

Private PixelX := oPrint:nLogPixelX()
Private PixelY := oPrint:nLogPixelY()

oPrint:cPathPDF := "C:\Spool\"
oPrint:SetViewPDF( .F.  )










oFont2n := TFont():New("Times New Roman",,10,, .T. ,,,,, .F.  )

oFont8  := TFont():New("Arial",9,9,, .F. ,,,, .T. , .F. )
oFont9  := TFont():New("Arial",9,11,, .F. ,,,, .T. , .F. )
oFont10 := TFont():New("Arial",9,10,, .T. ,,,, .T. , .F. )
oFont14n:= TFont():New("Arial",9,16,, .T. ,,,, .T. , .F. )
oFont15n:= TFont():New("Arial",9,17,, .T. ,,,, .T. , .F. )
oFont16 := TFont():New("Arial",9,18,, .F. ,,,, .T. , .F. )
oFont16n:= TFont():New("Arial",9,18,, .T. ,,,, .T. , .F. )
oFont24 := TFont():New("Arial",9,26,, .F. ,,,, .T. , .F. )

SA6->( dbSetOrder(1) )

WF7->( dbSeek( xFilial( "WF7" ) + "FINANCEIRO          ", .F.  ) )

oProcess := TWFProcess():New( "000002", "Envio Boleto" )
oProcess:oWF:cMailBox := "FINANCEIRO" + Space( Len( oProcess:oWF:cMailBox ) - 10 )


oProcess:NewTask( "Aprovação", "\WORKFLOW\WFEnvBol.htm" )

oProcess:cSubject  := "Boleto referente Nota "  + lTrim( Str( Val( SE1->E1_NUM ), 9, 0 ) )

oProcess:bReturn := "U_WFW120P( 1 )"
oProcess:bTimeOut := {{"U_WFW120P( 2 )",30, 0, 5 }}

oHTML := oProcess:oHTML

oHtml:ValByName( "empresa", rTrim( SM0->M0_NOMECOM ) )

oHtml:ValByName( "resp1", '<a href="mailto:norival@thermoglass.com.br"><code>norival@thermoglass.com.br</code></a>' )
oHtml:ValByName( "resp2", '<a href="mailto:iovanne@thermoglass.com.br"><code>iovanne@thermoglass.com.br</code></a>' )



While ! ( SE1->( Eof() ) ) .And.  ( SE1->E1_PREFIXO = MV_PAR01 ) .And.  ( SE1->E1_NUM     = MV_PAR02 )

	If ( SE1->E1_PARCELA < MV_PAR03 )

	   SE1->( dbSkip() )
	   Loop

	End

	If ( SE1->E1_PARCELA > MV_PAR04 )

	   SE1->( dbSkip() )
	   Loop

	End




	If Alltrim(SE1->E1_TIPO) <> "NF" .And.  Alltrim(SE1->E1_TIPO) <> "FT" .And.  Alltrim(SE1->E1_TIPO) <> "DP" .And.  Alltrim(SE1->E1_TIPO) <> "PRE"

	   SE1->( dbSkip() )
	   Loop

	End

	If ( SE1->E1_SALDO <= 0 )

	   SE1->( dbSkip() )
	   Loop

	End

    If ( _cBordero = "I" )

	   SA6->( dbSeek( xFilial( "SA6" ) + SE1->(E1_PORTADO+E1_AGEDEP+E1_CONTA)        , .F.  ) )
	   SEE->( dbSeek( xFilial( "SEE" ) + SE1->(E1_PORTADO+E1_AGEDEP+E1_CONTA) + "1  ", .F.  ) )

    ElseIf ( _cBordero = "S" )

	   SEE->( dbSeek( xFilial( "SEE" ) + SEA->EA_PORTADO + SEA->EA_AGEDEP + SEA->EA_NUMCON + "1  ", .F.  ) )

	End

    _cNossoNum := "109"

    If Empty( SE1->E1_IDCNAB )

       RecLock( "SE1", .F.  )

       If SE1->E1_IDBOLET <> 0

          SE1->E1_IDCNAB := Str( SE1->E1_IDBOLET, 6, 0 )

       Else

          SE1->E1_IDCNAB := GetSx8Num( "SE1", "E1_IDCNAB" )
          ConfirmSX8()

       End

       SE1->( dbUnLock() )

    End

    If Empty( SE1->E1_NUMBCO )

       RecLock( "SE1", .F.  )
       SE1->E1_NUMBCO := NossoNum()
       SE1->( dbUnLock() )

    End

    U_BoletoItau()

    _cNossoNum := StrZero( Val( SE1->E1_NUMBCO ), 9, 0 )

	dbSelectArea("SA1")
	dbSetOrder(1)
	SA1->( dbSeek(xFilial("SA1")+SE1->E1_CLIENTE+SE1->E1_LOJA, .F. ) )








	aDadosBanco  := { SA6->A6_COD	   	    ,					 "Banco Itaú S.A."      ,					 Alltrim(SA6->A6_AGENCIA),					 StrZero( Val( SA6->A6_NUMCON ), 5, 0 ),					 Alltrim(SA6->A6_DVCTA) ,					 "109"	                }

	If Empty(SA1->A1_ENDCOB)







		aDatSacado   := {AllTrim(SA1->A1_NOME)             ,		AllTrim(SA1->A1_COD )+"-"+SA1->A1_LOJA             ,		AllTrim(SA1->A1_END )+" - "+AllTrim(SA1->A1_BAIRRO),		AllTrim(SA1->A1_MUN )                              ,		SA1->A1_EST                                        ,		Transform( SA1->A1_CEP, "@R 99999-999" )           ,		Transform( SA1->A1_CGC, "@R 99.999.999/9999-99" )    }

	Else







		aDatSacado   := {AllTrim(SA1->A1_NOME)                ,		AllTrim(SA1->A1_COD )+"-"+SA1->A1_LOJA                ,		AllTrim(SA1->A1_ENDCOB)+" - "+AllTrim(SA1->A1_BAIRROC),		AllTrim(SA1->A1_MUNC)	                              ,		SA1->A1_ESTC	                                      ,		Transform( SA1->A1_CEPC, "@R 99999-999" )             ,		Transform( SA1->A1_CGC, "@R 99.999.999/9999-99" )      }

	End

	CB_RN_NN := Ret_cBarra(Subs(aDadosBanco[1],1,3)+"9",aDadosBanco[3],aDadosBanco[4],aDadosBanco[5],AllTrim(_cNossoNum),SE1->E1_SALDO,SE1->E1_VENCREA)




    aBolText := {"APÓS " + DtoC ( SE1->E1_VENCREA ) + ", COBRAR MULTA DE R$ " + ltrim( Transform( SE1->(E1_VALOR-E1_COFINS-E1_PIS)*.03, "@E 999,999.99")), "APÓS VENCIMENTO COBRAR R$ " + ltrim( Transform( SE1->(E1_VALOR-E1_COFINS-E1_PIS)*.002, "@E 999,999.99" )) + " POR DIA DE ATRASO", "Após vcto acesse http://www.itau.com.br/boletos para atualizar seu boleto" }










	aDadosTit := { AllTrim(iif( SE1->E1_FILIAL <> "9001", SE1->E1_NUM, "10" + Substr( SE1->E1_NUM, 3 )))+AllTrim(SE1->E1_PARCELA),	              SE1->E1_EMISSAO                              ,	              dDataBase                               	   ,	              SE1->E1_VENCREA                  			   ,	              SE1->E1_SALDO                 			   ,				  CB_RN_NN[3]                             	   ,				  SE1->E1_PREFIXO                              ,				  "DM"				 }

	If SE1->E1_VENCREA < dDataBase

	   _nDias := dDataBase - SE1->E1_VENCREA

	   _nJuros := ((SE1->E1_VALOR-SE1->E1_COFINS-SE1->E1_PIS) * 0.03) / 30
	   _nJuros *= _nDias
	   _nJuros += (SE1->E1_VALOR-SE1->E1_COFINS-SE1->E1_PIS)* 0.02

	   aDadosTit[ 5 ] += Round( _nJuros, 2 )
	   aDadosTit[ 4 ] := dDataBase

    End

	Impress(oPrint,aBitmap,aDadosEmp,aDadosTit,aDadosBanco,aDatSacado,aBolText,CB_RN_NN)
	n ++

    aAdd( (oHtml:ValByName( "t1.1" )), SE1->E1_NUM )
    aAdd( (oHtml:ValByName( "t1.2" )), rtrim(SE1->E1_PARCELA) )
    aAdd( (oHtml:ValByName( "t1.3" )), TRANSFORM( SE1->E1_EMISSAO,"@DE 99/99/9999" ) )
    aAdd( (oHtml:ValByName( "t1.4" )), TRANSFORM( SE1->E1_VENCREA,"@DE 99/99/9999" ) )
    aAdd( (oHtml:ValByName( "t1.5" )), TRANSFORM( SE1->E1_SALDO,"@E 99,999,999.99" ) )
    aAdd( (oHtml:ValByName( "t1.6" )), CB_RN_NN[2] )

	If SE1->E1_IDBOLET > 300000

	   _cUpd := "UPDATE [192.168.0.7].BV.dbo.VENCTITULO SET QdeBoleto = QdeBoleto + 1, ID_COBRANCA = " + Alltrim( Str( SA6->A6_IDCART, 3, 0  ) ) + ", ID_CONTA = "  + Alltrim( Str( SA6->A6_IDCONTA, 3, 0  ) )
	   _cUpd += " WHERE ID_VENCTITULO = " + Alltrim( Str( SE1->E1_IDBOLET, 9, 0 ) )

	Else

	   _cUpd := "UPDATE TPCP.dbo.VENCTITULO SET QdeBoleto = QdeBoleto + 1, ID_COBRANCA = " + Alltrim( Str( SA6->A6_IDCART, 3, 0  ) ) + ", ID_CONTA = "  + Alltrim( Str( SA6->A6_IDCONTA, 3, 0  ) )
	   _cUpd += " WHERE ID_VENCTITULO = " + Alltrim( Str( SE1->E1_IDBOLET, 9, 0 ) )

	End

	TCSQLExec( _cUpd )

	SE1->( dbSkip() )

	If ( _cBordero = "N" )

       IncProc()

    End

	i ++

End


oPrint:Print()
FreeObj( oPrint )
FreeObj( oSetup )



If File ( _cCaminho + _cFile + ".pdf" )

   fErase( _cCaminho + _cFile + ".pdf" )

End

If fRenameEx( "C:\Spool\BoletoItau.pdf", _cCaminho + _cFile + ".pdf" ) = -1

   Iif(FindFunction("APMsgStop"), APMsgStop("Falha na operação 3 : fError "+Str(fError(),4),), MsgStop("Falha na operação 3 : fError "+Str(fError(),4),))

End

CpyT2S( _cCaminho + _cFile + ".pdf", "\spool\" )

If _nProc <> 0

   IncProc( "Aguarde, enviando e-mail..." )

End

oProcess:AttachFile( "\spool\" + _cFile + ".pdf" )
oProcess:cPriority := " "
oProcess:cTo := _cMail

oProcess:Start()
OProcess:Finish()
OProcess:Free()

StartJob( "WFLauncher", GetEnvServer(), .F. , { "WFSndMsg", { cEmpAnt, cFilAnt, AllTrim( WF7->WF7_PASTA ), .T.  } } )

Return( NIL )











Static Function Impress(oPrint,aBitmap,aDadosEmp,aDadosTit,aDadosBanco,aDatSacado,aBolText,CB_RN_NN)
LOCAL i := 0

oPrint:StartPage()

aBmp 	:= "\system\Itau.bmp"
aBmp2 	:= "\system\lgrl010202.bmp"




If File(aBmp2)

	oPrint:SayBitmap( 0040,0100,aBmp2,0175,0100 )

Else

	oPrint:Say  (0084,100,aDadosBanco[2],oFont15n )

End

oPrint:Line (0710,100,0710,2300)
oPrint:Line (0710,550,0610, 550)
oPrint:Line (0710,800,0610, 800)



If File( aBmp )

   oPrint:SayBitmap( 0600,0100,aBmp,0100,0100 )
   oPrint:Say  (0670,240,"Banco Itaú SA",oFont10 )

Else

   oPrint:Say  (0644,100,aDadosBanco[2],oFont15n )

End

oPrint:Say  (0674,569,"341-7",oFont24 )
oPrint:Say  (0674,820,CB_RN_NN[2],oFont14n)

oPrint:Line (0810,100,0810,2300 )
oPrint:Line (0910,100,0910,2300 )
oPrint:Line (0980,100,0980,2300 )
oPrint:Line (1050,100,1050,2300 )

oPrint:Line (0910,500,1050,500)
oPrint:Line (0980,750,1050,750)
oPrint:Line (0910,1000,1050,1000)
oPrint:Line (0910,1350,0980,1350)
oPrint:Line (0910,1550,1050,1550)

oPrint:Say  (0740,100 ,"Local de Pagamento"                             ,oFont8)
oPrint:Say  (0755,400 ,"Pagável em qualquer Banco até o Vencimento."    ,oFont9)
oPrint:Say  (0795,400 ,"Após o Vencimento pague somente no Banco Itaú." ,oFont9)

oPrint:Say  (0740,1910,"Vencimento"                                     ,oFont8)
oPrint:Say  (0790,2010,DTOC(aDadosTit[4])                               ,oFont10)

oPrint:Say  (0840,100 ,"Cedente"                                        ,oFont8)
oPrint:Say  (0880,100 ,aDadosEmp[1]+"                  - "+aDadosEmp[6]	,oFont10)

oPrint:Say  (0830,1910,"Agência/Código Cedente"                         ,oFont8)
oPrint:Say  (0880,2010,aDadosBanco[3]+"/"+aDadosBanco[4]+"-"+aDadosBanco[5],oFont10)

oPrint:Say  (0940,100 ,"Data do Documento"                              ,oFont8)
oPrint:Say  (0970,100 ,DtoC(aDadosTit[2])                               ,oFont10)

oPrint:Say  (0940,505 ,"Nro.Documento"                                  ,oFont8)
oPrint:Say  (0970,605 ,iif(SEA->EA_FILIAL <> "9001",alltrim(aDadosTit[7])+aDadosTit[1],aDadosTit[1]) ,oFont10)

oPrint:Say  (0940,1005,"Espécie Doc."                                   ,oFont8)
oPrint:Say  (0970,1050,aDadosTit[8]										,oFont10)

oPrint:Say  (0940,1355,"Aceite"                                         ,oFont8)
oPrint:Say  (0970,1455,"N"                                             ,oFont10)

oPrint:Say  (0940,1555,"Data do Processamento"                          ,oFont8)
oPrint:Say  (0970,1655,DTOC(aDadosTit[3])                               ,oFont10)

oPrint:Say  (0940,1910,"Nosso Número"                                   ,oFont8)
oPrint:Say  (0970,2010,Substr(aDadosTit[6],1,3)+"/"+Substr(aDadosTit[6],4),oFont10)

oPrint:Say  (1010,100 ,"Uso do Banco"                                   ,oFont8)

oPrint:Say  (1010,505 ,"Carteira"                                       ,oFont8)
oPrint:Say  (1040,555 ,aDadosBanco[6]                                  	,oFont10)

oPrint:Say  (1010,755 ,"Espécie"                                        ,oFont8)
oPrint:Say  (1040,805 ,"R$"                                             ,oFont10)

oPrint:Say  (1010,1005,"Quantidade"                                     ,oFont8)
oPrint:Say  (1010,1555,"Valor"                                          ,oFont8)

oPrint:Say  (1010,1910,"(=)Valor do Documento"                          	,oFont8)
oPrint:Say  (1040,2010,AllTrim(Transform(aDadosTit[5],"@E 999,999,999.99")),oFont10)

oPrint:Say  (1080,100 ,"Instruções (Todas informações deste bloqueto são de exclusiva responsabilidade do cedente)",oFont8)
oPrint:Say  (1230,100 ,aBolText[1]                                       ,oFont10)
oPrint:Say  (1270,100 ,aBolText[2]                                       ,oFont10)
oPrint:Say  (1310,100 ,aBolText[3]                                       ,oFont10)

oPrint:Say  (1080,1910,"(-)Desconto/Abatimento"                         ,oFont8)
oPrint:Say  (1150,1910,"(-)Outras Deduções"                             ,oFont8)
oPrint:Say  (1220,1910,"(+)Mora/Multa"                                  ,oFont8)
oPrint:Say  (1290,1910,"(+)Outros Acréscimos"                           ,oFont8)
oPrint:Say  (1360,1910,"(=)Valor Cobrado"                               ,oFont8)

oPrint:Say  (1460,100 ,"Pagador:"                                         ,oFont8)
oPrint:Say  (1460,400 ,aDatSacado[1]+" ("+aDatSacado[2]+")"             ,oFont10)

If Len(Alltrim(aDatSacado[7])) = 18
	oPrint:Say  (1460,1850 ,"CNPJ: " + aDatSacado[7],oFont10)
Else
	oPrint:Say  (1460,1850 ,"CPF(MF): "+aDatSacado[7],oFont10)
End

oPrint:Say  (1513,100 ,"Endereço:"                                       ,oFont8)
oPrint:Say  (1513,400 ,aDatSacado[3]+" - "+aDatSacado[6]+" - "+aDatSacado[4]+" - "+aDatSacado[5],oFont10)

oPrint:Say  (1619,1850, aDadosEmp[6],oFont10)

oPrint:Say  (1635,100 ,"Sacador/Avalista"                               ,oFont8)
oPrint:Say  (1675,1500,"Autenticação Mecânica -"                        ,oFont8)
oPrint:Say  (1675,1900,"Recibo do Sacado"								,oFont10)

oPrint:Line (0710,1900,1400,1900 )
oPrint:Line (1120,1900,1120,2300 )
oPrint:Line (1190,1900,1190,2300 )
oPrint:Line (1260,1900,1260,2300 )
oPrint:Line (1330,1900,1330,2300 )
oPrint:Line (1400,100 ,1400,2300 )
oPrint:Line (1640,100 ,1640,2300 )

oPrint:Code128C(1790,100,Alltrim(CB_RN_NN[1]), nFontSize )

For i := 100 to 2300 step 50
	oPrint:Line( 1930, i, 1930, i+30)
next

oPrint:Line (2080,100,2080,2300)
oPrint:Line (2080,550,1980, 550)
oPrint:Line (2080,800,1980, 800)



If File(aBmp)

	oPrint:SayBitmap( 1970,0100,aBmp,0100,0100 )
	oPrint:Say  (2050,240,"Banco Itaú SA",oFont10 )

Else

	oPrint:Say  (2054,100,aDadosBanco[2],oFont15n )

EndIf

oPrint:Say  (2054,569,"341-7",oFont24 )
oPrint:Say  (2054,820,CB_RN_NN[2],oFont14n)

oPrint:Line (2180,100,2180,2300 )
oPrint:Line (2280,100,2280,2300 )
oPrint:Line (2350,100,2350,2300 )
oPrint:Line (2420,100,2420,2300 )

oPrint:Line (2280, 500,2420,500)
oPrint:Line (2350, 750,2420,750)
oPrint:Line (2280,1000,2420,1000)
oPrint:Line (2280,1350,2350,1350)
oPrint:Line (2280,1550,2420,1550)

oPrint:Say  (2105,100 ,"Local de Pagamento"                             ,oFont8)
oPrint:Say  (2125,400 ,"Pagável em qualquer Banco até o Vencimento."    ,oFont9)
oPrint:Say  (2165,400 ,"Após o Vencimento pague somente no Banco Itaú." ,oFont9)

oPrint:Say  (2110,1910,"Vencimento"                                     ,oFont8)
oPrint:Say  (2150,2010,DtoC(aDadosTit[4])                               ,oFont10)

oPrint:Say  (2210,100 ,"Cedente"                                        ,oFont8)
oPrint:Say  (2250,100 ,aDadosEmp[1]+"                  - "+aDadosEmp[6]	,oFont10)

oPrint:Say  (2210,1910,"Agência/Código Cedente"                         ,oFont8)
oPrint:Say  (2250,2010,aDadosBanco[3]+"/"+aDadosBanco[4]+"-"+aDadosBanco[5],oFont10)

oPrint:Say  (2305,100 ,"Data do Documento"                              ,oFont8)
oPrint:Say  (2340,100 ,DTOC(aDadosTit[2])                               ,oFont10)

oPrint:Say  (2305,505 ,"Nro.Documento"                                  ,oFont8)
oPrint:Say  (2340,605 ,iif(SEA->EA_FILIAL <> "9001",alltrim(aDadosTit[7])+aDadosTit[1],aDadosTit[1]),oFont10)

oPrint:Say  (2305,1005,"Espécie Doc."                                   ,oFont8)
oPrint:Say  (2340,1050,aDadosTit[8]										,oFont10)

oPrint:Say  (2305,1355,"Aceite"                                         ,oFont8)
oPrint:Say  (2340,1455,"N"                                             ,oFont10)

oPrint:Say  (2305,1555,"Data do Processamento"                          ,oFont8)
oPrint:Say  (2340,1655,DTOC(aDadosTit[3])                               ,oFont10)

oPrint:Say  (2305,1910,"Nosso Número"                                   ,oFont8)
oPrint:Say  (2340,2010,Substr(aDadosTit[6],1,3)+"/"+Substr(aDadosTit[6],4),oFont10)

oPrint:Say  (2380,100 ,"Uso do Banco"                                   ,oFont8)

oPrint:Say  (2380,505 ,"Carteira"                                       ,oFont8)
oPrint:Say  (2410,555 ,aDadosBanco[6]                                  	,oFont10)

oPrint:Say  (2380,755 ,"Espécie"                                        ,oFont8)
oPrint:Say  (2410,805 ,"R$"                                             ,oFont10)

oPrint:Say  (2380,1005,"Quantidade"                                     ,oFont8)
oPrint:Say  (2380,1555,"Valor"                                          ,oFont8)

oPrint:Say  (2380,1910,"(=)Valor do Documento"                        	,oFont8)
oPrint:Say  (2410,2010,AllTrim(Transform(aDadosTit[5],"@E 999,999,999.99")),oFont10)

oPrint:Say  (2460,100 ,"Instruções (Todas informações deste bloqueto são de exclusiva responsabilidade do cedente)",oFont8)
oPrint:Say  (2600,100 ,aBolText[1]  ,oFont10)
oPrint:Say  (2640,100 ,aBolText[2]  ,oFont10)
oPrint:Say  (2710,100 ,aBolText[3]                                       ,oFont10)

oPrint:Say  (2447,1910,"(-)Desconto/Abatimento"                         ,oFont8)
oPrint:Say  (2513,1910,"(-)Outras Deduções"                             ,oFont8)
oPrint:Say  (2587,1910,"(+)Mora/Multa"                                  ,oFont8)
oPrint:Say  (2657,1910,"(+)Outros Acréscimos"                           ,oFont8)
oPrint:Say  (2730,1910,"(=)Valor Cobrado"                               ,oFont8)

oPrint:Say  (2830,100 ,"Pagador:"                                       ,oFont8)
oPrint:Say  (2830,400 ,aDatSacado[1]+" ("+aDatSacado[2]+")"             ,oFont10)

If Len(Alltrim(aDatSacado[7])) = 18
	oPrint:Say  (2830,1850,"CNPJ: "+aDatSacado[7],oFont10)
Else
	oPrint:Say  (2830,1850,"CPF: "+aDatSacado[7],oFont10)
End

oPrint:Say  (2883,100 ,"Endereço:"                                       ,oFont8)
oPrint:Say  (2883,400 ,aDatSacado[3]+" - "+aDatSacado[6]+" - "+aDatSacado[4]+" - "+aDatSacado[5],oFont10)

oPrint:Say  (2989,1850 ,aDadosEmp[6],oFont10)

oPrint:Say  (3005,100 ,"Sacador/Avalista"                               ,oFont8)
oPrint:Say  (3045,1500,"Autenticação Mecânica -"                        ,oFont8)
oPrint:Say  (3045,1850,"Ficha de Compensação"                           ,oFont10)

oPrint:Line (2080,1900,2770,1900 )
oPrint:Line (2490,1900,2490,2300 )
oPrint:Line (2560,1900,2560,2300 )
oPrint:Line (2630,1900,2630,2300 )
oPrint:Line (2700,1900,2700,2300 )
oPrint:Line (2770,100 ,2770,2300 )

oPrint:Line (3010,100 ,3010,2300 )

oPrint:Code128C(3145,100,Alltrim(CB_RN_NN[1]), nFontSize )

oPrint:EndPage()

Return Nil










Static Function Modulo10(cData)
LOCAL L,D,P := 0
LOCAL B     := .F. 
L := Len(cData)
B := .T. 
D := 0
While L > 0
	P := Val(SubStr(cData, L, 1))
	If (B)
		P := P * 2
		If P > 9
			P := P - 9
		End
	End
	D := D + P
	L := L - 1
	B := !B
End
D := 10 - (Mod(D,10))
If D = 10
	D := 0
End
Return(D)










Static Function Modulo11(cData)
LOCAL L, D, P := 0
L := Len(cdata)
D := 0
P := 1
While L > 0
	P := P + 1
	D := D + (Val(SubStr(cData, L, 1)) * P)
	If P = 9
		P := 1
	End
	L := L - 1
End
D := 11 - (mod(D,11))
If (D == 0 .Or.  D == 1 .Or.  D == 10 .Or.  D == 11)
	D := 1
End
Return(D)





















Static Function Ret_cBarra(cBanco,cAgencia,cConta,cDacCC,cNroDoc,nValor,dVencto)

LOCAL bldocnufinal := strzero(val(cNroDoc),8)
LOCAL blvalorfinal := strzero(int(nValor*100),10)
LOCAL dvnn         := 0
LOCAL dvcb         := 0
LOCAL dv           := 0
LOCAL NN           := ""
LOCAL RN           := ""
LOCAL CB           := ""
LOCAL s            := ""
LOCAL _cfator      := strzero(dVencto - ctod("07/10/97"),4)
LOCAL _cCart	   := "109"


s    :=  cAgencia + cConta + _cCart + bldocnufinal
dvnn := modulo10(s)
NN   := _cCart + bldocnufinal + "-" + AllTrim(Str(dvnn))


s    := cBanco + _cfator + blvalorfinal + _cCart + bldocnufinal + AllTrim(Str(dvnn)) + cAgencia + cConta + cDacCC + "000"
dvcb := modulo11(s)
CB   := SubStr(s, 1, 4) + AllTrim(Str(dvcb)) + SubStr(s,5)












s    := cBanco + _cCart + SubStr(bldocnufinal,1,2)
dv   := modulo10(s)
RN   := SubStr(s, 1, 5) + "." + SubStr(s, 6, 4) + AllTrim(Str(dv)) + "  "







s    := SubStr(bldocnufinal, 3, 6) + AllTrim(Str(dvnn)) + SubStr(cAgencia, 1, 3)
dv   := modulo10(s)
RN   := RN + SubStr(s, 1, 5) + "." + SubStr(s, 6, 5) + AllTrim(Str(dv)) + "  "






s    := SubStr(cAgencia, 4, 1) + cConta + cDacCC + "000"
dv   := modulo10(s)
RN   := RN + SubStr(s, 1, 5) + "." + SubStr(s, 6, 5) + AllTrim(Str(dv)) + "  "



RN   := RN + AllTrim(Str(dvcb)) + "  "




RN   := RN + _cfator + StrZero(Int(nValor * 100),14-Len(_cfator))

Return({CB,RN,NN})











Static Function ValidPerg()

PRIVATE APERG := {},AALIASSX1:=GETAREA()



AADD(APERG,{CPERG  ,"01"		,"Prefixo?"     			,"Prefixo?"    		    	,"Prefixo?"     			,"mv_ch1"		,"C"		,3 				,0 				,0 				,"G"		,""			,"mv_par01"	,""			,""				,""				,""			,""			,""			,""				,""				,""			,""			,""			,""				,""				,""			,""			,""			,""				,""				,""			,""			,""			,""				,""				,""			,""   		,"S"		,""				,""})
AADD(APERG,{CPERG  ,"02"		,"Numero?"         		    ,"Numero?"                  ,"Numero?"          		,"mv_ch2"		,"C"		,6 				,0 				,0 				,"G"		,""			,"mv_par02"	,""			,""				,""				,""			,""			,""			,""				,""				,""			,""			,""			,""				,""				,""			,""			,""			,""				,""				,""			,""			,""			,""				,""				,""			,""   		,"S"		,""				,""})
AADD(APERG,{CPERG  ,"03"		,"Da Parcela?"     			,"Da Parcela?"		    	,"Da Parcela?"		    	,"mv_ch3"		,"C"		,1 			    ,0 				,0 				,"G"		,""			,"mv_par03"	,""			,""				,""				,""			,""			,""			,""				,""				,""			,""			,""			,""				,""				,""			,""			,""			,""				,""				,""			,""			,""			,""				,""				,""			,""   		,"S"		,""				,""})
AADD(APERG,{CPERG  ,"04"		,"Ate a Parcela?"    		,"Ate a Parcela?"     		,"Ate a Parcela?"     		,"mv_ch4"		,"C"		,1 			    ,0 				,0 				,"G"		,""			,"mv_par04"	,""			,""				,""				,""			,""			,""			,""				,""				,""			,""			,""			,""				,""				,""			,""			,""			,""				,""				,""			,""			,""			,""				,""				,""			,""   		,"S"		,""				,""})

DBSELECTAREA("SX1")
DBSETORDER(1)

_nLen := Len( aPerg )

for i := 1 To _nLen
	IF  !DBSEEK(CPERG+APERG[I,2])
		RECLOCK("SX1", .T. )
		FOR J := 1 TO FCOUNT()
			IF  j <= LEN(APERG[I])
				FIELDPUT(J,APERG[I,J])
			ENDIF
		NEXT
		MSUNLOCK()
	ENDIF
NEXT
RESTAREA(AALIASSX1)


RETURN()


Static Function PreNota()

If ( TMP->( Eof() ) )

   TMP->( dbCloseArea() )

   _cQry := "SELECT CLI.NOME,"
   _cQry += "CASE VDO.ID_VENDEDOR "
   _cQry += "  WHEN  5 THEN 'Andre'"
   _cQry += "  WHEN 25 THEN 'Elisa'"
   _cQry += "  WHEN 43 THEN 'Fernanda.Alves'"
   _cQry += "  WHEN 36 THEN 'Jessica'"
   _cQry += "  WHEN 40 THEN 'Joao.Ferreira'"
   _cQry += "  WHEN 34 THEN 'Marcos'"
   _cQry += "  WHEN  4 THEN 'Mauro'"
   _cQry += "  WHEN 24 THEN 'Ricardo.Lima'"
   _cQry += "  WHEN 23 THEN 'Ronaldo'"
   _cQry += "  WHEN  3 THEN 'Wagner'"
   _cQry += "  ELSE 'Corporativo'"
   _cQry += "END Vendedor, CTO.EMAIL "
   _cQry += "FROM TPCP.dbo.PRE_NOTA VCT "
   _cQry += "LEFT OUTER JOIN TPCP.dbo.CLIENTE CLI ON CLI.ID_CLIENTE = VCT.ID_CLIENTE "
   _cQry += "LEFT OUTER JOIN TPCP.dbo.VENDEDOR VDO ON VDO.ID_VENDEDOR = CLI.ID_VENDEDOR "
   _cQry += "LEFT OUTER JOIN TPCP.dbo.CLIENTE_CONTATO CTO ON CLI.ID_CLIENTE = CTO.ID_CLIENTE AND NFE = 'S' "
   _cQry += "WHERE VCT.NRO_NF = " + Alltrim( Str( Val(SE1->E1_NUM), 9, 0 ) )

   dbUseArea( .T. ,"TOPCONN",TcGenQry(,,_cQry),"TMP", .T. , .T. )

End

Return( NIL )